var _excluded = ["mainAxis", "crossAxis", "fallbackPlacements", "fallbackStrategy", "fallbackAxisSideDirection", "flipAlignment"],
  _excluded2 = ["mainAxis", "crossAxis", "limiter"],
  _excluded3 = ["apply"];
var _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11, _templateObject12, _templateObject13, _templateObject14, _templateObject15, _templateObject16, _templateObject17, _templateObject18, _templateObject19, _templateObject20, _templateObject21, _templateObject22, _templateObject23, _templateObject24, _templateObject25, _templateObject26, _templateObject27, _templateObject28, _templateObject29, _templateObject30, _templateObject31, _templateObject32, _templateObject33, _templateObject34, _templateObject35, _templateObject36;
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } } return target; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }
function _get() { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }
function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }
function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function _regeneratorRuntime() { "use strict"; _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }
function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }
function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }
function _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }
function _construct(t, e, r) { if (_isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments); var o = [null]; o.push.apply(o, e); var p = new (t.bind.apply(t, o))(); return r && _setPrototypeOf(p, r.prototype), p; }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function _isNativeFunction(fn) { try { return Function.toString.call(fn).indexOf("[native code]") !== -1; } catch (e) { return typeof fn === "function"; } }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e8) { throw _e8; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e9) { didErr = true; err = _e9; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
(function (_Symbol$metadata, _a$2$litPropertyMetad, _a$2$reactiveElementV, _t$1$litHtmlVersions, _globalThis$litElemen, _globalThis$litElemen2) {
  'use strict';

  /**
   * @license
   * Copyright 2019 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   */
  var t$2 = globalThis,
    e$8 = t$2.ShadowRoot && (void 0 === t$2.ShadyCSS || t$2.ShadyCSS.nativeShadow) && "adoptedStyleSheets" in Document.prototype && "replace" in CSSStyleSheet.prototype,
    s$3 = Symbol(),
    o$6 = new WeakMap();
  var n$5 = function () {
    function n(t, e, o) {
      _classCallCheck(this, n);
      if (this._$cssResult$ = !0, o !== s$3) throw Error("CSSResult is not constructable. Use 'unsafeCSS' or 'css' instead.");
      this.cssText = t, this.t = e;
    }
    return _createClass(n, [{
      key: "styleSheet",
      get: function get() {
        var t = this.o;
        var s = this.t;
        if (e$8 && void 0 === t) {
          var _e = void 0 !== s && 1 === s.length;
          _e && (t = o$6.get(s)), void 0 === t && ((this.o = t = new CSSStyleSheet()).replaceSync(this.cssText), _e && o$6.set(s, t));
        }
        return t;
      }
    }, {
      key: "toString",
      value: function toString() {
        return this.cssText;
      }
    }]);
  }();
  var r$5 = function r$5(t) {
      return new n$5("string" == typeof t ? t : t + "", void 0, s$3);
    },
    i$4 = function i$4(t) {
      for (var _len = arguments.length, e = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        e[_key - 1] = arguments[_key];
      }
      var o = 1 === t.length ? t[0] : e.reduce(function (e, s, o) {
        return e + function (t) {
          if (!0 === t._$cssResult$) return t.cssText;
          if ("number" == typeof t) return t;
          throw Error("Value passed to 'css' function must be a 'css' function result: " + t + ". Use 'unsafeCSS' to pass non-literal values, but take care to ensure page security.");
        }(s) + t[o + 1];
      }, t[0]);
      return new n$5(o, t, s$3);
    },
    S$1 = function S$1(s, o) {
      if (e$8) s.adoptedStyleSheets = o.map(function (t) {
        return t instanceof CSSStyleSheet ? t : t.styleSheet;
      });else {
        var _iterator = _createForOfIteratorHelper(o),
          _step;
        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var _e2 = _step.value;
            var _o = document.createElement("style"),
              _n = t$2.litNonce;
            void 0 !== _n && _o.setAttribute("nonce", _n), _o.textContent = _e2.cssText, s.appendChild(_o);
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
      }
    },
    c$2 = e$8 ? function (t) {
      return t;
    } : function (t) {
      return t instanceof CSSStyleSheet ? function (t) {
        var e = "";
        var _iterator2 = _createForOfIteratorHelper(t.cssRules),
          _step2;
        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
            var _s = _step2.value;
            e += _s.cssText;
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }
        return r$5(e);
      }(t) : t;
    };

  /**
   * @license
   * Copyright 2017 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   */
  var i$3 = Object.is,
    e$7 = Object.defineProperty,
    r$4 = Object.getOwnPropertyDescriptor,
    h$1 = Object.getOwnPropertyNames,
    o$5 = Object.getOwnPropertySymbols,
    n$4 = Object.getPrototypeOf,
    a$2 = globalThis,
    c$1 = a$2.trustedTypes,
    l$3 = c$1 ? c$1.emptyScript : "",
    p$1 = a$2.reactiveElementPolyfillSupport,
    d$1 = function d$1(t, s) {
      return t;
    },
    u$2 = {
      toAttribute: function toAttribute(t, s) {
        switch (s) {
          case Boolean:
            t = t ? l$3 : null;
            break;
          case Object:
          case Array:
            t = null == t ? t : JSON.stringify(t);
        }
        return t;
      },
      fromAttribute: function fromAttribute(t, s) {
        var i = t;
        switch (s) {
          case Boolean:
            i = null !== t;
            break;
          case Number:
            i = null === t ? null : Number(t);
            break;
          case Object:
          case Array:
            try {
              i = JSON.parse(t);
            } catch (t) {
              i = null;
            }
        }
        return i;
      }
    },
    f$2 = function f$2(t, s) {
      return !i$3(t, s);
    },
    y$1 = {
      attribute: !0,
      type: String,
      converter: u$2,
      reflect: !1,
      hasChanged: f$2
    };
  (_Symbol$metadata = Symbol.metadata) !== null && _Symbol$metadata !== void 0 ? _Symbol$metadata : Symbol.metadata = Symbol("metadata"), (_a$2$litPropertyMetad = a$2.litPropertyMetadata) !== null && _a$2$litPropertyMetad !== void 0 ? _a$2$litPropertyMetad : a$2.litPropertyMetadata = new WeakMap();
  var b = function (_HTMLElement) {
    function b() {
      var _this;
      _classCallCheck(this, b);
      _this = _callSuper(this, b), _this._$Ep = void 0, _this.isUpdatePending = !1, _this.hasUpdated = !1, _this._$Em = null, _this._$Ev();
      return _this;
    }
    _inherits(b, _HTMLElement);
    return _createClass(b, [{
      key: "_$Ev",
      value: function _$Ev() {
        var _this2 = this,
          _this$constructor$l;
        this._$ES = new Promise(function (t) {
          return _this2.enableUpdating = t;
        }), this._$AL = new Map(), this._$E_(), this.requestUpdate(), (_this$constructor$l = this.constructor.l) === null || _this$constructor$l === void 0 ? void 0 : _this$constructor$l.forEach(function (t) {
          return t(_this2);
        });
      }
    }, {
      key: "addController",
      value: function addController(t) {
        var _this$_$EO, _t$hostConnected;
        ((_this$_$EO = this._$EO) !== null && _this$_$EO !== void 0 ? _this$_$EO : this._$EO = new Set()).add(t), void 0 !== this.renderRoot && this.isConnected && ((_t$hostConnected = t.hostConnected) === null || _t$hostConnected === void 0 ? void 0 : _t$hostConnected.call(t));
      }
    }, {
      key: "removeController",
      value: function removeController(t) {
        var _this$_$EO2;
        (_this$_$EO2 = this._$EO) === null || _this$_$EO2 === void 0 || _this$_$EO2["delete"](t);
      }
    }, {
      key: "_$E_",
      value: function _$E_() {
        var t = new Map(),
          s = this.constructor.elementProperties;
        var _iterator3 = _createForOfIteratorHelper(s.keys()),
          _step3;
        try {
          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
            var _i = _step3.value;
            this.hasOwnProperty(_i) && (t.set(_i, this[_i]), delete this[_i]);
          }
        } catch (err) {
          _iterator3.e(err);
        } finally {
          _iterator3.f();
        }
        t.size > 0 && (this._$Ep = t);
      }
    }, {
      key: "createRenderRoot",
      value: function createRenderRoot() {
        var _this$shadowRoot;
        var t = (_this$shadowRoot = this.shadowRoot) !== null && _this$shadowRoot !== void 0 ? _this$shadowRoot : this.attachShadow(this.constructor.shadowRootOptions);
        return S$1(t, this.constructor.elementStyles), t;
      }
    }, {
      key: "connectedCallback",
      value: function connectedCallback() {
        var _this$renderRoot, _this$_$EO3;
        (_this$renderRoot = this.renderRoot) !== null && _this$renderRoot !== void 0 ? _this$renderRoot : this.renderRoot = this.createRenderRoot(), this.enableUpdating(!0), (_this$_$EO3 = this._$EO) === null || _this$_$EO3 === void 0 ? void 0 : _this$_$EO3.forEach(function (t) {
          var _t$hostConnected2;
          return (_t$hostConnected2 = t.hostConnected) === null || _t$hostConnected2 === void 0 ? void 0 : _t$hostConnected2.call(t);
        });
      }
    }, {
      key: "enableUpdating",
      value: function enableUpdating(t) {}
    }, {
      key: "disconnectedCallback",
      value: function disconnectedCallback() {
        var _this$_$EO4;
        (_this$_$EO4 = this._$EO) === null || _this$_$EO4 === void 0 || _this$_$EO4.forEach(function (t) {
          var _t$hostDisconnected;
          return (_t$hostDisconnected = t.hostDisconnected) === null || _t$hostDisconnected === void 0 ? void 0 : _t$hostDisconnected.call(t);
        });
      }
    }, {
      key: "attributeChangedCallback",
      value: function attributeChangedCallback(t, s, i) {
        this._$AK(t, i);
      }
    }, {
      key: "_$EC",
      value: function _$EC(t, s) {
        var i = this.constructor.elementProperties.get(t),
          e = this.constructor._$Eu(t, i);
        if (void 0 !== e && !0 === i.reflect) {
          var _i$converter;
          var _r = (void 0 !== ((_i$converter = i.converter) === null || _i$converter === void 0 ? void 0 : _i$converter.toAttribute) ? i.converter : u$2).toAttribute(s, i.type);
          this._$Em = t, null == _r ? this.removeAttribute(e) : this.setAttribute(e, _r), this._$Em = null;
        }
      }
    }, {
      key: "_$AK",
      value: function _$AK(t, s) {
        var i = this.constructor,
          e = i._$Eh.get(t);
        if (void 0 !== e && this._$Em !== e) {
          var _t$converter;
          var _t = i.getPropertyOptions(e),
            _r2 = "function" == typeof _t.converter ? {
              fromAttribute: _t.converter
            } : void 0 !== ((_t$converter = _t.converter) === null || _t$converter === void 0 ? void 0 : _t$converter.fromAttribute) ? _t.converter : u$2;
          this._$Em = e, this[e] = _r2.fromAttribute(s, _t.type), this._$Em = null;
        }
      }
    }, {
      key: "requestUpdate",
      value: function requestUpdate(t, s, i) {
        if (void 0 !== t) {
          var _i2, _i$hasChanged;
          if ((_i2 = i) !== null && _i2 !== void 0 ? _i2 : i = this.constructor.getPropertyOptions(t), !((_i$hasChanged = i.hasChanged) !== null && _i$hasChanged !== void 0 ? _i$hasChanged : f$2)(this[t], s)) return;
          this.P(t, s, i);
        }
        !1 === this.isUpdatePending && (this._$ES = this._$ET());
      }
    }, {
      key: "P",
      value: function P(t, s, i) {
        var _this$_$Ej;
        this._$AL.has(t) || this._$AL.set(t, s), !0 === i.reflect && this._$Em !== t && ((_this$_$Ej = this._$Ej) !== null && _this$_$Ej !== void 0 ? _this$_$Ej : this._$Ej = new Set()).add(t);
      }
    }, {
      key: "_$ET",
      value: function () {
        var _$ET2 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee() {
          var t;
          return _regeneratorRuntime().wrap(function _callee$(_context) {
            while (1) switch (_context.prev = _context.next) {
              case 0:
                this.isUpdatePending = !0;
                _context.prev = 1;
                _context.next = 4;
                return this._$ES;
              case 4:
                _context.next = 9;
                break;
              case 6:
                _context.prev = 6;
                _context.t0 = _context["catch"](1);
                Promise.reject(_context.t0);
              case 9:
                t = this.scheduleUpdate();
                _context.t1 = null != t;
                if (!_context.t1) {
                  _context.next = 14;
                  break;
                }
                _context.next = 14;
                return t;
              case 14:
                return _context.abrupt("return", !this.isUpdatePending);
              case 15:
              case "end":
                return _context.stop();
            }
          }, _callee, this, [[1, 6]]);
        }));
        function _$ET() {
          return _$ET2.apply(this, arguments);
        }
        return _$ET;
      }()
    }, {
      key: "scheduleUpdate",
      value: function scheduleUpdate() {
        return this.performUpdate();
      }
    }, {
      key: "performUpdate",
      value: function performUpdate() {
        if (!this.isUpdatePending) return;
        if (!this.hasUpdated) {
          var _this$renderRoot2;
          if ((_this$renderRoot2 = this.renderRoot) !== null && _this$renderRoot2 !== void 0 ? _this$renderRoot2 : this.renderRoot = this.createRenderRoot(), this._$Ep) {
            var _iterator4 = _createForOfIteratorHelper(this._$Ep),
              _step4;
            try {
              for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
                var _step4$value = _slicedToArray(_step4.value, 2),
                  _t2 = _step4$value[0],
                  _s2 = _step4$value[1];
                this[_t2] = _s2;
              }
            } catch (err) {
              _iterator4.e(err);
            } finally {
              _iterator4.f();
            }
            this._$Ep = void 0;
          }
          var _t3 = this.constructor.elementProperties;
          if (_t3.size > 0) {
            var _iterator5 = _createForOfIteratorHelper(_t3),
              _step5;
            try {
              for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
                var _step5$value = _slicedToArray(_step5.value, 2),
                  _s3 = _step5$value[0],
                  _i3 = _step5$value[1];
                !0 !== _i3.wrapped || this._$AL.has(_s3) || void 0 === this[_s3] || this.P(_s3, this[_s3], _i3);
              }
            } catch (err) {
              _iterator5.e(err);
            } finally {
              _iterator5.f();
            }
          }
        }
        var t = !1;
        var s = this._$AL;
        try {
          var _this$_$EO5;
          t = this.shouldUpdate(s), t ? (this.willUpdate(s), (_this$_$EO5 = this._$EO) !== null && _this$_$EO5 !== void 0 && _this$_$EO5.forEach(function (t) {
            var _t$hostUpdate;
            return (_t$hostUpdate = t.hostUpdate) === null || _t$hostUpdate === void 0 ? void 0 : _t$hostUpdate.call(t);
          }), this.update(s)) : this._$EU();
        } catch (s) {
          throw t = !1, this._$EU(), s;
        }
        t && this._$AE(s);
      }
    }, {
      key: "willUpdate",
      value: function willUpdate(t) {}
    }, {
      key: "_$AE",
      value: function _$AE(t) {
        var _this$_$EO6;
        (_this$_$EO6 = this._$EO) !== null && _this$_$EO6 !== void 0 && _this$_$EO6.forEach(function (t) {
          var _t$hostUpdated;
          return (_t$hostUpdated = t.hostUpdated) === null || _t$hostUpdated === void 0 ? void 0 : _t$hostUpdated.call(t);
        }), this.hasUpdated || (this.hasUpdated = !0, this.firstUpdated(t)), this.updated(t);
      }
    }, {
      key: "_$EU",
      value: function _$EU() {
        this._$AL = new Map(), this.isUpdatePending = !1;
      }
    }, {
      key: "updateComplete",
      get: function get() {
        return this.getUpdateComplete();
      }
    }, {
      key: "getUpdateComplete",
      value: function getUpdateComplete() {
        return this._$ES;
      }
    }, {
      key: "shouldUpdate",
      value: function shouldUpdate(t) {
        return !0;
      }
    }, {
      key: "update",
      value: function update(t) {
        var _this3 = this;
        this._$Ej && (this._$Ej = this._$Ej.forEach(function (t) {
          return _this3._$EC(t, _this3[t]);
        })), this._$EU();
      }
    }, {
      key: "updated",
      value: function updated(t) {}
    }, {
      key: "firstUpdated",
      value: function firstUpdated(t) {}
    }], [{
      key: "addInitializer",
      value: function addInitializer(t) {
        var _this$l;
        this._$Ei(), ((_this$l = this.l) !== null && _this$l !== void 0 ? _this$l : this.l = []).push(t);
      }
    }, {
      key: "observedAttributes",
      get: function get() {
        return this.finalize(), this._$Eh && _toConsumableArray(this._$Eh.keys());
      }
    }, {
      key: "createProperty",
      value: function createProperty(t) {
        var s = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : y$1;
        if (s.state && (s.attribute = !1), this._$Ei(), this.elementProperties.set(t, s), !s.noAccessor) {
          var _i4 = Symbol(),
            _r3 = this.getPropertyDescriptor(t, _i4, s);
          void 0 !== _r3 && e$7(this.prototype, t, _r3);
        }
      }
    }, {
      key: "getPropertyDescriptor",
      value: function getPropertyDescriptor(t, s, i) {
        var _r$;
        var _ref2 = (_r$ = r$4(this.prototype, t)) !== null && _r$ !== void 0 ? _r$ : {
            get: function get() {
              return this[s];
            },
            set: function set(t) {
              this[s] = t;
            }
          },
          e = _ref2.get,
          h = _ref2.set;
        return {
          get: function get() {
            return e === null || e === void 0 ? void 0 : e.call(this);
          },
          set: function set(s) {
            var r = e === null || e === void 0 ? void 0 : e.call(this);
            h.call(this, s), this.requestUpdate(t, r, i);
          },
          configurable: !0,
          enumerable: !0
        };
      }
    }, {
      key: "getPropertyOptions",
      value: function getPropertyOptions(t) {
        var _this$elementProperti;
        return (_this$elementProperti = this.elementProperties.get(t)) !== null && _this$elementProperti !== void 0 ? _this$elementProperti : y$1;
      }
    }, {
      key: "_$Ei",
      value: function _$Ei() {
        if (this.hasOwnProperty(d$1("elementProperties"))) return;
        var t = n$4(this);
        t.finalize(), void 0 !== t.l && (this.l = _toConsumableArray(t.l)), this.elementProperties = new Map(t.elementProperties);
      }
    }, {
      key: "finalize",
      value: function finalize() {
        if (this.hasOwnProperty(d$1("finalized"))) return;
        if (this.finalized = !0, this._$Ei(), this.hasOwnProperty(d$1("properties"))) {
          var _t4 = this.properties,
            _s4 = [].concat(_toConsumableArray(h$1(_t4)), _toConsumableArray(o$5(_t4)));
          var _iterator6 = _createForOfIteratorHelper(_s4),
            _step6;
          try {
            for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {
              var _i5 = _step6.value;
              this.createProperty(_i5, _t4[_i5]);
            }
          } catch (err) {
            _iterator6.e(err);
          } finally {
            _iterator6.f();
          }
        }
        var t = this[Symbol.metadata];
        if (null !== t) {
          var _s5 = litPropertyMetadata.get(t);
          if (void 0 !== _s5) {
            var _iterator7 = _createForOfIteratorHelper(_s5),
              _step7;
            try {
              for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {
                var _step7$value = _slicedToArray(_step7.value, 2),
                  _t5 = _step7$value[0],
                  _i6 = _step7$value[1];
                this.elementProperties.set(_t5, _i6);
              }
            } catch (err) {
              _iterator7.e(err);
            } finally {
              _iterator7.f();
            }
          }
        }
        this._$Eh = new Map();
        var _iterator8 = _createForOfIteratorHelper(this.elementProperties),
          _step8;
        try {
          for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {
            var _step8$value = _slicedToArray(_step8.value, 2),
              _t6 = _step8$value[0],
              _s6 = _step8$value[1];
            var _i7 = this._$Eu(_t6, _s6);
            void 0 !== _i7 && this._$Eh.set(_i7, _t6);
          }
        } catch (err) {
          _iterator8.e(err);
        } finally {
          _iterator8.f();
        }
        this.elementStyles = this.finalizeStyles(this.styles);
      }
    }, {
      key: "finalizeStyles",
      value: function finalizeStyles(s) {
        var i = [];
        if (Array.isArray(s)) {
          var _e3 = new Set(s.flat(1 / 0).reverse());
          var _iterator9 = _createForOfIteratorHelper(_e3),
            _step9;
          try {
            for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {
              var _s7 = _step9.value;
              i.unshift(c$2(_s7));
            }
          } catch (err) {
            _iterator9.e(err);
          } finally {
            _iterator9.f();
          }
        } else void 0 !== s && i.push(c$2(s));
        return i;
      }
    }, {
      key: "_$Eu",
      value: function _$Eu(t, s) {
        var i = s.attribute;
        return !1 === i ? void 0 : "string" == typeof i ? i : "string" == typeof t ? t.toLowerCase() : void 0;
      }
    }]);
  }(_wrapNativeSuper(HTMLElement));
  b.elementStyles = [], b.shadowRootOptions = {
    mode: "open"
  }, b[d$1("elementProperties")] = new Map(), b[d$1("finalized")] = new Map(), p$1 !== null && p$1 !== void 0 && p$1({
    ReactiveElement: b
  }), ((_a$2$reactiveElementV = a$2.reactiveElementVersions) !== null && _a$2$reactiveElementV !== void 0 ? _a$2$reactiveElementV : a$2.reactiveElementVersions = []).push("2.0.4");

  /**
   * @license
   * Copyright 2017 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   */
  var t$1 = globalThis,
    i$2 = t$1.trustedTypes,
    s$2 = i$2 ? i$2.createPolicy("lit-html", {
      createHTML: function createHTML(t) {
        return t;
      }
    }) : void 0,
    e$6 = "$lit$",
    h = "lit$".concat(Math.random().toFixed(9).slice(2), "$"),
    o$4 = "?" + h,
    n$3 = "<".concat(o$4, ">"),
    r$3 = document,
    l$2 = function l$2() {
      return r$3.createComment("");
    },
    c = function c(t) {
      return null === t || "object" != _typeof(t) && "function" != typeof t;
    },
    a$1 = Array.isArray,
    u$1 = function u$1(t) {
      return a$1(t) || "function" == typeof (t === null || t === void 0 ? void 0 : t[Symbol.iterator]);
    },
    d = "[ \t\n\f\r]",
    f$1 = /<(?:(!--|\/[^a-zA-Z])|(\/?[a-zA-Z][^>\s]*)|(\/?$))/g,
    v = /-->/g,
    _ = />/g,
    m$1 = RegExp(">|".concat(d, "(?:([^\\s\"'>=/]+)(").concat(d, "*=").concat(d, "*(?:[^ \t\n\f\r\"'<>=]|(\"|')|))|$)"), "g"),
    p = /'/g,
    g = /"/g,
    $ = /^(?:script|style|textarea|title)$/i,
    y = function y(t) {
      return function (i) {
        for (var _len2 = arguments.length, s = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
          s[_key2 - 1] = arguments[_key2];
        }
        return {
          _$litType$: t,
          strings: i,
          values: s
        };
      };
    },
    x = y(1),
    w = Symbol["for"]("lit-noChange"),
    T = Symbol["for"]("lit-nothing"),
    A = new WeakMap(),
    E = r$3.createTreeWalker(r$3, 129);
  function C(t, i) {
    if (!Array.isArray(t) || !t.hasOwnProperty("raw")) throw Error("invalid template strings array");
    return void 0 !== s$2 ? s$2.createHTML(i) : i;
  }
  var P = function P(t, i) {
    var s = t.length - 1,
      o = [];
    var r,
      l = 2 === i ? "<svg>" : "",
      c = f$1;
    for (var _i8 = 0; _i8 < s; _i8++) {
      var _s8 = t[_i8];
      var _a3 = void 0,
        _u = void 0,
        _d = -1,
        _y = 0;
      for (; _y < _s8.length && (c.lastIndex = _y, _u = c.exec(_s8), null !== _u);) {
        var _r4;
        _y = c.lastIndex, c === f$1 ? "!--" === _u[1] ? c = v : void 0 !== _u[1] ? c = _ : void 0 !== _u[2] ? ($.test(_u[2]) && (r = RegExp("</" + _u[2], "g")), c = m$1) : void 0 !== _u[3] && (c = m$1) : c === m$1 ? ">" === _u[0] ? (c = (_r4 = r) !== null && _r4 !== void 0 ? _r4 : f$1, _d = -1) : void 0 === _u[1] ? _d = -2 : (_d = c.lastIndex - _u[2].length, _a3 = _u[1], c = void 0 === _u[3] ? m$1 : '"' === _u[3] ? g : p) : c === g || c === p ? c = m$1 : c === v || c === _ ? c = f$1 : (c = m$1, r = void 0);
      }
      var _x = c === m$1 && t[_i8 + 1].startsWith("/>") ? " " : "";
      l += c === f$1 ? _s8 + n$3 : _d >= 0 ? (o.push(_a3), _s8.slice(0, _d) + e$6 + _s8.slice(_d) + h + _x) : _s8 + h + (-2 === _d ? _i8 : _x);
    }
    return [C(t, l + (t[s] || "<?>") + (2 === i ? "</svg>" : "")), o];
  };
  var V = function () {
    function V(_ref3, n) {
      var t = _ref3.strings,
        s = _ref3._$litType$;
      _classCallCheck(this, V);
      var r;
      this.parts = [];
      var c = 0,
        a = 0;
      var u = t.length - 1,
        d = this.parts,
        _P = P(t, s),
        _P2 = _slicedToArray(_P, 2),
        f = _P2[0],
        v = _P2[1];
      if (this.el = V.createElement(f, n), E.currentNode = this.el.content, 2 === s) {
        var _t7 = this.el.content.firstChild;
        _t7.replaceWith.apply(_t7, _toConsumableArray(_t7.childNodes));
      }
      for (; null !== (r = E.nextNode()) && d.length < u;) {
        if (1 === r.nodeType) {
          if (r.hasAttributes()) {
            var _iterator10 = _createForOfIteratorHelper(r.getAttributeNames()),
              _step10;
            try {
              for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {
                var _t8 = _step10.value;
                if (_t8.endsWith(e$6)) {
                  var _i9 = v[a++],
                    _s9 = r.getAttribute(_t8).split(h),
                    _e4 = /([.?@])?(.*)/.exec(_i9);
                  d.push({
                    type: 1,
                    index: c,
                    name: _e4[2],
                    strings: _s9,
                    ctor: "." === _e4[1] ? k : "?" === _e4[1] ? H : "@" === _e4[1] ? I : R
                  }), r.removeAttribute(_t8);
                } else _t8.startsWith(h) && (d.push({
                  type: 6,
                  index: c
                }), r.removeAttribute(_t8));
              }
            } catch (err) {
              _iterator10.e(err);
            } finally {
              _iterator10.f();
            }
          }
          if ($.test(r.tagName)) {
            var _t9 = r.textContent.split(h),
              _s10 = _t9.length - 1;
            if (_s10 > 0) {
              r.textContent = i$2 ? i$2.emptyScript : "";
              for (var _i10 = 0; _i10 < _s10; _i10++) r.append(_t9[_i10], l$2()), E.nextNode(), d.push({
                type: 2,
                index: ++c
              });
              r.append(_t9[_s10], l$2());
            }
          }
        } else if (8 === r.nodeType) if (r.data === o$4) d.push({
          type: 2,
          index: c
        });else {
          var _t10 = -1;
          for (; -1 !== (_t10 = r.data.indexOf(h, _t10 + 1));) d.push({
            type: 7,
            index: c
          }), _t10 += h.length - 1;
        }
        c++;
      }
    }
    return _createClass(V, null, [{
      key: "createElement",
      value: function createElement(t, i) {
        var s = r$3.createElement("template");
        return s.innerHTML = t, s;
      }
    }]);
  }();
  function N(t, i) {
    var _s$_$Co, _h, _h2, _h2$_$AO, _s$_$Co2;
    var s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : t;
    var e = arguments.length > 3 ? arguments[3] : undefined;
    if (i === w) return i;
    var h = void 0 !== e ? (_s$_$Co = s._$Co) === null || _s$_$Co === void 0 ? void 0 : _s$_$Co[e] : s._$Cl;
    var o = c(i) ? void 0 : i._$litDirective$;
    return ((_h = h) === null || _h === void 0 ? void 0 : _h.constructor) !== o && ((_h2 = h) !== null && _h2 !== void 0 && (_h2$_$AO = _h2._$AO) !== null && _h2$_$AO !== void 0 && _h2$_$AO.call(_h2, !1), void 0 === o ? h = void 0 : (h = new o(t), h._$AT(t, s, e)), void 0 !== e ? ((_s$_$Co2 = s._$Co) !== null && _s$_$Co2 !== void 0 ? _s$_$Co2 : s._$Co = [])[e] = h : s._$Cl = h), void 0 !== h && (i = N(t, h._$AS(t, i.values), h, e)), i;
  }
  var S = function () {
    function S(t, i) {
      _classCallCheck(this, S);
      this._$AV = [], this._$AN = void 0, this._$AD = t, this._$AM = i;
    }
    return _createClass(S, [{
      key: "parentNode",
      get: function get() {
        return this._$AM.parentNode;
      }
    }, {
      key: "_$AU",
      get: function get() {
        return this._$AM._$AU;
      }
    }, {
      key: "u",
      value: function u(t) {
        var _t$creationScope;
        var _this$_$AD = this._$AD,
          i = _this$_$AD.el.content,
          s = _this$_$AD.parts,
          e = ((_t$creationScope = t === null || t === void 0 ? void 0 : t.creationScope) !== null && _t$creationScope !== void 0 ? _t$creationScope : r$3).importNode(i, !0);
        E.currentNode = e;
        var h = E.nextNode(),
          o = 0,
          n = 0,
          l = s[0];
        for (; void 0 !== l;) {
          var _l;
          if (o === l.index) {
            var _i11 = void 0;
            2 === l.type ? _i11 = new M(h, h.nextSibling, this, t) : 1 === l.type ? _i11 = new l.ctor(h, l.name, l.strings, this, t) : 6 === l.type && (_i11 = new L(h, this, t)), this._$AV.push(_i11), l = s[++n];
          }
          o !== ((_l = l) === null || _l === void 0 ? void 0 : _l.index) && (h = E.nextNode(), o++);
        }
        return E.currentNode = r$3, e;
      }
    }, {
      key: "p",
      value: function p(t) {
        var i = 0;
        var _iterator11 = _createForOfIteratorHelper(this._$AV),
          _step11;
        try {
          for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {
            var _s11 = _step11.value;
            void 0 !== _s11 && (void 0 !== _s11.strings ? (_s11._$AI(t, _s11, i), i += _s11.strings.length - 2) : _s11._$AI(t[i])), i++;
          }
        } catch (err) {
          _iterator11.e(err);
        } finally {
          _iterator11.f();
        }
      }
    }]);
  }();
  var M = function () {
    function M(t, i, s, e) {
      var _e$isConnected;
      _classCallCheck(this, M);
      this.type = 2, this._$AH = T, this._$AN = void 0, this._$AA = t, this._$AB = i, this._$AM = s, this.options = e, this._$Cv = (_e$isConnected = e === null || e === void 0 ? void 0 : e.isConnected) !== null && _e$isConnected !== void 0 ? _e$isConnected : !0;
    }
    return _createClass(M, [{
      key: "_$AU",
      get: function get() {
        var _this$_$AM$_$AU, _this$_$AM;
        return (_this$_$AM$_$AU = (_this$_$AM = this._$AM) === null || _this$_$AM === void 0 ? void 0 : _this$_$AM._$AU) !== null && _this$_$AM$_$AU !== void 0 ? _this$_$AM$_$AU : this._$Cv;
      }
    }, {
      key: "parentNode",
      get: function get() {
        var _t11;
        var t = this._$AA.parentNode;
        var i = this._$AM;
        return void 0 !== i && 11 === ((_t11 = t) === null || _t11 === void 0 ? void 0 : _t11.nodeType) && (t = i.parentNode), t;
      }
    }, {
      key: "startNode",
      get: function get() {
        return this._$AA;
      }
    }, {
      key: "endNode",
      get: function get() {
        return this._$AB;
      }
    }, {
      key: "_$AI",
      value: function _$AI(t) {
        var i = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this;
        t = N(this, t, i), c(t) ? t === T || null == t || "" === t ? (this._$AH !== T && this._$AR(), this._$AH = T) : t !== this._$AH && t !== w && this._(t) : void 0 !== t._$litType$ ? this.$(t) : void 0 !== t.nodeType ? this.T(t) : u$1(t) ? this.k(t) : this._(t);
      }
    }, {
      key: "S",
      value: function S(t) {
        return this._$AA.parentNode.insertBefore(t, this._$AB);
      }
    }, {
      key: "T",
      value: function T(t) {
        this._$AH !== t && (this._$AR(), this._$AH = this.S(t));
      }
    }, {
      key: "_",
      value: function _(t) {
        this._$AH !== T && c(this._$AH) ? this._$AA.nextSibling.data = t : this.T(r$3.createTextNode(t)), this._$AH = t;
      }
    }, {
      key: "$",
      value: function $(t) {
        var _this$_$AH;
        var i = t.values,
          s = t._$litType$,
          e = "number" == typeof s ? this._$AC(t) : (void 0 === s.el && (s.el = V.createElement(C(s.h, s.h[0]), this.options)), s);
        if (((_this$_$AH = this._$AH) === null || _this$_$AH === void 0 ? void 0 : _this$_$AH._$AD) === e) this._$AH.p(i);else {
          var _t12 = new S(e, this),
            _s12 = _t12.u(this.options);
          _t12.p(i), this.T(_s12), this._$AH = _t12;
        }
      }
    }, {
      key: "_$AC",
      value: function _$AC(t) {
        var i = A.get(t.strings);
        return void 0 === i && A.set(t.strings, i = new V(t)), i;
      }
    }, {
      key: "k",
      value: function k(t) {
        a$1(this._$AH) || (this._$AH = [], this._$AR());
        var i = this._$AH;
        var s,
          e = 0;
        var _iterator12 = _createForOfIteratorHelper(t),
          _step12;
        try {
          for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {
            var _h3 = _step12.value;
            e === i.length ? i.push(s = new M(this.S(l$2()), this.S(l$2()), this, this.options)) : s = i[e], s._$AI(_h3), e++;
          }
        } catch (err) {
          _iterator12.e(err);
        } finally {
          _iterator12.f();
        }
        e < i.length && (this._$AR(s && s._$AB.nextSibling, e), i.length = e);
      }
    }, {
      key: "_$AR",
      value: function _$AR() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._$AA.nextSibling;
        var i = arguments.length > 1 ? arguments[1] : undefined;
        for ((_this$_$AP = this._$AP) === null || _this$_$AP === void 0 ? void 0 : _this$_$AP.call(this, !1, !0, i); t && t !== this._$AB;) {
          var _this$_$AP;
          var _i12 = t.nextSibling;
          t.remove(), t = _i12;
        }
      }
    }, {
      key: "setConnected",
      value: function setConnected(t) {
        var _this$_$AP2;
        void 0 === this._$AM && (this._$Cv = t, (_this$_$AP2 = this._$AP) === null || _this$_$AP2 === void 0 ? void 0 : _this$_$AP2.call(this, t));
      }
    }]);
  }();
  var R = function () {
    function R(t, i, s, e, h) {
      _classCallCheck(this, R);
      this.type = 1, this._$AH = T, this._$AN = void 0, this.element = t, this.name = i, this._$AM = e, this.options = h, s.length > 2 || "" !== s[0] || "" !== s[1] ? (this._$AH = Array(s.length - 1).fill(new String()), this.strings = s) : this._$AH = T;
    }
    return _createClass(R, [{
      key: "tagName",
      get: function get() {
        return this.element.tagName;
      }
    }, {
      key: "_$AU",
      get: function get() {
        return this._$AM._$AU;
      }
    }, {
      key: "_$AI",
      value: function _$AI(t) {
        var i = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this;
        var s = arguments.length > 2 ? arguments[2] : undefined;
        var e = arguments.length > 3 ? arguments[3] : undefined;
        var h = this.strings;
        var o = !1;
        if (void 0 === h) t = N(this, t, i, 0), o = !c(t) || t !== this._$AH && t !== w, o && (this._$AH = t);else {
          var _e5 = t;
          var _n2, _r5;
          for (t = h[0], _n2 = 0; _n2 < h.length - 1; _n2++) {
            var _r6;
            _r5 = N(this, _e5[s + _n2], i, _n2), _r5 === w && (_r5 = this._$AH[_n2]), o || (o = !c(_r5) || _r5 !== this._$AH[_n2]), _r5 === T ? t = T : t !== T && (t += ((_r6 = _r5) !== null && _r6 !== void 0 ? _r6 : "") + h[_n2 + 1]), this._$AH[_n2] = _r5;
          }
        }
        o && !e && this.j(t);
      }
    }, {
      key: "j",
      value: function j(t) {
        t === T ? this.element.removeAttribute(this.name) : this.element.setAttribute(this.name, t !== null && t !== void 0 ? t : "");
      }
    }]);
  }();
  var k = function (_R) {
    function k() {
      var _this4;
      _classCallCheck(this, k);
      _this4 = _callSuper(this, k, arguments), _this4.type = 3;
      return _this4;
    }
    _inherits(k, _R);
    return _createClass(k, [{
      key: "j",
      value: function j(t) {
        this.element[this.name] = t === T ? void 0 : t;
      }
    }]);
  }(R);
  var H = function (_R2) {
    function H() {
      var _this5;
      _classCallCheck(this, H);
      _this5 = _callSuper(this, H, arguments), _this5.type = 4;
      return _this5;
    }
    _inherits(H, _R2);
    return _createClass(H, [{
      key: "j",
      value: function j(t) {
        this.element.toggleAttribute(this.name, !!t && t !== T);
      }
    }]);
  }(R);
  var I = function (_R3) {
    function I(t, i, s, e, h) {
      var _this6;
      _classCallCheck(this, I);
      _this6 = _callSuper(this, I, [t, i, s, e, h]), _this6.type = 5;
      return _this6;
    }
    _inherits(I, _R3);
    return _createClass(I, [{
      key: "_$AI",
      value: function _$AI(t) {
        var _N;
        var i = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this;
        if ((t = (_N = N(this, t, i, 0)) !== null && _N !== void 0 ? _N : T) === w) return;
        var s = this._$AH,
          e = t === T && s !== T || t.capture !== s.capture || t.once !== s.once || t.passive !== s.passive,
          h = t !== T && (s === T || e);
        e && this.element.removeEventListener(this.name, this, s), h && this.element.addEventListener(this.name, this, t), this._$AH = t;
      }
    }, {
      key: "handleEvent",
      value: function handleEvent(t) {
        var _this$options$host, _this$options;
        "function" == typeof this._$AH ? this._$AH.call((_this$options$host = (_this$options = this.options) === null || _this$options === void 0 ? void 0 : _this$options.host) !== null && _this$options$host !== void 0 ? _this$options$host : this.element, t) : this._$AH.handleEvent(t);
      }
    }]);
  }(R);
  var L = function () {
    function L(t, i, s) {
      _classCallCheck(this, L);
      this.element = t, this.type = 6, this._$AN = void 0, this._$AM = i, this.options = s;
    }
    return _createClass(L, [{
      key: "_$AU",
      get: function get() {
        return this._$AM._$AU;
      }
    }, {
      key: "_$AI",
      value: function _$AI(t) {
        N(this, t);
      }
    }]);
  }();
  var Z = t$1.litHtmlPolyfillSupport;
  Z !== null && Z !== void 0 && Z(V, M), ((_t$1$litHtmlVersions = t$1.litHtmlVersions) !== null && _t$1$litHtmlVersions !== void 0 ? _t$1$litHtmlVersions : t$1.litHtmlVersions = []).push("3.1.3");
  var j = function j(t, i, s) {
    var _s$renderBefore;
    var e = (_s$renderBefore = s === null || s === void 0 ? void 0 : s.renderBefore) !== null && _s$renderBefore !== void 0 ? _s$renderBefore : i;
    var h = e._$litPart$;
    if (void 0 === h) {
      var _s$renderBefore2;
      var _t13 = (_s$renderBefore2 = s === null || s === void 0 ? void 0 : s.renderBefore) !== null && _s$renderBefore2 !== void 0 ? _s$renderBefore2 : null;
      e._$litPart$ = h = new M(i.insertBefore(l$2(), _t13), _t13, void 0, s !== null && s !== void 0 ? s : {});
    }
    return h._$AI(t), h;
  };

  /**
   * @license
   * Copyright 2017 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   */
  var s$1 = function (_b2) {
    function s() {
      var _this7;
      _classCallCheck(this, s);
      _this7 = _callSuper(this, s, arguments), _this7.renderOptions = {
        host: _assertThisInitialized(_this7)
      }, _this7._$Do = void 0;
      return _this7;
    }
    _inherits(s, _b2);
    return _createClass(s, [{
      key: "createRenderRoot",
      value: function createRenderRoot() {
        var _this$renderOptions, _this$renderOptions$r;
        var t = _get(_getPrototypeOf(s.prototype), "createRenderRoot", this).call(this);
        return (_this$renderOptions$r = (_this$renderOptions = this.renderOptions).renderBefore) !== null && _this$renderOptions$r !== void 0 ? _this$renderOptions$r : _this$renderOptions.renderBefore = t.firstChild, t;
      }
    }, {
      key: "update",
      value: function update(t) {
        var i = this.render();
        this.hasUpdated || (this.renderOptions.isConnected = this.isConnected), _get(_getPrototypeOf(s.prototype), "update", this).call(this, t), this._$Do = j(i, this.renderRoot, this.renderOptions);
      }
    }, {
      key: "connectedCallback",
      value: function connectedCallback() {
        var _this$_$Do;
        _get(_getPrototypeOf(s.prototype), "connectedCallback", this).call(this), (_this$_$Do = this._$Do) === null || _this$_$Do === void 0 ? void 0 : _this$_$Do.setConnected(!0);
      }
    }, {
      key: "disconnectedCallback",
      value: function disconnectedCallback() {
        var _this$_$Do2;
        _get(_getPrototypeOf(s.prototype), "disconnectedCallback", this).call(this), (_this$_$Do2 = this._$Do) === null || _this$_$Do2 === void 0 ? void 0 : _this$_$Do2.setConnected(!1);
      }
    }, {
      key: "render",
      value: function render() {
        return w;
      }
    }]);
  }(b);
  s$1._$litElement$ = !0, s$1["finalized"] = !0, (_globalThis$litElemen = globalThis.litElementHydrateSupport) === null || _globalThis$litElemen === void 0 ? void 0 : _globalThis$litElemen.call(globalThis, {
    LitElement: s$1
  });
  var r$2 = globalThis.litElementPolyfillSupport;
  r$2 === null || r$2 === void 0 || r$2({
    LitElement: s$1
  });
  ((_globalThis$litElemen2 = globalThis.litElementVersions) !== null && _globalThis$litElemen2 !== void 0 ? _globalThis$litElemen2 : globalThis.litElementVersions = []).push("4.0.5");
  var visually_hidden_styles_default = i$4(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  :host(:not(:focus-within)) {\n    position: absolute !important;\n    width: 1px !important;\n    height: 1px !important;\n    clip: rect(0 0 0 0) !important;\n    clip-path: inset(50%) !important;\n    border: none !important;\n    overflow: hidden !important;\n    white-space: nowrap !important;\n    padding: 0 !important;\n  }\n"])));
  var component_styles_default = i$4(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n  :host {\n    box-sizing: border-box;\n  }\n\n  :host *,\n  :host *::before,\n  :host *::after {\n    box-sizing: inherit;\n  }\n\n  [hidden] {\n    display: none !important;\n  }\n"])));
  var __defProp = Object.defineProperty;
  var __defProps = Object.defineProperties;
  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
  var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
  var __getOwnPropSymbols = Object.getOwnPropertySymbols;
  var __hasOwnProp = Object.prototype.hasOwnProperty;
  var __propIsEnum = Object.prototype.propertyIsEnumerable;
  var __defNormalProp = function __defNormalProp(obj, key, value) {
    return key in obj ? __defProp(obj, key, {
      enumerable: true,
      configurable: true,
      writable: true,
      value: value
    }) : obj[key] = value;
  };
  var __spreadValues = function __spreadValues(a, b) {
    for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);
    if (__getOwnPropSymbols) {
      var _iterator13 = _createForOfIteratorHelper(__getOwnPropSymbols(b)),
        _step13;
      try {
        for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {
          var prop = _step13.value;
          if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);
        }
      } catch (err) {
        _iterator13.e(err);
      } finally {
        _iterator13.f();
      }
    }
    return a;
  };
  var __spreadProps = function __spreadProps(a, b) {
    return __defProps(a, __getOwnPropDescs(b));
  };
  var __decorateClass = function __decorateClass(decorators, target, key, kind) {
    var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
    for (var i = decorators.length - 1, decorator; i >= 0; i--) if (decorator = decorators[i]) result = (kind ? decorator(target, key, result) : decorator(result)) || result;
    if (kind && result) __defProp(target, key, result);
    return result;
  };

  /**
   * @license
   * Copyright 2017 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   */
  var o$3 = {
      attribute: !0,
      type: String,
      converter: u$2,
      reflect: !1,
      hasChanged: f$2
    },
    r$1 = function r$1() {
      var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : o$3;
      var e = arguments.length > 1 ? arguments[1] : undefined;
      var r = arguments.length > 2 ? arguments[2] : undefined;
      var n = r.kind,
        i = r.metadata;
      var s = globalThis.litPropertyMetadata.get(i);
      if (void 0 === s && globalThis.litPropertyMetadata.set(i, s = new Map()), s.set(r.name, t), "accessor" === n) {
        var _o2 = r.name;
        return {
          set: function set(r) {
            var n = e.get.call(this);
            e.set.call(this, r), this.requestUpdate(_o2, n, t);
          },
          init: function init(e) {
            return void 0 !== e && this.P(_o2, void 0, t), e;
          }
        };
      }
      if ("setter" === n) {
        var _o3 = r.name;
        return function (r) {
          var n = this[_o3];
          e.call(this, r), this.requestUpdate(_o3, n, t);
        };
      }
      throw Error("Unsupported decorator location: " + n);
    };
  function n$2(t) {
    return function (e, o) {
      return "object" == _typeof(o) ? r$1(t, e, o) : function (t, e, o) {
        var r = e.hasOwnProperty(o);
        return e.constructor.createProperty(o, r ? _objectSpread(_objectSpread({}, t), {}, {
          wrapped: !0
        }) : t), r ? Object.getOwnPropertyDescriptor(e, o) : void 0;
      }(t, e, o);
    };
  }

  /**
   * @license
   * Copyright 2017 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   */
  function r(r) {
    return n$2(_objectSpread(_objectSpread({}, r), {}, {
      state: !0,
      attribute: !1
    }));
  }

  /**
   * @license
   * Copyright 2017 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   */
  var e$5 = function e$5(e, t, c) {
    return c.configurable = !0, c.enumerable = !0, Reflect.decorate && "object" != _typeof(t) && Object.defineProperty(e, t, c), c;
  };

  /**
   * @license
   * Copyright 2017 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   */
  function e$4(e, r) {
    return function (n, s, i) {
      var o = function o(t) {
        var _t$renderRoot$querySe, _t$renderRoot;
        return (_t$renderRoot$querySe = (_t$renderRoot = t.renderRoot) === null || _t$renderRoot === void 0 ? void 0 : _t$renderRoot.querySelector(e)) !== null && _t$renderRoot$querySe !== void 0 ? _t$renderRoot$querySe : null;
      };
      return e$5(n, s, {
        get: function get() {
          return o(this);
        }
      });
    };
  }
  var ShoelaceElement = function (_s$) {
    function ShoelaceElement() {
      var _this8;
      _classCallCheck(this, ShoelaceElement);
      _this8 = _callSuper(this, ShoelaceElement);
      Object.entries(_this8.constructor.dependencies).forEach(function (_ref4) {
        var _ref5 = _slicedToArray(_ref4, 2),
          name = _ref5[0],
          component = _ref5[1];
        _this8.constructor.define(name, component);
      });
      return _this8;
    }
    _inherits(ShoelaceElement, _s$);
    return _createClass(ShoelaceElement, [{
      key: "emit",
      value: function emit(name, options) {
        var event = new CustomEvent(name, __spreadValues({
          bubbles: true,
          cancelable: false,
          composed: true,
          detail: {}
        }, options));
        this.dispatchEvent(event);
        return event;
      }
    }], [{
      key: "define",
      value: function define(name) {
        var elementConstructor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this;
        var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
        var currentlyRegisteredConstructor = customElements.get(name);
        if (!currentlyRegisteredConstructor) {
          customElements.define(name, function (_elementConstructor) {
            function _class() {
              _classCallCheck(this, _class);
              return _callSuper(this, _class, arguments);
            }
            _inherits(_class, _elementConstructor);
            return _createClass(_class);
          }(elementConstructor), options);
          return;
        }
        var newVersion = " (unknown version)";
        var existingVersion = newVersion;
        if ("version" in elementConstructor && elementConstructor.version) {
          newVersion = " v" + elementConstructor.version;
        }
        if ("version" in currentlyRegisteredConstructor && currentlyRegisteredConstructor.version) {
          existingVersion = " v" + currentlyRegisteredConstructor.version;
        }
        if (newVersion && existingVersion && newVersion === existingVersion) {
          return;
        }
        console.warn("Attempted to register <".concat(name, ">").concat(newVersion, ", but <").concat(name, ">").concat(existingVersion, " has already been registered."));
      }
    }]);
  }(s$1);
  ShoelaceElement.version = "2.14.0";
  ShoelaceElement.dependencies = {};
  __decorateClass([n$2()], ShoelaceElement.prototype, "dir", 2);
  __decorateClass([n$2()], ShoelaceElement.prototype, "lang", 2);
  var SlVisuallyHidden = function (_ShoelaceElement) {
    function SlVisuallyHidden() {
      _classCallCheck(this, SlVisuallyHidden);
      return _callSuper(this, SlVisuallyHidden, arguments);
    }
    _inherits(SlVisuallyHidden, _ShoelaceElement);
    return _createClass(SlVisuallyHidden, [{
      key: "render",
      value: function render() {
        return x(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([" <slot></slot> "])));
      }
    }]);
  }(ShoelaceElement);
  SlVisuallyHidden.styles = [component_styles_default, visually_hidden_styles_default];
  var form_control_styles_default = i$4(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["\n  .form-control .form-control__label {\n    display: none;\n  }\n\n  .form-control .form-control__help-text {\n    display: none;\n  }\n\n  /* Label */\n  .form-control--has-label .form-control__label {\n    display: inline-block;\n    color: var(--sl-input-label-color);\n    margin-bottom: var(--sl-spacing-3x-small);\n  }\n\n  .form-control--has-label.form-control--small .form-control__label {\n    font-size: var(--sl-input-label-font-size-small);\n  }\n\n  .form-control--has-label.form-control--medium .form-control__label {\n    font-size: var(--sl-input-label-font-size-medium);\n  }\n\n  .form-control--has-label.form-control--large .form-control__label {\n    font-size: var(--sl-input-label-font-size-large);\n  }\n\n  :host([required]) .form-control--has-label .form-control__label::after {\n    content: var(--sl-input-required-content);\n    margin-inline-start: var(--sl-input-required-content-offset);\n    color: var(--sl-input-required-content-color);\n  }\n\n  /* Help text */\n  .form-control--has-help-text .form-control__help-text {\n    display: block;\n    color: var(--sl-input-help-text-color);\n    margin-top: var(--sl-spacing-3x-small);\n  }\n\n  .form-control--has-help-text.form-control--small .form-control__help-text {\n    font-size: var(--sl-input-help-text-font-size-small);\n  }\n\n  .form-control--has-help-text.form-control--medium .form-control__help-text {\n    font-size: var(--sl-input-help-text-font-size-medium);\n  }\n\n  .form-control--has-help-text.form-control--large .form-control__help-text {\n    font-size: var(--sl-input-help-text-font-size-large);\n  }\n\n  .form-control--has-help-text.form-control--radio-group .form-control__help-text {\n    margin-top: var(--sl-spacing-2x-small);\n  }\n"])));
  var input_styles_default = i$4(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral(["\n  :host {\n    display: block;\n  }\n\n  .input {\n    flex: 1 1 auto;\n    display: inline-flex;\n    align-items: stretch;\n    justify-content: start;\n    position: relative;\n    width: 100%;\n    font-family: var(--sl-input-font-family);\n    font-weight: var(--sl-input-font-weight);\n    letter-spacing: var(--sl-input-letter-spacing);\n    vertical-align: middle;\n    overflow: hidden;\n    cursor: text;\n    transition:\n      var(--sl-transition-fast) color,\n      var(--sl-transition-fast) border,\n      var(--sl-transition-fast) box-shadow,\n      var(--sl-transition-fast) background-color;\n  }\n\n  /* Standard inputs */\n  .input--standard {\n    background-color: var(--sl-input-background-color);\n    border: solid var(--sl-input-border-width) var(--sl-input-border-color);\n  }\n\n  .input--standard:hover:not(.input--disabled) {\n    background-color: var(--sl-input-background-color-hover);\n    border-color: var(--sl-input-border-color-hover);\n  }\n\n  .input--standard.input--focused:not(.input--disabled) {\n    background-color: var(--sl-input-background-color-focus);\n    border-color: var(--sl-input-border-color-focus);\n    box-shadow: 0 0 0 var(--sl-focus-ring-width) var(--sl-input-focus-ring-color);\n  }\n\n  .input--standard.input--focused:not(.input--disabled) .input__control {\n    color: var(--sl-input-color-focus);\n  }\n\n  .input--standard.input--disabled {\n    background-color: var(--sl-input-background-color-disabled);\n    border-color: var(--sl-input-border-color-disabled);\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n\n  .input--standard.input--disabled .input__control {\n    color: var(--sl-input-color-disabled);\n  }\n\n  .input--standard.input--disabled .input__control::placeholder {\n    color: var(--sl-input-placeholder-color-disabled);\n  }\n\n  /* Filled inputs */\n  .input--filled {\n    border: none;\n    background-color: var(--sl-input-filled-background-color);\n    color: var(--sl-input-color);\n  }\n\n  .input--filled:hover:not(.input--disabled) {\n    background-color: var(--sl-input-filled-background-color-hover);\n  }\n\n  .input--filled.input--focused:not(.input--disabled) {\n    background-color: var(--sl-input-filled-background-color-focus);\n    outline: var(--sl-focus-ring);\n    outline-offset: var(--sl-focus-ring-offset);\n  }\n\n  .input--filled.input--disabled {\n    background-color: var(--sl-input-filled-background-color-disabled);\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n\n  .input__control {\n    flex: 1 1 auto;\n    font-family: inherit;\n    font-size: inherit;\n    font-weight: inherit;\n    min-width: 0;\n    height: 100%;\n    color: var(--sl-input-color);\n    border: none;\n    background: inherit;\n    box-shadow: none;\n    padding: 0;\n    margin: 0;\n    cursor: inherit;\n    -webkit-appearance: none;\n  }\n\n  .input__control::-webkit-search-decoration,\n  .input__control::-webkit-search-cancel-button,\n  .input__control::-webkit-search-results-button,\n  .input__control::-webkit-search-results-decoration {\n    -webkit-appearance: none;\n  }\n\n  .input__control:-webkit-autofill,\n  .input__control:-webkit-autofill:hover,\n  .input__control:-webkit-autofill:focus,\n  .input__control:-webkit-autofill:active {\n    box-shadow: 0 0 0 var(--sl-input-height-large) var(--sl-input-background-color-hover) inset !important;\n    -webkit-text-fill-color: var(--sl-color-primary-500);\n    caret-color: var(--sl-input-color);\n  }\n\n  .input--filled .input__control:-webkit-autofill,\n  .input--filled .input__control:-webkit-autofill:hover,\n  .input--filled .input__control:-webkit-autofill:focus,\n  .input--filled .input__control:-webkit-autofill:active {\n    box-shadow: 0 0 0 var(--sl-input-height-large) var(--sl-input-filled-background-color) inset !important;\n  }\n\n  .input__control::placeholder {\n    color: var(--sl-input-placeholder-color);\n    user-select: none;\n    -webkit-user-select: none;\n  }\n\n  .input:hover:not(.input--disabled) .input__control {\n    color: var(--sl-input-color-hover);\n  }\n\n  .input__control:focus {\n    outline: none;\n  }\n\n  .input__prefix,\n  .input__suffix {\n    display: inline-flex;\n    flex: 0 0 auto;\n    align-items: center;\n    cursor: default;\n  }\n\n  .input__prefix ::slotted(sl-icon),\n  .input__suffix ::slotted(sl-icon) {\n    color: var(--sl-input-icon-color);\n  }\n\n  /*\n   * Size modifiers\n   */\n\n  .input--small {\n    border-radius: var(--sl-input-border-radius-small);\n    font-size: var(--sl-input-font-size-small);\n    height: var(--sl-input-height-small);\n  }\n\n  .input--small .input__control {\n    height: calc(var(--sl-input-height-small) - var(--sl-input-border-width) * 2);\n    padding: 0 var(--sl-input-spacing-small);\n  }\n\n  .input--small .input__clear,\n  .input--small .input__password-toggle {\n    width: calc(1em + var(--sl-input-spacing-small) * 2);\n  }\n\n  .input--small .input__prefix ::slotted(*) {\n    margin-inline-start: var(--sl-input-spacing-small);\n  }\n\n  .input--small .input__suffix ::slotted(*) {\n    margin-inline-end: var(--sl-input-spacing-small);\n  }\n\n  .input--medium {\n    border-radius: var(--sl-input-border-radius-medium);\n    font-size: var(--sl-input-font-size-medium);\n    height: var(--sl-input-height-medium);\n  }\n\n  .input--medium .input__control {\n    height: calc(var(--sl-input-height-medium) - var(--sl-input-border-width) * 2);\n    padding: 0 var(--sl-input-spacing-medium);\n  }\n\n  .input--medium .input__clear,\n  .input--medium .input__password-toggle {\n    width: calc(1em + var(--sl-input-spacing-medium) * 2);\n  }\n\n  .input--medium .input__prefix ::slotted(*) {\n    margin-inline-start: var(--sl-input-spacing-medium);\n  }\n\n  .input--medium .input__suffix ::slotted(*) {\n    margin-inline-end: var(--sl-input-spacing-medium);\n  }\n\n  .input--large {\n    border-radius: var(--sl-input-border-radius-large);\n    font-size: var(--sl-input-font-size-large);\n    height: var(--sl-input-height-large);\n  }\n\n  .input--large .input__control {\n    height: calc(var(--sl-input-height-large) - var(--sl-input-border-width) * 2);\n    padding: 0 var(--sl-input-spacing-large);\n  }\n\n  .input--large .input__clear,\n  .input--large .input__password-toggle {\n    width: calc(1em + var(--sl-input-spacing-large) * 2);\n  }\n\n  .input--large .input__prefix ::slotted(*) {\n    margin-inline-start: var(--sl-input-spacing-large);\n  }\n\n  .input--large .input__suffix ::slotted(*) {\n    margin-inline-end: var(--sl-input-spacing-large);\n  }\n\n  /*\n   * Pill modifier\n   */\n\n  .input--pill.input--small {\n    border-radius: var(--sl-input-height-small);\n  }\n\n  .input--pill.input--medium {\n    border-radius: var(--sl-input-height-medium);\n  }\n\n  .input--pill.input--large {\n    border-radius: var(--sl-input-height-large);\n  }\n\n  /*\n   * Clearable + Password Toggle\n   */\n\n  .input__clear:not(.input__clear--visible) {\n    visibility: hidden;\n  }\n\n  .input__clear,\n  .input__password-toggle {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    font-size: inherit;\n    color: var(--sl-input-icon-color);\n    border: none;\n    background: none;\n    padding: 0;\n    transition: var(--sl-transition-fast) color;\n    cursor: pointer;\n  }\n\n  .input__clear:hover,\n  .input__password-toggle:hover {\n    color: var(--sl-input-icon-color-hover);\n  }\n\n  .input__clear:focus,\n  .input__password-toggle:focus {\n    outline: none;\n  }\n\n  .input--empty .input__clear {\n    visibility: hidden;\n  }\n\n  /* Don't show the browser's password toggle in Edge */\n  ::-ms-reveal {\n    display: none;\n  }\n\n  /* Hide the built-in number spinner */\n  .input--no-spin-buttons input[type='number']::-webkit-outer-spin-button,\n  .input--no-spin-buttons input[type='number']::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    display: none;\n  }\n\n  .input--no-spin-buttons input[type='number'] {\n    -moz-appearance: textfield;\n  }\n"])));
  var defaultValue = function defaultValue() {
    var propertyName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "value";
    return function (proto, key) {
      var ctor = proto.constructor;
      var attributeChangedCallback = ctor.prototype.attributeChangedCallback;
      ctor.prototype.attributeChangedCallback = function (name, old, value) {
        var _a;
        var options = ctor.getPropertyOptions(propertyName);
        var attributeName = typeof options.attribute === "string" ? options.attribute : propertyName;
        if (name === attributeName) {
          var converter = options.converter || u$2;
          var fromAttribute = typeof converter === "function" ? converter : (_a = converter == null ? void 0 : converter.fromAttribute) != null ? _a : u$2.fromAttribute;
          var newValue = fromAttribute(value, options.type);
          if (this[propertyName] !== newValue) {
            this[key] = newValue;
          }
        }
        attributeChangedCallback.call(this, name, old, value);
      };
    };
  };
  var formCollections = new WeakMap();
  var reportValidityOverloads = new WeakMap();
  var checkValidityOverloads = new WeakMap();
  var userInteractedControls = new WeakSet();
  var interactions = new WeakMap();
  var FormControlController = function () {
    function FormControlController(host, options) {
      var _this9 = this;
      _classCallCheck(this, FormControlController);
      this.handleFormData = function (event) {
        var disabled = _this9.options.disabled(_this9.host);
        var name = _this9.options.name(_this9.host);
        var value = _this9.options.value(_this9.host);
        var isButton = _this9.host.tagName.toLowerCase() === "sl-button";
        if (_this9.host.isConnected && !disabled && !isButton && typeof name === "string" && name.length > 0 && typeof value !== "undefined") {
          if (Array.isArray(value)) {
            value.forEach(function (val) {
              event.formData.append(name, val.toString());
            });
          } else {
            event.formData.append(name, value.toString());
          }
        }
      };
      this.handleFormSubmit = function (event) {
        var _a;
        var disabled = _this9.options.disabled(_this9.host);
        var reportValidity = _this9.options.reportValidity;
        if (_this9.form && !_this9.form.noValidate) {
          (_a = formCollections.get(_this9.form)) == null ? void 0 : _a.forEach(function (control) {
            _this9.setUserInteracted(control, true);
          });
        }
        if (_this9.form && !_this9.form.noValidate && !disabled && !reportValidity(_this9.host)) {
          event.preventDefault();
          event.stopImmediatePropagation();
        }
      };
      this.handleFormReset = function () {
        _this9.options.setValue(_this9.host, _this9.options.defaultValue(_this9.host));
        _this9.setUserInteracted(_this9.host, false);
        interactions.set(_this9.host, []);
      };
      this.handleInteraction = function (event) {
        var emittedEvents = interactions.get(_this9.host);
        if (!emittedEvents.includes(event.type)) {
          emittedEvents.push(event.type);
        }
        if (emittedEvents.length === _this9.options.assumeInteractionOn.length) {
          _this9.setUserInteracted(_this9.host, true);
        }
      };
      this.checkFormValidity = function () {
        if (_this9.form && !_this9.form.noValidate) {
          var elements = _this9.form.querySelectorAll("*");
          var _iterator14 = _createForOfIteratorHelper(elements),
            _step14;
          try {
            for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {
              var element = _step14.value;
              if (typeof element.checkValidity === "function") {
                if (!element.checkValidity()) {
                  return false;
                }
              }
            }
          } catch (err) {
            _iterator14.e(err);
          } finally {
            _iterator14.f();
          }
        }
        return true;
      };
      this.reportFormValidity = function () {
        if (_this9.form && !_this9.form.noValidate) {
          var elements = _this9.form.querySelectorAll("*");
          var _iterator15 = _createForOfIteratorHelper(elements),
            _step15;
          try {
            for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {
              var element = _step15.value;
              if (typeof element.reportValidity === "function") {
                if (!element.reportValidity()) {
                  return false;
                }
              }
            }
          } catch (err) {
            _iterator15.e(err);
          } finally {
            _iterator15.f();
          }
        }
        return true;
      };
      (this.host = host).addController(this);
      this.options = __spreadValues({
        form: function form(input) {
          var formId = input.form;
          if (formId) {
            var root = input.getRootNode();
            var form = root.getElementById(formId);
            if (form) {
              return form;
            }
          }
          return input.closest("form");
        },
        name: function name(input) {
          return input.name;
        },
        value: function value(input) {
          return input.value;
        },
        defaultValue: function defaultValue(input) {
          return input.defaultValue;
        },
        disabled: function disabled(input) {
          var _a;
          return (_a = input.disabled) != null ? _a : false;
        },
        reportValidity: function reportValidity(input) {
          return typeof input.reportValidity === "function" ? input.reportValidity() : true;
        },
        checkValidity: function checkValidity(input) {
          return typeof input.checkValidity === "function" ? input.checkValidity() : true;
        },
        setValue: function setValue(input, value) {
          return input.value = value;
        },
        assumeInteractionOn: ["sl-input"]
      }, options);
    }
    return _createClass(FormControlController, [{
      key: "hostConnected",
      value: function hostConnected() {
        var _this10 = this;
        var form = this.options.form(this.host);
        if (form) {
          this.attachForm(form);
        }
        interactions.set(this.host, []);
        this.options.assumeInteractionOn.forEach(function (event) {
          _this10.host.addEventListener(event, _this10.handleInteraction);
        });
      }
    }, {
      key: "hostDisconnected",
      value: function hostDisconnected() {
        var _this11 = this;
        this.detachForm();
        interactions["delete"](this.host);
        this.options.assumeInteractionOn.forEach(function (event) {
          _this11.host.removeEventListener(event, _this11.handleInteraction);
        });
      }
    }, {
      key: "hostUpdated",
      value: function hostUpdated() {
        var form = this.options.form(this.host);
        if (!form) {
          this.detachForm();
        }
        if (form && this.form !== form) {
          this.detachForm();
          this.attachForm(form);
        }
        if (this.host.hasUpdated) {
          this.setValidity(this.host.validity.valid);
        }
      }
    }, {
      key: "attachForm",
      value: function attachForm(form) {
        var _this12 = this;
        if (form) {
          this.form = form;
          if (formCollections.has(this.form)) {
            formCollections.get(this.form).add(this.host);
          } else {
            formCollections.set(this.form, new Set([this.host]));
          }
          this.form.addEventListener("formdata", this.handleFormData);
          this.form.addEventListener("submit", this.handleFormSubmit);
          this.form.addEventListener("reset", this.handleFormReset);
          if (!reportValidityOverloads.has(this.form)) {
            reportValidityOverloads.set(this.form, this.form.reportValidity);
            this.form.reportValidity = function () {
              return _this12.reportFormValidity();
            };
          }
          if (!checkValidityOverloads.has(this.form)) {
            checkValidityOverloads.set(this.form, this.form.checkValidity);
            this.form.checkValidity = function () {
              return _this12.checkFormValidity();
            };
          }
        } else {
          this.form = void 0;
        }
      }
    }, {
      key: "detachForm",
      value: function detachForm() {
        if (!this.form) return;
        var formCollection = formCollections.get(this.form);
        if (!formCollection) {
          return;
        }
        formCollection["delete"](this.host);
        if (formCollection.size <= 0) {
          this.form.removeEventListener("formdata", this.handleFormData);
          this.form.removeEventListener("submit", this.handleFormSubmit);
          this.form.removeEventListener("reset", this.handleFormReset);
          if (reportValidityOverloads.has(this.form)) {
            this.form.reportValidity = reportValidityOverloads.get(this.form);
            reportValidityOverloads["delete"](this.form);
          }
          if (checkValidityOverloads.has(this.form)) {
            this.form.checkValidity = checkValidityOverloads.get(this.form);
            checkValidityOverloads["delete"](this.form);
          }
          this.form = void 0;
        }
      }
    }, {
      key: "setUserInteracted",
      value: function setUserInteracted(el, hasInteracted) {
        if (hasInteracted) {
          userInteractedControls.add(el);
        } else {
          userInteractedControls["delete"](el);
        }
        el.requestUpdate();
      }
    }, {
      key: "doAction",
      value: function doAction(type, submitter) {
        if (this.form) {
          var button = document.createElement("button");
          button.type = type;
          button.style.position = "absolute";
          button.style.width = "0";
          button.style.height = "0";
          button.style.clipPath = "inset(50%)";
          button.style.overflow = "hidden";
          button.style.whiteSpace = "nowrap";
          if (submitter) {
            button.name = submitter.name;
            button.value = submitter.value;
            ["formaction", "formenctype", "formmethod", "formnovalidate", "formtarget"].forEach(function (attr) {
              if (submitter.hasAttribute(attr)) {
                button.setAttribute(attr, submitter.getAttribute(attr));
              }
            });
          }
          this.form.append(button);
          button.click();
          button.remove();
        }
      }
    }, {
      key: "getForm",
      value: function getForm() {
        var _a;
        return (_a = this.form) != null ? _a : null;
      }
    }, {
      key: "reset",
      value: function reset(submitter) {
        this.doAction("reset", submitter);
      }
    }, {
      key: "submit",
      value: function submit(submitter) {
        this.doAction("submit", submitter);
      }
    }, {
      key: "setValidity",
      value: function setValidity(isValid) {
        var host = this.host;
        var hasInteracted = Boolean(userInteractedControls.has(host));
        var required = Boolean(host.required);
        host.toggleAttribute("data-required", required);
        host.toggleAttribute("data-optional", !required);
        host.toggleAttribute("data-invalid", !isValid);
        host.toggleAttribute("data-valid", isValid);
        host.toggleAttribute("data-user-invalid", !isValid && hasInteracted);
        host.toggleAttribute("data-user-valid", isValid && hasInteracted);
      }
    }, {
      key: "updateValidity",
      value: function updateValidity() {
        var host = this.host;
        this.setValidity(host.validity.valid);
      }
    }, {
      key: "emitInvalidEvent",
      value: function emitInvalidEvent(originalInvalidEvent) {
        var slInvalidEvent = new CustomEvent("sl-invalid", {
          bubbles: false,
          composed: false,
          cancelable: true,
          detail: {}
        });
        if (!originalInvalidEvent) {
          slInvalidEvent.preventDefault();
        }
        if (!this.host.dispatchEvent(slInvalidEvent)) {
          originalInvalidEvent == null ? void 0 : originalInvalidEvent.preventDefault();
        }
      }
    }]);
  }();
  var validValidityState = Object.freeze({
    badInput: false,
    customError: false,
    patternMismatch: false,
    rangeOverflow: false,
    rangeUnderflow: false,
    stepMismatch: false,
    tooLong: false,
    tooShort: false,
    typeMismatch: false,
    valid: true,
    valueMissing: false
  });
  Object.freeze(__spreadProps(__spreadValues({}, validValidityState), {
    valid: false,
    valueMissing: true
  }));
  Object.freeze(__spreadProps(__spreadValues({}, validValidityState), {
    valid: false,
    customError: true
  }));
  var HasSlotController = function () {
    function HasSlotController(host) {
      var _this13 = this;
      _classCallCheck(this, HasSlotController);
      this.slotNames = [];
      this.handleSlotChange = function (event) {
        var slot = event.target;
        if (_this13.slotNames.includes("[default]") && !slot.name || slot.name && _this13.slotNames.includes(slot.name)) {
          _this13.host.requestUpdate();
        }
      };
      (this.host = host).addController(this);
      for (var _len3 = arguments.length, slotNames = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
        slotNames[_key3 - 1] = arguments[_key3];
      }
      this.slotNames = slotNames;
    }
    return _createClass(HasSlotController, [{
      key: "hasDefaultSlot",
      value: function hasDefaultSlot() {
        return _toConsumableArray(this.host.childNodes).some(function (node) {
          if (node.nodeType === node.TEXT_NODE && node.textContent.trim() !== "") {
            return true;
          }
          if (node.nodeType === node.ELEMENT_NODE) {
            var el = node;
            var tagName = el.tagName.toLowerCase();
            if (tagName === "sl-visually-hidden") {
              return false;
            }
            if (!el.hasAttribute("slot")) {
              return true;
            }
          }
          return false;
        });
      }
    }, {
      key: "hasNamedSlot",
      value: function hasNamedSlot(name) {
        return this.host.querySelector(":scope > [slot=\"".concat(name, "\"]")) !== null;
      }
    }, {
      key: "test",
      value: function test(slotName) {
        return slotName === "[default]" ? this.hasDefaultSlot() : this.hasNamedSlot(slotName);
      }
    }, {
      key: "hostConnected",
      value: function hostConnected() {
        this.host.shadowRoot.addEventListener("slotchange", this.handleSlotChange);
      }
    }, {
      key: "hostDisconnected",
      value: function hostDisconnected() {
        this.host.shadowRoot.removeEventListener("slotchange", this.handleSlotChange);
      }
    }]);
  }();
  var connectedElements = new Set();
  var documentElementObserver = new MutationObserver(update);
  var translations = new Map();
  var documentDirection = document.documentElement.dir || 'ltr';
  var documentLanguage = document.documentElement.lang || navigator.language;
  var fallback;
  documentElementObserver.observe(document.documentElement, {
    attributes: true,
    attributeFilter: ['dir', 'lang']
  });
  function registerTranslation() {
    for (var _len4 = arguments.length, translation = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
      translation[_key4] = arguments[_key4];
    }
    translation.map(function (t) {
      var code = t.$code.toLowerCase();
      if (translations.has(code)) {
        translations.set(code, Object.assign(Object.assign({}, translations.get(code)), t));
      } else {
        translations.set(code, t);
      }
      if (!fallback) {
        fallback = t;
      }
    });
    update();
  }
  function update() {
    documentDirection = document.documentElement.dir || 'ltr';
    documentLanguage = document.documentElement.lang || navigator.language;
    _toConsumableArray(connectedElements.keys()).map(function (el) {
      if (typeof el.requestUpdate === 'function') {
        el.requestUpdate();
      }
    });
  }
  var LocalizeController$1 = function () {
    function LocalizeController(host) {
      _classCallCheck(this, LocalizeController);
      this.host = host;
      this.host.addController(this);
    }
    return _createClass(LocalizeController, [{
      key: "hostConnected",
      value: function hostConnected() {
        connectedElements.add(this.host);
      }
    }, {
      key: "hostDisconnected",
      value: function hostDisconnected() {
        connectedElements["delete"](this.host);
      }
    }, {
      key: "dir",
      value: function dir() {
        return "".concat(this.host.dir || documentDirection).toLowerCase();
      }
    }, {
      key: "lang",
      value: function lang() {
        return "".concat(this.host.lang || documentLanguage).toLowerCase();
      }
    }, {
      key: "getTranslationData",
      value: function getTranslationData(lang) {
        var _a, _b;
        var locale = new Intl.Locale(lang.replace(/_/g, '-'));
        var language = locale === null || locale === void 0 ? void 0 : locale.language.toLowerCase();
        var region = (_b = (_a = locale === null || locale === void 0 ? void 0 : locale.region) === null || _a === void 0 ? void 0 : _a.toLowerCase()) !== null && _b !== void 0 ? _b : '';
        var primary = translations.get("".concat(language, "-").concat(region));
        var secondary = translations.get(language);
        return {
          locale: locale,
          language: language,
          region: region,
          primary: primary,
          secondary: secondary
        };
      }
    }, {
      key: "exists",
      value: function exists(key, options) {
        var _a;
        var _this$getTranslationD = this.getTranslationData((_a = options.lang) !== null && _a !== void 0 ? _a : this.lang()),
          primary = _this$getTranslationD.primary,
          secondary = _this$getTranslationD.secondary;
        options = Object.assign({
          includeFallback: false
        }, options);
        if (primary && primary[key] || secondary && secondary[key] || options.includeFallback && fallback && fallback[key]) {
          return true;
        }
        return false;
      }
    }, {
      key: "term",
      value: function term(key) {
        var _this$getTranslationD2 = this.getTranslationData(this.lang()),
          primary = _this$getTranslationD2.primary,
          secondary = _this$getTranslationD2.secondary;
        var term;
        if (primary && primary[key]) {
          term = primary[key];
        } else if (secondary && secondary[key]) {
          term = secondary[key];
        } else if (fallback && fallback[key]) {
          term = fallback[key];
        } else {
          console.error("No translation found for: ".concat(String(key)));
          return String(key);
        }
        if (typeof term === 'function') {
          for (var _len5 = arguments.length, args = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {
            args[_key5 - 1] = arguments[_key5];
          }
          return term.apply(void 0, args);
        }
        return term;
      }
    }, {
      key: "date",
      value: function date(dateToFormat, options) {
        dateToFormat = new Date(dateToFormat);
        return new Intl.DateTimeFormat(this.lang(), options).format(dateToFormat);
      }
    }, {
      key: "number",
      value: function number(numberToFormat, options) {
        numberToFormat = Number(numberToFormat);
        return isNaN(numberToFormat) ? '' : new Intl.NumberFormat(this.lang(), options).format(numberToFormat);
      }
    }, {
      key: "relativeTime",
      value: function relativeTime(value, unit, options) {
        return new Intl.RelativeTimeFormat(this.lang(), options).format(value, unit);
      }
    }]);
  }();
  var translation = {
    $code: "en",
    $name: "English",
    $dir: "ltr",
    carousel: "Carousel",
    clearEntry: "Clear entry",
    close: "Close",
    copied: "Copied",
    copy: "Copy",
    currentValue: "Current value",
    error: "Error",
    goToSlide: function goToSlide(slide, count) {
      return "Go to slide ".concat(slide, " of ").concat(count);
    },
    hidePassword: "Hide password",
    loading: "Loading",
    nextSlide: "Next slide",
    numOptionsSelected: function numOptionsSelected(num) {
      if (num === 0) return "No options selected";
      if (num === 1) return "1 option selected";
      return "".concat(num, " options selected");
    },
    previousSlide: "Previous slide",
    progress: "Progress",
    remove: "Remove",
    resize: "Resize",
    scrollToEnd: "Scroll to end",
    scrollToStart: "Scroll to start",
    selectAColorFromTheScreen: "Select a color from the screen",
    showPassword: "Show password",
    slideNum: function slideNum(slide) {
      return "Slide ".concat(slide);
    },
    toggleColorFormat: "Toggle color format"
  };
  registerTranslation(translation);
  var en_default = translation;
  var LocalizeController = function (_LocalizeController$) {
    function LocalizeController() {
      _classCallCheck(this, LocalizeController);
      return _callSuper(this, LocalizeController, arguments);
    }
    _inherits(LocalizeController, _LocalizeController$);
    return _createClass(LocalizeController);
  }(LocalizeController$1);
  registerTranslation(en_default);
  var basePath = "";
  function setBasePath(path) {
    basePath = path;
  }
  function getBasePath() {
    var subpath = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
    if (!basePath) {
      var scripts = _toConsumableArray(document.getElementsByTagName("script"));
      var configScript = scripts.find(function (script) {
        return script.hasAttribute("data-shoelace");
      });
      if (configScript) {
        setBasePath(configScript.getAttribute("data-shoelace"));
      } else {
        var fallbackScript = scripts.find(function (s) {
          return /shoelace(\.min)?\.js($|\?)/.test(s.src) || /shoelace-autoloader(\.min)?\.js($|\?)/.test(s.src);
        });
        var path = "";
        if (fallbackScript) {
          path = fallbackScript.getAttribute("src");
        }
        setBasePath(path.split("/").slice(0, -1).join("/"));
      }
    }
    return basePath.replace(/\/$/, "") + (subpath ? "/".concat(subpath.replace(/^\//, "")) : "");
  }
  var library = {
    name: "default",
    resolver: function resolver(name) {
      return getBasePath("assets/icons/".concat(name, ".svg"));
    }
  };
  var library_default_default = library;
  var icons = {
    caret: "\n    <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n      <polyline points=\"6 9 12 15 18 9\"></polyline>\n    </svg>\n  ",
    check: "\n    <svg part=\"checked-icon\" class=\"checkbox__icon\" viewBox=\"0 0 16 16\">\n      <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" stroke-linecap=\"round\">\n        <g stroke=\"currentColor\">\n          <g transform=\"translate(3.428571, 3.428571)\">\n            <path d=\"M0,5.71428571 L3.42857143,9.14285714\"></path>\n            <path d=\"M9.14285714,0 L3.42857143,9.14285714\"></path>\n          </g>\n        </g>\n      </g>\n    </svg>\n  ",
    "chevron-down": "\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-chevron-down\" viewBox=\"0 0 16 16\">\n      <path fill-rule=\"evenodd\" d=\"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z\"/>\n    </svg>\n  ",
    "chevron-left": "\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-chevron-left\" viewBox=\"0 0 16 16\">\n      <path fill-rule=\"evenodd\" d=\"M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z\"/>\n    </svg>\n  ",
    "chevron-right": "\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-chevron-right\" viewBox=\"0 0 16 16\">\n      <path fill-rule=\"evenodd\" d=\"M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z\"/>\n    </svg>\n  ",
    copy: "\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-copy\" viewBox=\"0 0 16 16\">\n      <path fill-rule=\"evenodd\" d=\"M4 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V2Zm2-1a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H6ZM2 5a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1v-1h1v1a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h1v1H2Z\"/>\n    </svg>\n  ",
    eye: "\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-eye\" viewBox=\"0 0 16 16\">\n      <path d=\"M16 8s-3-5.5-8-5.5S0 8 0 8s3 5.5 8 5.5S16 8 16 8zM1.173 8a13.133 13.133 0 0 1 1.66-2.043C4.12 4.668 5.88 3.5 8 3.5c2.12 0 3.879 1.168 5.168 2.457A13.133 13.133 0 0 1 14.828 8c-.058.087-.122.183-.195.288-.335.48-.83 1.12-1.465 1.755C11.879 11.332 10.119 12.5 8 12.5c-2.12 0-3.879-1.168-5.168-2.457A13.134 13.134 0 0 1 1.172 8z\"/>\n      <path d=\"M8 5.5a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5zM4.5 8a3.5 3.5 0 1 1 7 0 3.5 3.5 0 0 1-7 0z\"/>\n    </svg>\n  ",
    "eye-slash": "\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-eye-slash\" viewBox=\"0 0 16 16\">\n      <path d=\"M13.359 11.238C15.06 9.72 16 8 16 8s-3-5.5-8-5.5a7.028 7.028 0 0 0-2.79.588l.77.771A5.944 5.944 0 0 1 8 3.5c2.12 0 3.879 1.168 5.168 2.457A13.134 13.134 0 0 1 14.828 8c-.058.087-.122.183-.195.288-.335.48-.83 1.12-1.465 1.755-.165.165-.337.328-.517.486l.708.709z\"/>\n      <path d=\"M11.297 9.176a3.5 3.5 0 0 0-4.474-4.474l.823.823a2.5 2.5 0 0 1 2.829 2.829l.822.822zm-2.943 1.299.822.822a3.5 3.5 0 0 1-4.474-4.474l.823.823a2.5 2.5 0 0 0 2.829 2.829z\"/>\n      <path d=\"M3.35 5.47c-.18.16-.353.322-.518.487A13.134 13.134 0 0 0 1.172 8l.195.288c.335.48.83 1.12 1.465 1.755C4.121 11.332 5.881 12.5 8 12.5c.716 0 1.39-.133 2.02-.36l.77.772A7.029 7.029 0 0 1 8 13.5C3 13.5 0 8 0 8s.939-1.721 2.641-3.238l.708.709zm10.296 8.884-12-12 .708-.708 12 12-.708.708z\"/>\n    </svg>\n  ",
    eyedropper: "\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-eyedropper\" viewBox=\"0 0 16 16\">\n      <path d=\"M13.354.646a1.207 1.207 0 0 0-1.708 0L8.5 3.793l-.646-.647a.5.5 0 1 0-.708.708L8.293 5l-7.147 7.146A.5.5 0 0 0 1 12.5v1.793l-.854.853a.5.5 0 1 0 .708.707L1.707 15H3.5a.5.5 0 0 0 .354-.146L11 7.707l1.146 1.147a.5.5 0 0 0 .708-.708l-.647-.646 3.147-3.146a1.207 1.207 0 0 0 0-1.708l-2-2zM2 12.707l7-7L10.293 7l-7 7H2v-1.293z\"></path>\n    </svg>\n  ",
    "grip-vertical": "\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-grip-vertical\" viewBox=\"0 0 16 16\">\n      <path d=\"M7 2a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zM7 5a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zM7 8a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm-3 3a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm-3 3a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0z\"></path>\n    </svg>\n  ",
    indeterminate: "\n    <svg part=\"indeterminate-icon\" class=\"checkbox__icon\" viewBox=\"0 0 16 16\">\n      <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" stroke-linecap=\"round\">\n        <g stroke=\"currentColor\" stroke-width=\"2\">\n          <g transform=\"translate(2.285714, 6.857143)\">\n            <path d=\"M10.2857143,1.14285714 L1.14285714,1.14285714\"></path>\n          </g>\n        </g>\n      </g>\n    </svg>\n  ",
    "person-fill": "\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-person-fill\" viewBox=\"0 0 16 16\">\n      <path d=\"M3 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1H3zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\"/>\n    </svg>\n  ",
    "play-fill": "\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-play-fill\" viewBox=\"0 0 16 16\">\n      <path d=\"m11.596 8.697-6.363 3.692c-.54.313-1.233-.066-1.233-.697V4.308c0-.63.692-1.01 1.233-.696l6.363 3.692a.802.802 0 0 1 0 1.393z\"></path>\n    </svg>\n  ",
    "pause-fill": "\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-pause-fill\" viewBox=\"0 0 16 16\">\n      <path d=\"M5.5 3.5A1.5 1.5 0 0 1 7 5v6a1.5 1.5 0 0 1-3 0V5a1.5 1.5 0 0 1 1.5-1.5zm5 0A1.5 1.5 0 0 1 12 5v6a1.5 1.5 0 0 1-3 0V5a1.5 1.5 0 0 1 1.5-1.5z\"></path>\n    </svg>\n  ",
    radio: "\n    <svg part=\"checked-icon\" class=\"radio__icon\" viewBox=\"0 0 16 16\">\n      <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n        <g fill=\"currentColor\">\n          <circle cx=\"8\" cy=\"8\" r=\"3.42857143\"></circle>\n        </g>\n      </g>\n    </svg>\n  ",
    "star-fill": "\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-star-fill\" viewBox=\"0 0 16 16\">\n      <path d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\"/>\n    </svg>\n  ",
    "x-lg": "\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-x-lg\" viewBox=\"0 0 16 16\">\n      <path d=\"M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8 2.146 2.854Z\"/>\n    </svg>\n  ",
    "x-circle-fill": "\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-x-circle-fill\" viewBox=\"0 0 16 16\">\n      <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293 5.354 4.646z\"></path>\n    </svg>\n  "
  };
  var systemLibrary = {
    name: "system",
    resolver: function resolver(name) {
      if (name in icons) {
        return "data:image/svg+xml,".concat(encodeURIComponent(icons[name]));
      }
      return "";
    }
  };
  var library_system_default = systemLibrary;
  var registry = [library_default_default, library_system_default];
  var watchedIcons = [];
  function watchIcon(icon) {
    watchedIcons.push(icon);
  }
  function unwatchIcon(icon) {
    watchedIcons = watchedIcons.filter(function (el) {
      return el !== icon;
    });
  }
  function getIconLibrary(name) {
    return registry.find(function (lib) {
      return lib.name === name;
    });
  }
  var icon_styles_default = i$4(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral(["\n  :host {\n    display: inline-block;\n    width: 1em;\n    height: 1em;\n    box-sizing: content-box !important;\n  }\n\n  svg {\n    display: block;\n    height: 100%;\n    width: 100%;\n  }\n"])));
  function watch(propertyName, options) {
    var resolvedOptions = __spreadValues({
      waitUntilFirstUpdate: false
    }, options);
    return function (proto, decoratedFnName) {
      var update = proto.update;
      var watchedProperties = Array.isArray(propertyName) ? propertyName : [propertyName];
      proto.update = function (changedProps) {
        var _this14 = this;
        watchedProperties.forEach(function (property) {
          var key = property;
          if (changedProps.has(key)) {
            var oldValue = changedProps.get(key);
            var newValue = _this14[key];
            if (oldValue !== newValue) {
              if (!resolvedOptions.waitUntilFirstUpdate || _this14.hasUpdated) {
                _this14[decoratedFnName](oldValue, newValue);
              }
            }
          }
        });
        update.call(this, changedProps);
      };
    };
  }

  /**
   * @license
   * Copyright 2020 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   */
  var e$3 = function e$3(o, t) {
      return void 0 !== (o === null || o === void 0 ? void 0 : o._$litType$);
    },
    f = function f(o) {
      return void 0 === o.strings;
    },
    u = {},
    m = function m(o) {
      var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : u;
      return o._$AH = t;
    };
  var CACHEABLE_ERROR = Symbol();
  var RETRYABLE_ERROR = Symbol();
  var parser;
  var iconCache = new Map();
  var SlIcon = function (_ShoelaceElement2) {
    function SlIcon() {
      var _this15;
      _classCallCheck(this, SlIcon);
      _this15 = _callSuper(this, SlIcon, arguments);
      _this15.initialRender = false;
      _this15.svg = null;
      _this15.label = "";
      _this15.library = "default";
      return _this15;
    }
    _inherits(SlIcon, _ShoelaceElement2);
    return _createClass(SlIcon, [{
      key: "resolveIcon",
      value: (function () {
        var _resolveIcon = _asyncToGenerator(_regeneratorRuntime().mark(function _callee2(url, library) {
          var _a, fileData, div, svg, doc, svgEl;
          return _regeneratorRuntime().wrap(function _callee2$(_context2) {
            while (1) switch (_context2.prev = _context2.next) {
              case 0:
                if (!(library == null ? void 0 : library.spriteSheet)) {
                  _context2.next = 2;
                  break;
                }
                return _context2.abrupt("return", x(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral(["<svg part=\"svg\">\n        <use part=\"use\" href=\"", "\"></use>\n      </svg>"])), url));
              case 2:
                _context2.prev = 2;
                _context2.next = 5;
                return fetch(url, {
                  mode: "cors"
                });
              case 5:
                fileData = _context2.sent;
                if (fileData.ok) {
                  _context2.next = 8;
                  break;
                }
                return _context2.abrupt("return", fileData.status === 410 ? CACHEABLE_ERROR : RETRYABLE_ERROR);
              case 8:
                _context2.next = 13;
                break;
              case 10:
                _context2.prev = 10;
                _context2.t0 = _context2["catch"](2);
                return _context2.abrupt("return", RETRYABLE_ERROR);
              case 13:
                _context2.prev = 13;
                div = document.createElement("div");
                _context2.next = 17;
                return fileData.text();
              case 17:
                div.innerHTML = _context2.sent;
                svg = div.firstElementChild;
                if (!(((_a = svg == null ? void 0 : svg.tagName) == null ? void 0 : _a.toLowerCase()) !== "svg")) {
                  _context2.next = 21;
                  break;
                }
                return _context2.abrupt("return", CACHEABLE_ERROR);
              case 21:
                if (!parser) parser = new DOMParser();
                doc = parser.parseFromString(svg.outerHTML, "text/html");
                svgEl = doc.body.querySelector("svg");
                if (svgEl) {
                  _context2.next = 26;
                  break;
                }
                return _context2.abrupt("return", CACHEABLE_ERROR);
              case 26:
                svgEl.part.add("svg");
                return _context2.abrupt("return", document.adoptNode(svgEl));
              case 30:
                _context2.prev = 30;
                _context2.t1 = _context2["catch"](13);
                return _context2.abrupt("return", CACHEABLE_ERROR);
              case 33:
              case "end":
                return _context2.stop();
            }
          }, _callee2, null, [[2, 10], [13, 30]]);
        }));
        function resolveIcon(_x2, _x3) {
          return _resolveIcon.apply(this, arguments);
        }
        return resolveIcon;
      }())
    }, {
      key: "connectedCallback",
      value: function connectedCallback() {
        _get(_getPrototypeOf(SlIcon.prototype), "connectedCallback", this).call(this);
        watchIcon(this);
      }
    }, {
      key: "firstUpdated",
      value: function firstUpdated() {
        this.initialRender = true;
        this.setIcon();
      }
    }, {
      key: "disconnectedCallback",
      value: function disconnectedCallback() {
        _get(_getPrototypeOf(SlIcon.prototype), "disconnectedCallback", this).call(this);
        unwatchIcon(this);
      }
    }, {
      key: "getIconSource",
      value: function getIconSource() {
        var library = getIconLibrary(this.library);
        if (this.name && library) {
          return {
            url: library.resolver(this.name),
            fromLibrary: true
          };
        }
        return {
          url: this.src,
          fromLibrary: false
        };
      }
    }, {
      key: "handleLabelChange",
      value: function handleLabelChange() {
        var hasLabel = typeof this.label === "string" && this.label.length > 0;
        if (hasLabel) {
          this.setAttribute("role", "img");
          this.setAttribute("aria-label", this.label);
          this.removeAttribute("aria-hidden");
        } else {
          this.removeAttribute("role");
          this.removeAttribute("aria-label");
          this.setAttribute("aria-hidden", "true");
        }
      }
    }, {
      key: "setIcon",
      value: function () {
        var _setIcon = _asyncToGenerator(_regeneratorRuntime().mark(function _callee3() {
          var _a, _this$getIconSource, url, fromLibrary, library, iconResolver, svg;
          return _regeneratorRuntime().wrap(function _callee3$(_context3) {
            while (1) switch (_context3.prev = _context3.next) {
              case 0:
                _this$getIconSource = this.getIconSource(), url = _this$getIconSource.url, fromLibrary = _this$getIconSource.fromLibrary;
                library = fromLibrary ? getIconLibrary(this.library) : void 0;
                if (url) {
                  _context3.next = 5;
                  break;
                }
                this.svg = null;
                return _context3.abrupt("return");
              case 5:
                iconResolver = iconCache.get(url);
                if (!iconResolver) {
                  iconResolver = this.resolveIcon(url, library);
                  iconCache.set(url, iconResolver);
                }
                if (this.initialRender) {
                  _context3.next = 9;
                  break;
                }
                return _context3.abrupt("return");
              case 9:
                _context3.next = 11;
                return iconResolver;
              case 11:
                svg = _context3.sent;
                if (svg === RETRYABLE_ERROR) {
                  iconCache["delete"](url);
                }
                if (!(url !== this.getIconSource().url)) {
                  _context3.next = 15;
                  break;
                }
                return _context3.abrupt("return");
              case 15:
                if (!e$3(svg)) {
                  _context3.next = 18;
                  break;
                }
                this.svg = svg;
                return _context3.abrupt("return");
              case 18:
                _context3.t0 = svg;
                _context3.next = _context3.t0 === RETRYABLE_ERROR ? 21 : _context3.t0 === CACHEABLE_ERROR ? 21 : 24;
                break;
              case 21:
                this.svg = null;
                this.emit("sl-error");
                return _context3.abrupt("break", 27);
              case 24:
                this.svg = svg.cloneNode(true);
                (_a = library == null ? void 0 : library.mutator) == null ? void 0 : _a.call(library, this.svg);
                this.emit("sl-load");
              case 27:
              case "end":
                return _context3.stop();
            }
          }, _callee3, this);
        }));
        function setIcon() {
          return _setIcon.apply(this, arguments);
        }
        return setIcon;
      }()
    }, {
      key: "render",
      value: function render() {
        return this.svg;
      }
    }]);
  }(ShoelaceElement);
  SlIcon.styles = [component_styles_default, icon_styles_default];
  __decorateClass([r()], SlIcon.prototype, "svg", 2);
  __decorateClass([n$2({
    reflect: true
  })], SlIcon.prototype, "name", 2);
  __decorateClass([n$2()], SlIcon.prototype, "src", 2);
  __decorateClass([n$2()], SlIcon.prototype, "label", 2);
  __decorateClass([n$2({
    reflect: true
  })], SlIcon.prototype, "library", 2);
  __decorateClass([watch("label")], SlIcon.prototype, "handleLabelChange", 1);
  __decorateClass([watch(["name", "src", "library"])], SlIcon.prototype, "setIcon", 1);

  /**
   * @license
   * Copyright 2017 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   */
  var t = {
      ATTRIBUTE: 1,
      CHILD: 2,
      PROPERTY: 3,
      BOOLEAN_ATTRIBUTE: 4,
      EVENT: 5,
      ELEMENT: 6
    },
    e$2 = function e$2(t) {
      return function () {
        for (var _len6 = arguments.length, e = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
          e[_key6] = arguments[_key6];
        }
        return {
          _$litDirective$: t,
          values: e
        };
      };
    };
  var i$1 = function () {
    function i(t) {
      _classCallCheck(this, i);
    }
    return _createClass(i, [{
      key: "_$AU",
      get: function get() {
        return this._$AM._$AU;
      }
    }, {
      key: "_$AT",
      value: function _$AT(t, e, _i13) {
        this._$Ct = t, this._$AM = e, this._$Ci = _i13;
      }
    }, {
      key: "_$AS",
      value: function _$AS(t, e) {
        return this.update(t, e);
      }
    }, {
      key: "update",
      value: function update(t, e) {
        return this.render.apply(this, _toConsumableArray(e));
      }
    }]);
  }();

  /**
   * @license
   * Copyright 2018 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   */
  var e$1 = e$2(function (_i$) {
    function _class2(t$1) {
      var _t$1$strings;
      var _this16;
      _classCallCheck(this, _class2);
      if (_this16 = _callSuper(this, _class2, [t$1]), t$1.type !== t.ATTRIBUTE || "class" !== t$1.name || ((_t$1$strings = t$1.strings) === null || _t$1$strings === void 0 ? void 0 : _t$1$strings.length) > 2) throw Error("'classMap()' can only be used in the 'class' attribute and must be the only part in the attribute.");
      return _assertThisInitialized(_this16);
    }
    _inherits(_class2, _i$);
    return _createClass(_class2, [{
      key: "render",
      value: function render(t) {
        return " " + Object.keys(t).filter(function (s) {
          return t[s];
        }).join(" ") + " ";
      }
    }, {
      key: "update",
      value: function update(s, _ref6) {
        var _ref7 = _slicedToArray(_ref6, 1),
          i = _ref7[0];
        if (void 0 === this.st) {
          this.st = new Set(), void 0 !== s.strings && (this.nt = new Set(s.strings.join(" ").split(/\s/).filter(function (t) {
            return "" !== t;
          })));
          for (var _t14 in i) {
            var _this$nt;
            i[_t14] && !((_this$nt = this.nt) !== null && _this$nt !== void 0 && _this$nt.has(_t14)) && this.st.add(_t14);
          }
          return this.render(i);
        }
        var r = s.element.classList;
        var _iterator16 = _createForOfIteratorHelper(this.st),
          _step16;
        try {
          for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {
            var _t16 = _step16.value;
            _t16 in i || (r.remove(_t16), this.st["delete"](_t16));
          }
        } catch (err) {
          _iterator16.e(err);
        } finally {
          _iterator16.f();
        }
        for (var _t15 in i) {
          var _this$nt2;
          var _s13 = !!i[_t15];
          _s13 === this.st.has(_t15) || ((_this$nt2 = this.nt) === null || _this$nt2 === void 0 ? void 0 : _this$nt2.has(_t15)) || (_s13 ? (r.add(_t15), this.st.add(_t15)) : (r.remove(_t15), this.st["delete"](_t15)));
        }
        return w;
      }
    }]);
  }(i$1));

  /**
   * @license
   * Copyright 2018 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   */
  var o$2 = function o$2(o) {
    return o !== null && o !== void 0 ? o : T;
  };

  /**
   * @license
   * Copyright 2020 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   */
  var l$1 = e$2(function (_i$2) {
    function _class3(r) {
      var _this17;
      _classCallCheck(this, _class3);
      if (_this17 = _callSuper(this, _class3, [r]), r.type !== t.PROPERTY && r.type !== t.ATTRIBUTE && r.type !== t.BOOLEAN_ATTRIBUTE) throw Error("The 'live' directive is not allowed on child or event bindings");
      if (!f(r)) throw Error("'live' bindings can only contain a single expression");
      return _assertThisInitialized(_this17);
    }
    _inherits(_class3, _i$2);
    return _createClass(_class3, [{
      key: "render",
      value: function render(r) {
        return r;
      }
    }, {
      key: "update",
      value: function update(i, _ref8) {
        var _ref9 = _slicedToArray(_ref8, 1),
          t$1 = _ref9[0];
        if (t$1 === w || t$1 === T) return t$1;
        var o = i.element,
          l = i.name;
        if (i.type === t.PROPERTY) {
          if (t$1 === o[l]) return w;
        } else if (i.type === t.BOOLEAN_ATTRIBUTE) {
          if (!!t$1 === o.hasAttribute(l)) return w;
        } else if (i.type === t.ATTRIBUTE && o.getAttribute(l) === t$1 + "") return w;
        return m(i), t$1;
      }
    }]);
  }(i$1));
  var SlInput = function (_ShoelaceElement3) {
    function SlInput() {
      var _this18;
      _classCallCheck(this, SlInput);
      _this18 = _callSuper(this, SlInput, arguments);
      _this18.formControlController = new FormControlController(_this18, {
        assumeInteractionOn: ["sl-blur", "sl-input"]
      });
      _this18.hasSlotController = new HasSlotController(_this18, "help-text", "label");
      _this18.localize = new LocalizeController(_this18);
      _this18.hasFocus = false;
      _this18.title = "";
      _this18.__numberInput = Object.assign(document.createElement("input"), {
        type: "number"
      });
      _this18.__dateInput = Object.assign(document.createElement("input"), {
        type: "date"
      });
      _this18.type = "text";
      _this18.name = "";
      _this18.value = "";
      _this18.defaultValue = "";
      _this18.size = "medium";
      _this18.filled = false;
      _this18.pill = false;
      _this18.label = "";
      _this18.helpText = "";
      _this18.clearable = false;
      _this18.disabled = false;
      _this18.placeholder = "";
      _this18.readonly = false;
      _this18.passwordToggle = false;
      _this18.passwordVisible = false;
      _this18.noSpinButtons = false;
      _this18.form = "";
      _this18.required = false;
      _this18.spellcheck = true;
      return _this18;
    }
    _inherits(SlInput, _ShoelaceElement3);
    return _createClass(SlInput, [{
      key: "valueAsDate",
      get: function get() {
        var _a;
        this.__dateInput.type = this.type;
        this.__dateInput.value = this.value;
        return ((_a = this.input) == null ? void 0 : _a.valueAsDate) || this.__dateInput.valueAsDate;
      },
      set: function set(newValue) {
        this.__dateInput.type = this.type;
        this.__dateInput.valueAsDate = newValue;
        this.value = this.__dateInput.value;
      }
    }, {
      key: "valueAsNumber",
      get: function get() {
        var _a;
        this.__numberInput.value = this.value;
        return ((_a = this.input) == null ? void 0 : _a.valueAsNumber) || this.__numberInput.valueAsNumber;
      },
      set: function set(newValue) {
        this.__numberInput.valueAsNumber = newValue;
        this.value = this.__numberInput.value;
      }
    }, {
      key: "validity",
      get: function get() {
        return this.input.validity;
      }
    }, {
      key: "validationMessage",
      get: function get() {
        return this.input.validationMessage;
      }
    }, {
      key: "firstUpdated",
      value: function firstUpdated() {
        this.formControlController.updateValidity();
      }
    }, {
      key: "handleBlur",
      value: function handleBlur() {
        this.hasFocus = false;
        this.emit("sl-blur");
      }
    }, {
      key: "handleChange",
      value: function handleChange() {
        this.value = this.input.value;
        this.emit("sl-change");
      }
    }, {
      key: "handleClearClick",
      value: function handleClearClick(event) {
        this.value = "";
        this.emit("sl-clear");
        this.emit("sl-input");
        this.emit("sl-change");
        this.input.focus();
        event.stopPropagation();
      }
    }, {
      key: "handleFocus",
      value: function handleFocus() {
        this.hasFocus = true;
        this.emit("sl-focus");
      }
    }, {
      key: "handleInput",
      value: function handleInput() {
        this.value = this.input.value;
        this.formControlController.updateValidity();
        this.emit("sl-input");
      }
    }, {
      key: "handleInvalid",
      value: function handleInvalid(event) {
        this.formControlController.setValidity(false);
        this.formControlController.emitInvalidEvent(event);
      }
    }, {
      key: "handleKeyDown",
      value: function handleKeyDown(event) {
        var _this19 = this;
        var hasModifier = event.metaKey || event.ctrlKey || event.shiftKey || event.altKey;
        if (event.key === "Enter" && !hasModifier) {
          setTimeout(function () {
            if (!event.defaultPrevented && !event.isComposing) {
              _this19.formControlController.submit();
            }
          });
        }
      }
    }, {
      key: "handlePasswordToggle",
      value: function handlePasswordToggle() {
        this.passwordVisible = !this.passwordVisible;
      }
    }, {
      key: "handleDisabledChange",
      value: function handleDisabledChange() {
        this.formControlController.setValidity(this.disabled);
      }
    }, {
      key: "handleStepChange",
      value: function handleStepChange() {
        this.input.step = String(this.step);
        this.formControlController.updateValidity();
      }
    }, {
      key: "handleValueChange",
      value: function () {
        var _handleValueChange = _asyncToGenerator(_regeneratorRuntime().mark(function _callee4() {
          return _regeneratorRuntime().wrap(function _callee4$(_context4) {
            while (1) switch (_context4.prev = _context4.next) {
              case 0:
                _context4.next = 2;
                return this.updateComplete;
              case 2:
                this.formControlController.updateValidity();
              case 3:
              case "end":
                return _context4.stop();
            }
          }, _callee4, this);
        }));
        function handleValueChange() {
          return _handleValueChange.apply(this, arguments);
        }
        return handleValueChange;
      }()
    }, {
      key: "focus",
      value: function focus(options) {
        this.input.focus(options);
      }
    }, {
      key: "blur",
      value: function blur() {
        this.input.blur();
      }
    }, {
      key: "select",
      value: function select() {
        this.input.select();
      }
    }, {
      key: "setSelectionRange",
      value: function setSelectionRange(selectionStart, selectionEnd) {
        var selectionDirection = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "none";
        this.input.setSelectionRange(selectionStart, selectionEnd, selectionDirection);
      }
    }, {
      key: "setRangeText",
      value: function setRangeText(replacement, start, end) {
        var selectMode = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : "preserve";
        var selectionStart = start != null ? start : this.input.selectionStart;
        var selectionEnd = end != null ? end : this.input.selectionEnd;
        this.input.setRangeText(replacement, selectionStart, selectionEnd, selectMode);
        if (this.value !== this.input.value) {
          this.value = this.input.value;
        }
      }
    }, {
      key: "showPicker",
      value: function showPicker() {
        if ("showPicker" in HTMLInputElement.prototype) {
          this.input.showPicker();
        }
      }
    }, {
      key: "stepUp",
      value: function stepUp() {
        this.input.stepUp();
        if (this.value !== this.input.value) {
          this.value = this.input.value;
        }
      }
    }, {
      key: "stepDown",
      value: function stepDown() {
        this.input.stepDown();
        if (this.value !== this.input.value) {
          this.value = this.input.value;
        }
      }
    }, {
      key: "checkValidity",
      value: function checkValidity() {
        return this.input.checkValidity();
      }
    }, {
      key: "getForm",
      value: function getForm() {
        return this.formControlController.getForm();
      }
    }, {
      key: "reportValidity",
      value: function reportValidity() {
        return this.input.reportValidity();
      }
    }, {
      key: "setCustomValidity",
      value: function setCustomValidity(message) {
        this.input.setCustomValidity(message);
        this.formControlController.updateValidity();
      }
    }, {
      key: "render",
      value: function render() {
        var hasLabelSlot = this.hasSlotController.test("label");
        var hasHelpTextSlot = this.hasSlotController.test("help-text");
        var hasLabel = this.label ? true : !!hasLabelSlot;
        var hasHelpText = this.helpText ? true : !!hasHelpTextSlot;
        var hasClearIcon = this.clearable && !this.disabled && !this.readonly;
        var isClearIconVisible = hasClearIcon && (typeof this.value === "number" || this.value.length > 0);
        return x(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral(["\n      <div\n        part=\"form-control\"\n        class=", "\n      >\n        <label\n          part=\"form-control-label\"\n          class=\"form-control__label\"\n          for=\"input\"\n          aria-hidden=", "\n        >\n          <slot name=\"label\">", "</slot>\n        </label>\n\n        <div part=\"form-control-input\" class=\"form-control-input\">\n          <div\n            part=\"base\"\n            class=", "\n          >\n            <span part=\"prefix\" class=\"input__prefix\">\n              <slot name=\"prefix\"></slot>\n            </span>\n\n            <input\n              part=\"input\"\n              id=\"input\"\n              class=\"input__control\"\n              type=", "\n              title=", "\n              name=", "\n              ?disabled=", "\n              ?readonly=", "\n              ?required=", "\n              placeholder=", "\n              minlength=", "\n              maxlength=", "\n              min=", "\n              max=", "\n              step=", "\n              .value=", "\n              autocapitalize=", "\n              autocomplete=", "\n              autocorrect=", "\n              ?autofocus=", "\n              spellcheck=", "\n              pattern=", "\n              enterkeyhint=", "\n              inputmode=", "\n              aria-describedby=\"help-text\"\n              @change=", "\n              @input=", "\n              @invalid=", "\n              @keydown=", "\n              @focus=", "\n              @blur=", "\n            />\n\n            ", "\n            ", "\n\n            <span part=\"suffix\" class=\"input__suffix\">\n              <slot name=\"suffix\"></slot>\n            </span>\n          </div>\n        </div>\n\n        <div\n          part=\"form-control-help-text\"\n          id=\"help-text\"\n          class=\"form-control__help-text\"\n          aria-hidden=", "\n        >\n          <slot name=\"help-text\">", "</slot>\n        </div>\n      </div>\n    "])), e$1({
          "form-control": true,
          "form-control--small": this.size === "small",
          "form-control--medium": this.size === "medium",
          "form-control--large": this.size === "large",
          "form-control--has-label": hasLabel,
          "form-control--has-help-text": hasHelpText
        }), hasLabel ? "false" : "true", this.label, e$1({
          input: true,
          "input--small": this.size === "small",
          "input--medium": this.size === "medium",
          "input--large": this.size === "large",
          "input--pill": this.pill,
          "input--standard": !this.filled,
          "input--filled": this.filled,
          "input--disabled": this.disabled,
          "input--focused": this.hasFocus,
          "input--empty": !this.value,
          "input--no-spin-buttons": this.noSpinButtons
        }), this.type === "password" && this.passwordVisible ? "text" : this.type, this.title, o$2(this.name), this.disabled, this.readonly, this.required, o$2(this.placeholder), o$2(this.minlength), o$2(this.maxlength), o$2(this.min), o$2(this.max), o$2(this.step), l$1(this.value), o$2(this.autocapitalize), o$2(this.autocomplete), o$2(this.autocorrect), this.autofocus, this.spellcheck, o$2(this.pattern), o$2(this.enterkeyhint), o$2(this.inputmode), this.handleChange, this.handleInput, this.handleInvalid, this.handleKeyDown, this.handleFocus, this.handleBlur, hasClearIcon ? x(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral(["\n                  <button\n                    part=\"clear-button\"\n                    class=", "\n                    type=\"button\"\n                    aria-label=", "\n                    @click=", "\n                    tabindex=\"-1\"\n                  >\n                    <slot name=\"clear-icon\">\n                      <sl-icon name=\"x-circle-fill\" library=\"system\"></sl-icon>\n                    </slot>\n                  </button>\n                "])), e$1({
          input__clear: true,
          "input__clear--visible": isClearIconVisible
        }), this.localize.term("clearEntry"), this.handleClearClick) : "", this.passwordToggle && !this.disabled ? x(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral(["\n                  <button\n                    part=\"password-toggle-button\"\n                    class=\"input__password-toggle\"\n                    type=\"button\"\n                    aria-label=", "\n                    @click=", "\n                    tabindex=\"-1\"\n                  >\n                    ", "\n                  </button>\n                "])), this.localize.term(this.passwordVisible ? "hidePassword" : "showPassword"), this.handlePasswordToggle, this.passwordVisible ? x(_templateObject11 || (_templateObject11 = _taggedTemplateLiteral(["\n                          <slot name=\"show-password-icon\">\n                            <sl-icon name=\"eye-slash\" library=\"system\"></sl-icon>\n                          </slot>\n                        "]))) : x(_templateObject12 || (_templateObject12 = _taggedTemplateLiteral(["\n                          <slot name=\"hide-password-icon\">\n                            <sl-icon name=\"eye\" library=\"system\"></sl-icon>\n                          </slot>\n                        "])))) : "", hasHelpText ? "false" : "true", this.helpText);
      }
    }]);
  }(ShoelaceElement);
  SlInput.styles = [component_styles_default, form_control_styles_default, input_styles_default];
  SlInput.dependencies = {
    "sl-icon": SlIcon
  };
  __decorateClass([e$4(".input__control")], SlInput.prototype, "input", 2);
  __decorateClass([r()], SlInput.prototype, "hasFocus", 2);
  __decorateClass([n$2()], SlInput.prototype, "title", 2);
  __decorateClass([n$2({
    reflect: true
  })], SlInput.prototype, "type", 2);
  __decorateClass([n$2()], SlInput.prototype, "name", 2);
  __decorateClass([n$2()], SlInput.prototype, "value", 2);
  __decorateClass([defaultValue()], SlInput.prototype, "defaultValue", 2);
  __decorateClass([n$2({
    reflect: true
  })], SlInput.prototype, "size", 2);
  __decorateClass([n$2({
    type: Boolean,
    reflect: true
  })], SlInput.prototype, "filled", 2);
  __decorateClass([n$2({
    type: Boolean,
    reflect: true
  })], SlInput.prototype, "pill", 2);
  __decorateClass([n$2()], SlInput.prototype, "label", 2);
  __decorateClass([n$2({
    attribute: "help-text"
  })], SlInput.prototype, "helpText", 2);
  __decorateClass([n$2({
    type: Boolean
  })], SlInput.prototype, "clearable", 2);
  __decorateClass([n$2({
    type: Boolean,
    reflect: true
  })], SlInput.prototype, "disabled", 2);
  __decorateClass([n$2()], SlInput.prototype, "placeholder", 2);
  __decorateClass([n$2({
    type: Boolean,
    reflect: true
  })], SlInput.prototype, "readonly", 2);
  __decorateClass([n$2({
    attribute: "password-toggle",
    type: Boolean
  })], SlInput.prototype, "passwordToggle", 2);
  __decorateClass([n$2({
    attribute: "password-visible",
    type: Boolean
  })], SlInput.prototype, "passwordVisible", 2);
  __decorateClass([n$2({
    attribute: "no-spin-buttons",
    type: Boolean
  })], SlInput.prototype, "noSpinButtons", 2);
  __decorateClass([n$2({
    reflect: true
  })], SlInput.prototype, "form", 2);
  __decorateClass([n$2({
    type: Boolean,
    reflect: true
  })], SlInput.prototype, "required", 2);
  __decorateClass([n$2()], SlInput.prototype, "pattern", 2);
  __decorateClass([n$2({
    type: Number
  })], SlInput.prototype, "minlength", 2);
  __decorateClass([n$2({
    type: Number
  })], SlInput.prototype, "maxlength", 2);
  __decorateClass([n$2()], SlInput.prototype, "min", 2);
  __decorateClass([n$2()], SlInput.prototype, "max", 2);
  __decorateClass([n$2()], SlInput.prototype, "step", 2);
  __decorateClass([n$2()], SlInput.prototype, "autocapitalize", 2);
  __decorateClass([n$2()], SlInput.prototype, "autocorrect", 2);
  __decorateClass([n$2()], SlInput.prototype, "autocomplete", 2);
  __decorateClass([n$2({
    type: Boolean
  })], SlInput.prototype, "autofocus", 2);
  __decorateClass([n$2()], SlInput.prototype, "enterkeyhint", 2);
  __decorateClass([n$2({
    type: Boolean,
    converter: {
      fromAttribute: function fromAttribute(value) {
        return !value || value === "false" ? false : true;
      },
      toAttribute: function toAttribute(value) {
        return value ? "true" : "false";
      }
    }
  })], SlInput.prototype, "spellcheck", 2);
  __decorateClass([n$2()], SlInput.prototype, "inputmode", 2);
  __decorateClass([watch("disabled", {
    waitUntilFirstUpdate: true
  })], SlInput.prototype, "handleDisabledChange", 1);
  __decorateClass([watch("step", {
    waitUntilFirstUpdate: true
  })], SlInput.prototype, "handleStepChange", 1);
  __decorateClass([watch("value", {
    waitUntilFirstUpdate: true
  })], SlInput.prototype, "handleValueChange", 1);
  function drag(container, options) {
    function move(pointerEvent) {
      var dims = container.getBoundingClientRect();
      var defaultView = container.ownerDocument.defaultView;
      var offsetX = dims.left + defaultView.scrollX;
      var offsetY = dims.top + defaultView.scrollY;
      var x = pointerEvent.pageX - offsetX;
      var y = pointerEvent.pageY - offsetY;
      if (options == null ? void 0 : options.onMove) {
        options.onMove(x, y);
      }
    }
    function stop() {
      document.removeEventListener("pointermove", move);
      document.removeEventListener("pointerup", stop);
      if (options == null ? void 0 : options.onStop) {
        options.onStop();
      }
    }
    document.addEventListener("pointermove", move, {
      passive: true
    });
    document.addEventListener("pointerup", stop);
    if ((options == null ? void 0 : options.initialEvent) instanceof PointerEvent) {
      move(options.initialEvent);
    }
  }
  var dropdown_styles_default = i$4(_templateObject13 || (_templateObject13 = _taggedTemplateLiteral(["\n  :host {\n    display: inline-block;\n  }\n\n  .dropdown::part(popup) {\n    z-index: var(--sl-z-index-dropdown);\n  }\n\n  .dropdown[data-current-placement^='top']::part(popup) {\n    transform-origin: bottom;\n  }\n\n  .dropdown[data-current-placement^='bottom']::part(popup) {\n    transform-origin: top;\n  }\n\n  .dropdown[data-current-placement^='left']::part(popup) {\n    transform-origin: right;\n  }\n\n  .dropdown[data-current-placement^='right']::part(popup) {\n    transform-origin: left;\n  }\n\n  .dropdown__trigger {\n    display: block;\n  }\n\n  .dropdown__panel {\n    font-family: var(--sl-font-sans);\n    font-size: var(--sl-font-size-medium);\n    font-weight: var(--sl-font-weight-normal);\n    box-shadow: var(--sl-shadow-large);\n    border-radius: var(--sl-border-radius-medium);\n    pointer-events: none;\n  }\n\n  .dropdown--open .dropdown__panel {\n    display: block;\n    pointer-events: all;\n  }\n\n  /* When users slot a menu, make sure it conforms to the popup's auto-size */\n  ::slotted(sl-menu) {\n    max-width: var(--auto-size-available-width) !important;\n    max-height: var(--auto-size-available-height) !important;\n  }\n"])));
  var computedStyleMap = new WeakMap();
  function getCachedComputedStyle(el) {
    var computedStyle = computedStyleMap.get(el);
    if (!computedStyle) {
      computedStyle = window.getComputedStyle(el, null);
      computedStyleMap.set(el, computedStyle);
    }
    return computedStyle;
  }
  function isVisible(el) {
    if (typeof el.checkVisibility === "function") {
      return el.checkVisibility({
        checkOpacity: false,
        checkVisibilityCSS: true
      });
    }
    var computedStyle = getCachedComputedStyle(el);
    return computedStyle.visibility !== "hidden" && computedStyle.display !== "none";
  }
  function isOverflowingAndTabbable(el) {
    var computedStyle = getCachedComputedStyle(el);
    var overflowY = computedStyle.overflowY,
      overflowX = computedStyle.overflowX;
    if (overflowY === "scroll" || overflowX === "scroll") {
      return true;
    }
    if (overflowY !== "auto" || overflowX !== "auto") {
      return false;
    }
    var isOverflowingY = el.scrollHeight > el.clientHeight;
    if (isOverflowingY && overflowY === "auto") {
      return true;
    }
    var isOverflowingX = el.scrollWidth > el.clientWidth;
    if (isOverflowingX && overflowX === "auto") {
      return true;
    }
    return false;
  }
  function isTabbable(el) {
    var tag = el.tagName.toLowerCase();
    var tabindex = Number(el.getAttribute("tabindex"));
    var hasTabindex = el.hasAttribute("tabindex");
    if (hasTabindex && (isNaN(tabindex) || tabindex <= -1)) {
      return false;
    }
    if (el.hasAttribute("disabled")) {
      return false;
    }
    if (el.closest("[inert]")) {
      return false;
    }
    if (tag === "input" && el.getAttribute("type") === "radio" && !el.hasAttribute("checked")) {
      return false;
    }
    if (!isVisible(el)) {
      return false;
    }
    if ((tag === "audio" || tag === "video") && el.hasAttribute("controls")) {
      return true;
    }
    if (el.hasAttribute("tabindex")) {
      return true;
    }
    if (el.hasAttribute("contenteditable") && el.getAttribute("contenteditable") !== "false") {
      return true;
    }
    var isNativelyTabbable = ["button", "input", "select", "textarea", "a", "audio", "video", "summary", "iframe"].includes(tag);
    if (isNativelyTabbable) {
      return true;
    }
    return isOverflowingAndTabbable(el);
  }
  function getTabbableBoundary(root) {
    var _a, _b;
    var tabbableElements = getTabbableElements(root);
    var start = (_a = tabbableElements[0]) != null ? _a : null;
    var end = (_b = tabbableElements[tabbableElements.length - 1]) != null ? _b : null;
    return {
      start: start,
      end: end
    };
  }
  function getSlottedChildrenOutsideRootElement(slotElement, root) {
    var _a;
    return ((_a = slotElement.getRootNode({
      composed: true
    })) == null ? void 0 : _a.host) !== root;
  }
  function getTabbableElements(root) {
    var walkedEls = new WeakMap();
    var tabbableElements = [];
    function walk(el) {
      if (el instanceof Element) {
        if (el.hasAttribute("inert") || el.closest("[inert]")) {
          return;
        }
        if (walkedEls.has(el)) {
          return;
        }
        walkedEls.set(el, true);
        if (!tabbableElements.includes(el) && isTabbable(el)) {
          tabbableElements.push(el);
        }
        if (el instanceof HTMLSlotElement && getSlottedChildrenOutsideRootElement(el, root)) {
          el.assignedElements({
            flatten: true
          }).forEach(function (assignedEl) {
            walk(assignedEl);
          });
        }
        if (el.shadowRoot !== null && el.shadowRoot.mode === "open") {
          walk(el.shadowRoot);
        }
      }
      var _iterator17 = _createForOfIteratorHelper(el.children),
        _step17;
      try {
        for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {
          var _e6 = _step17.value;
          walk(_e6);
        }
      } catch (err) {
        _iterator17.e(err);
      } finally {
        _iterator17.f();
      }
    }
    walk(root);
    return tabbableElements.sort(function (a, b) {
      var aTabindex = Number(a.getAttribute("tabindex")) || 0;
      var bTabindex = Number(b.getAttribute("tabindex")) || 0;
      return bTabindex - aTabindex;
    });
  }
  var popup_styles_default = i$4(_templateObject14 || (_templateObject14 = _taggedTemplateLiteral(["\n  :host {\n    --arrow-color: var(--sl-color-neutral-1000);\n    --arrow-size: 6px;\n\n    /*\n     * These properties are computed to account for the arrow's dimensions after being rotated 45\xBA. The constant\n     * 0.7071 is derived from sin(45), which is the diagonal size of the arrow's container after rotating.\n     */\n    --arrow-size-diagonal: calc(var(--arrow-size) * 0.7071);\n    --arrow-padding-offset: calc(var(--arrow-size-diagonal) - var(--arrow-size));\n\n    display: contents;\n  }\n\n  .popup {\n    position: absolute;\n    isolation: isolate;\n    max-width: var(--auto-size-available-width, none);\n    max-height: var(--auto-size-available-height, none);\n  }\n\n  .popup--fixed {\n    position: fixed;\n  }\n\n  .popup:not(.popup--active) {\n    display: none;\n  }\n\n  .popup__arrow {\n    position: absolute;\n    width: calc(var(--arrow-size-diagonal) * 2);\n    height: calc(var(--arrow-size-diagonal) * 2);\n    rotate: 45deg;\n    background: var(--arrow-color);\n    z-index: -1;\n  }\n\n  /* Hover bridge */\n  .popup-hover-bridge:not(.popup-hover-bridge--visible) {\n    display: none;\n  }\n\n  .popup-hover-bridge {\n    position: fixed;\n    z-index: calc(var(--sl-z-index-dropdown) - 1);\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    clip-path: polygon(\n      var(--hover-bridge-top-left-x, 0) var(--hover-bridge-top-left-y, 0),\n      var(--hover-bridge-top-right-x, 0) var(--hover-bridge-top-right-y, 0),\n      var(--hover-bridge-bottom-right-x, 0) var(--hover-bridge-bottom-right-y, 0),\n      var(--hover-bridge-bottom-left-x, 0) var(--hover-bridge-bottom-left-y, 0)\n    );\n  }\n"])));
  var min = Math.min;
  var max = Math.max;
  var round = Math.round;
  var floor = Math.floor;
  var createCoords = function createCoords(v) {
    return {
      x: v,
      y: v
    };
  };
  var oppositeSideMap = {
    left: 'right',
    right: 'left',
    bottom: 'top',
    top: 'bottom'
  };
  var oppositeAlignmentMap = {
    start: 'end',
    end: 'start'
  };
  function clamp$1(start, value, end) {
    return max(start, min(value, end));
  }
  function evaluate(value, param) {
    return typeof value === 'function' ? value(param) : value;
  }
  function getSide(placement) {
    return placement.split('-')[0];
  }
  function getAlignment(placement) {
    return placement.split('-')[1];
  }
  function getOppositeAxis(axis) {
    return axis === 'x' ? 'y' : 'x';
  }
  function getAxisLength(axis) {
    return axis === 'y' ? 'height' : 'width';
  }
  function getSideAxis(placement) {
    return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';
  }
  function getAlignmentAxis(placement) {
    return getOppositeAxis(getSideAxis(placement));
  }
  function getAlignmentSides(placement, rects, rtl) {
    if (rtl === void 0) {
      rtl = false;
    }
    var alignment = getAlignment(placement);
    var alignmentAxis = getAlignmentAxis(placement);
    var length = getAxisLength(alignmentAxis);
    var mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';
    if (rects.reference[length] > rects.floating[length]) {
      mainAlignmentSide = getOppositePlacement(mainAlignmentSide);
    }
    return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];
  }
  function getExpandedPlacements(placement) {
    var oppositePlacement = getOppositePlacement(placement);
    return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];
  }
  function getOppositeAlignmentPlacement(placement) {
    return placement.replace(/start|end/g, function (alignment) {
      return oppositeAlignmentMap[alignment];
    });
  }
  function getSideList(side, isStart, rtl) {
    var lr = ['left', 'right'];
    var rl = ['right', 'left'];
    var tb = ['top', 'bottom'];
    var bt = ['bottom', 'top'];
    switch (side) {
      case 'top':
      case 'bottom':
        if (rtl) return isStart ? rl : lr;
        return isStart ? lr : rl;
      case 'left':
      case 'right':
        return isStart ? tb : bt;
      default:
        return [];
    }
  }
  function getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {
    var alignment = getAlignment(placement);
    var list = getSideList(getSide(placement), direction === 'start', rtl);
    if (alignment) {
      list = list.map(function (side) {
        return side + "-" + alignment;
      });
      if (flipAlignment) {
        list = list.concat(list.map(getOppositeAlignmentPlacement));
      }
    }
    return list;
  }
  function getOppositePlacement(placement) {
    return placement.replace(/left|right|bottom|top/g, function (side) {
      return oppositeSideMap[side];
    });
  }
  function expandPaddingObject(padding) {
    return _objectSpread({
      top: 0,
      right: 0,
      bottom: 0,
      left: 0
    }, padding);
  }
  function getPaddingObject(padding) {
    return typeof padding !== 'number' ? expandPaddingObject(padding) : {
      top: padding,
      right: padding,
      bottom: padding,
      left: padding
    };
  }
  function rectToClientRect(rect) {
    var x = rect.x,
      y = rect.y,
      width = rect.width,
      height = rect.height;
    return {
      width: width,
      height: height,
      top: y,
      left: x,
      right: x + width,
      bottom: y + height,
      x: x,
      y: y
    };
  }
  function computeCoordsFromPlacement(_ref, placement, rtl) {
    var reference = _ref.reference,
      floating = _ref.floating;
    var sideAxis = getSideAxis(placement);
    var alignmentAxis = getAlignmentAxis(placement);
    var alignLength = getAxisLength(alignmentAxis);
    var side = getSide(placement);
    var isVertical = sideAxis === 'y';
    var commonX = reference.x + reference.width / 2 - floating.width / 2;
    var commonY = reference.y + reference.height / 2 - floating.height / 2;
    var commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;
    var coords;
    switch (side) {
      case 'top':
        coords = {
          x: commonX,
          y: reference.y - floating.height
        };
        break;
      case 'bottom':
        coords = {
          x: commonX,
          y: reference.y + reference.height
        };
        break;
      case 'right':
        coords = {
          x: reference.x + reference.width,
          y: commonY
        };
        break;
      case 'left':
        coords = {
          x: reference.x - floating.width,
          y: commonY
        };
        break;
      default:
        coords = {
          x: reference.x,
          y: reference.y
        };
    }
    switch (getAlignment(placement)) {
      case 'start':
        coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);
        break;
      case 'end':
        coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);
        break;
    }
    return coords;
  }
  var computePosition$1 = function () {
    var _ref10 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee5(reference, floating, config) {
      var _config$placement, placement, _config$strategy, strategy, _config$middleware, middleware, platform, validMiddleware, rtl, rects, _computeCoordsFromPla, x, y, statefulPlacement, middlewareData, resetCount, _i14, _validMiddleware$_i, name, fn, _yield$fn, nextX, nextY, data, reset, _computeCoordsFromPla2;
      return _regeneratorRuntime().wrap(function _callee5$(_context5) {
        while (1) switch (_context5.prev = _context5.next) {
          case 0:
            _config$placement = config.placement, placement = _config$placement === void 0 ? 'bottom' : _config$placement, _config$strategy = config.strategy, strategy = _config$strategy === void 0 ? 'absolute' : _config$strategy, _config$middleware = config.middleware, middleware = _config$middleware === void 0 ? [] : _config$middleware, platform = config.platform;
            validMiddleware = middleware.filter(Boolean);
            _context5.next = 4;
            return platform.isRTL == null ? void 0 : platform.isRTL(floating);
          case 4:
            rtl = _context5.sent;
            _context5.next = 7;
            return platform.getElementRects({
              reference: reference,
              floating: floating,
              strategy: strategy
            });
          case 7:
            rects = _context5.sent;
            _computeCoordsFromPla = computeCoordsFromPlacement(rects, placement, rtl), x = _computeCoordsFromPla.x, y = _computeCoordsFromPla.y;
            statefulPlacement = placement;
            middlewareData = {};
            resetCount = 0;
            _i14 = 0;
          case 13:
            if (!(_i14 < validMiddleware.length)) {
              _context5.next = 45;
              break;
            }
            _validMiddleware$_i = validMiddleware[_i14], name = _validMiddleware$_i.name, fn = _validMiddleware$_i.fn;
            _context5.next = 17;
            return fn({
              x: x,
              y: y,
              initialPlacement: placement,
              placement: statefulPlacement,
              strategy: strategy,
              middlewareData: middlewareData,
              rects: rects,
              platform: platform,
              elements: {
                reference: reference,
                floating: floating
              }
            });
          case 17:
            _yield$fn = _context5.sent;
            nextX = _yield$fn.x;
            nextY = _yield$fn.y;
            data = _yield$fn.data;
            reset = _yield$fn.reset;
            x = nextX != null ? nextX : x;
            y = nextY != null ? nextY : y;
            middlewareData = _objectSpread(_objectSpread({}, middlewareData), {}, _defineProperty({}, name, _objectSpread(_objectSpread({}, middlewareData[name]), data)));
            if (!(reset && resetCount <= 50)) {
              _context5.next = 42;
              break;
            }
            resetCount++;
            if (!(_typeof(reset) === 'object')) {
              _context5.next = 41;
              break;
            }
            if (reset.placement) {
              statefulPlacement = reset.placement;
            }
            if (!reset.rects) {
              _context5.next = 38;
              break;
            }
            if (!(reset.rects === true)) {
              _context5.next = 36;
              break;
            }
            _context5.next = 33;
            return platform.getElementRects({
              reference: reference,
              floating: floating,
              strategy: strategy
            });
          case 33:
            _context5.t0 = _context5.sent;
            _context5.next = 37;
            break;
          case 36:
            _context5.t0 = reset.rects;
          case 37:
            rects = _context5.t0;
          case 38:
            _computeCoordsFromPla2 = computeCoordsFromPlacement(rects, statefulPlacement, rtl);
            x = _computeCoordsFromPla2.x;
            y = _computeCoordsFromPla2.y;
          case 41:
            _i14 = -1;
          case 42:
            _i14++;
            _context5.next = 13;
            break;
          case 45:
            return _context5.abrupt("return", {
              x: x,
              y: y,
              placement: statefulPlacement,
              strategy: strategy,
              middlewareData: middlewareData
            });
          case 46:
          case "end":
            return _context5.stop();
        }
      }, _callee5);
    }));
    return function computePosition$1(_x4, _x5, _x6) {
      return _ref10.apply(this, arguments);
    };
  }();
  function detectOverflow(_x7, _x8) {
    return _detectOverflow.apply(this, arguments);
  }
  function _detectOverflow() {
    _detectOverflow = _asyncToGenerator(_regeneratorRuntime().mark(function _callee21(state, options) {
      var _await$platform$isEle, x, y, platform, rects, elements, strategy, _evaluate4, _evaluate4$boundary, boundary, _evaluate4$rootBounda, rootBoundary, _evaluate4$elementCon, elementContext, _evaluate4$altBoundar, altBoundary, _evaluate4$padding, padding, paddingObject, altContext, element, clippingClientRect, rect, offsetParent, offsetScale, elementClientRect;
      return _regeneratorRuntime().wrap(function _callee21$(_context21) {
        while (1) switch (_context21.prev = _context21.next) {
          case 0:
            if (options === void 0) {
              options = {};
            }
            x = state.x, y = state.y, platform = state.platform, rects = state.rects, elements = state.elements, strategy = state.strategy;
            _evaluate4 = evaluate(options, state), _evaluate4$boundary = _evaluate4.boundary, boundary = _evaluate4$boundary === void 0 ? 'clippingAncestors' : _evaluate4$boundary, _evaluate4$rootBounda = _evaluate4.rootBoundary, rootBoundary = _evaluate4$rootBounda === void 0 ? 'viewport' : _evaluate4$rootBounda, _evaluate4$elementCon = _evaluate4.elementContext, elementContext = _evaluate4$elementCon === void 0 ? 'floating' : _evaluate4$elementCon, _evaluate4$altBoundar = _evaluate4.altBoundary, altBoundary = _evaluate4$altBoundar === void 0 ? false : _evaluate4$altBoundar, _evaluate4$padding = _evaluate4.padding, padding = _evaluate4$padding === void 0 ? 0 : _evaluate4$padding;
            paddingObject = getPaddingObject(padding);
            altContext = elementContext === 'floating' ? 'reference' : 'floating';
            element = elements[altBoundary ? altContext : elementContext];
            _context21.t0 = rectToClientRect;
            _context21.t1 = platform;
            _context21.next = 10;
            return platform.isElement == null ? void 0 : platform.isElement(element);
          case 10:
            _context21.t2 = _await$platform$isEle = _context21.sent;
            if (!(_context21.t2 != null)) {
              _context21.next = 15;
              break;
            }
            _context21.t3 = _await$platform$isEle;
            _context21.next = 16;
            break;
          case 15:
            _context21.t3 = true;
          case 16:
            if (!_context21.t3) {
              _context21.next = 20;
              break;
            }
            _context21.t4 = element;
            _context21.next = 26;
            break;
          case 20:
            _context21.t5 = element.contextElement;
            if (_context21.t5) {
              _context21.next = 25;
              break;
            }
            _context21.next = 24;
            return platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating);
          case 24:
            _context21.t5 = _context21.sent;
          case 25:
            _context21.t4 = _context21.t5;
          case 26:
            _context21.t6 = _context21.t4;
            _context21.t7 = boundary;
            _context21.t8 = rootBoundary;
            _context21.t9 = strategy;
            _context21.t10 = {
              element: _context21.t6,
              boundary: _context21.t7,
              rootBoundary: _context21.t8,
              strategy: _context21.t9
            };
            _context21.next = 33;
            return _context21.t1.getClippingRect.call(_context21.t1, _context21.t10);
          case 33:
            _context21.t11 = _context21.sent;
            clippingClientRect = (0, _context21.t0)(_context21.t11);
            rect = elementContext === 'floating' ? {
              x: x,
              y: y,
              width: rects.floating.width,
              height: rects.floating.height
            } : rects.reference;
            _context21.next = 38;
            return platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating);
          case 38:
            offsetParent = _context21.sent;
            _context21.next = 41;
            return platform.isElement == null ? void 0 : platform.isElement(offsetParent);
          case 41:
            if (!_context21.sent) {
              _context21.next = 50;
              break;
            }
            _context21.next = 44;
            return platform.getScale == null ? void 0 : platform.getScale(offsetParent);
          case 44:
            _context21.t13 = _context21.sent;
            if (_context21.t13) {
              _context21.next = 47;
              break;
            }
            _context21.t13 = {
              x: 1,
              y: 1
            };
          case 47:
            _context21.t12 = _context21.t13;
            _context21.next = 51;
            break;
          case 50:
            _context21.t12 = {
              x: 1,
              y: 1
            };
          case 51:
            offsetScale = _context21.t12;
            _context21.t14 = rectToClientRect;
            if (!platform.convertOffsetParentRelativeRectToViewportRelativeRect) {
              _context21.next = 59;
              break;
            }
            _context21.next = 56;
            return platform.convertOffsetParentRelativeRectToViewportRelativeRect({
              elements: elements,
              rect: rect,
              offsetParent: offsetParent,
              strategy: strategy
            });
          case 56:
            _context21.t15 = _context21.sent;
            _context21.next = 60;
            break;
          case 59:
            _context21.t15 = rect;
          case 60:
            _context21.t16 = _context21.t15;
            elementClientRect = (0, _context21.t14)(_context21.t16);
            return _context21.abrupt("return", {
              top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,
              bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,
              left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,
              right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x
            });
          case 63:
          case "end":
            return _context21.stop();
        }
      }, _callee21);
    }));
    return _detectOverflow.apply(this, arguments);
  }
  var arrow$1 = function arrow$1(options) {
    return {
      name: 'arrow',
      options: options,
      fn: function fn(state) {
        return _asyncToGenerator(_regeneratorRuntime().mark(function _callee6() {
          var x, y, placement, rects, platform, elements, middlewareData, _ref11, element, _ref11$padding, padding, paddingObject, coords, axis, length, arrowDimensions, isYAxis, minProp, maxProp, clientProp, endDiff, startDiff, arrowOffsetParent, clientSize, centerToReference, largestPossiblePadding, minPadding, maxPadding, min$1, max, center, offset, shouldAddOffset, alignmentOffset;
          return _regeneratorRuntime().wrap(function _callee6$(_context6) {
            while (1) switch (_context6.prev = _context6.next) {
              case 0:
                x = state.x, y = state.y, placement = state.placement, rects = state.rects, platform = state.platform, elements = state.elements, middlewareData = state.middlewareData;
                _ref11 = evaluate(options, state) || {}, element = _ref11.element, _ref11$padding = _ref11.padding, padding = _ref11$padding === void 0 ? 0 : _ref11$padding;
                if (!(element == null)) {
                  _context6.next = 4;
                  break;
                }
                return _context6.abrupt("return", {});
              case 4:
                paddingObject = getPaddingObject(padding);
                coords = {
                  x: x,
                  y: y
                };
                axis = getAlignmentAxis(placement);
                length = getAxisLength(axis);
                _context6.next = 10;
                return platform.getDimensions(element);
              case 10:
                arrowDimensions = _context6.sent;
                isYAxis = axis === 'y';
                minProp = isYAxis ? 'top' : 'left';
                maxProp = isYAxis ? 'bottom' : 'right';
                clientProp = isYAxis ? 'clientHeight' : 'clientWidth';
                endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];
                startDiff = coords[axis] - rects.reference[axis];
                _context6.next = 19;
                return platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element);
              case 19:
                arrowOffsetParent = _context6.sent;
                clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;
                _context6.t0 = !clientSize;
                if (_context6.t0) {
                  _context6.next = 26;
                  break;
                }
                _context6.next = 25;
                return platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent);
              case 25:
                _context6.t0 = !_context6.sent;
              case 26:
                if (!_context6.t0) {
                  _context6.next = 28;
                  break;
                }
                clientSize = elements.floating[clientProp] || rects.floating[length];
              case 28:
                centerToReference = endDiff / 2 - startDiff / 2;
                largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;
                minPadding = min(paddingObject[minProp], largestPossiblePadding);
                maxPadding = min(paddingObject[maxProp], largestPossiblePadding);
                min$1 = minPadding;
                max = clientSize - arrowDimensions[length] - maxPadding;
                center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;
                offset = clamp$1(min$1, center, max);
                shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;
                alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;
                return _context6.abrupt("return", _defineProperty(_defineProperty(_defineProperty({}, axis, coords[axis] + alignmentOffset), "data", _objectSpread(_defineProperty(_defineProperty({}, axis, offset), "centerOffset", center - offset - alignmentOffset), shouldAddOffset && {
                  alignmentOffset: alignmentOffset
                })), "reset", shouldAddOffset));
              case 39:
              case "end":
                return _context6.stop();
            }
          }, _callee6);
        }))();
      }
    };
  };
  var flip$1 = function flip$1(options) {
    if (options === void 0) {
      options = {};
    }
    return {
      name: 'flip',
      options: options,
      fn: function fn(state) {
        return _asyncToGenerator(_regeneratorRuntime().mark(function _callee7() {
          var _middlewareData$arrow, _middlewareData$flip, placement, middlewareData, rects, initialPlacement, platform, elements, _evaluate, _evaluate$mainAxis, checkMainAxis, _evaluate$crossAxis, checkCrossAxis, specifiedFallbackPlacements, _evaluate$fallbackStr, fallbackStrategy, _evaluate$fallbackAxi, fallbackAxisSideDirection, _evaluate$flipAlignme, flipAlignment, detectOverflowOptions, side, isBasePlacement, rtl, fallbackPlacements, placements, overflow, overflows, overflowsData, sides, _middlewareData$flip2, _overflowsData$filter, nextIndex, nextPlacement, resetPlacement, _overflowsData$map$so, _placement;
          return _regeneratorRuntime().wrap(function _callee7$(_context7) {
            while (1) switch (_context7.prev = _context7.next) {
              case 0:
                placement = state.placement, middlewareData = state.middlewareData, rects = state.rects, initialPlacement = state.initialPlacement, platform = state.platform, elements = state.elements;
                _evaluate = evaluate(options, state), _evaluate$mainAxis = _evaluate.mainAxis, checkMainAxis = _evaluate$mainAxis === void 0 ? true : _evaluate$mainAxis, _evaluate$crossAxis = _evaluate.crossAxis, checkCrossAxis = _evaluate$crossAxis === void 0 ? true : _evaluate$crossAxis, specifiedFallbackPlacements = _evaluate.fallbackPlacements, _evaluate$fallbackStr = _evaluate.fallbackStrategy, fallbackStrategy = _evaluate$fallbackStr === void 0 ? 'bestFit' : _evaluate$fallbackStr, _evaluate$fallbackAxi = _evaluate.fallbackAxisSideDirection, fallbackAxisSideDirection = _evaluate$fallbackAxi === void 0 ? 'none' : _evaluate$fallbackAxi, _evaluate$flipAlignme = _evaluate.flipAlignment, flipAlignment = _evaluate$flipAlignme === void 0 ? true : _evaluate$flipAlignme, detectOverflowOptions = _objectWithoutProperties(_evaluate, _excluded);
                if (!((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset)) {
                  _context7.next = 4;
                  break;
                }
                return _context7.abrupt("return", {});
              case 4:
                side = getSide(placement);
                isBasePlacement = getSide(initialPlacement) === initialPlacement;
                _context7.next = 8;
                return platform.isRTL == null ? void 0 : platform.isRTL(elements.floating);
              case 8:
                rtl = _context7.sent;
                fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));
                if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {
                  fallbackPlacements.push.apply(fallbackPlacements, _toConsumableArray(getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl)));
                }
                placements = [initialPlacement].concat(_toConsumableArray(fallbackPlacements));
                _context7.next = 14;
                return detectOverflow(state, detectOverflowOptions);
              case 14:
                overflow = _context7.sent;
                overflows = [];
                overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];
                if (checkMainAxis) {
                  overflows.push(overflow[side]);
                }
                if (checkCrossAxis) {
                  sides = getAlignmentSides(placement, rects, rtl);
                  overflows.push(overflow[sides[0]], overflow[sides[1]]);
                }
                overflowsData = [].concat(_toConsumableArray(overflowsData), [{
                  placement: placement,
                  overflows: overflows
                }]);
                if (overflows.every(function (side) {
                  return side <= 0;
                })) {
                  _context7.next = 37;
                  break;
                }
                nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;
                nextPlacement = placements[nextIndex];
                if (!nextPlacement) {
                  _context7.next = 25;
                  break;
                }
                return _context7.abrupt("return", {
                  data: {
                    index: nextIndex,
                    overflows: overflowsData
                  },
                  reset: {
                    placement: nextPlacement
                  }
                });
              case 25:
                resetPlacement = (_overflowsData$filter = overflowsData.filter(function (d) {
                  return d.overflows[0] <= 0;
                }).sort(function (a, b) {
                  return a.overflows[1] - b.overflows[1];
                })[0]) == null ? void 0 : _overflowsData$filter.placement;
                if (resetPlacement) {
                  _context7.next = 35;
                  break;
                }
                _context7.t0 = fallbackStrategy;
                _context7.next = _context7.t0 === 'bestFit' ? 30 : _context7.t0 === 'initialPlacement' ? 33 : 35;
                break;
              case 30:
                _placement = (_overflowsData$map$so = overflowsData.map(function (d) {
                  return [d.placement, d.overflows.filter(function (overflow) {
                    return overflow > 0;
                  }).reduce(function (acc, overflow) {
                    return acc + overflow;
                  }, 0)];
                }).sort(function (a, b) {
                  return a[1] - b[1];
                })[0]) == null ? void 0 : _overflowsData$map$so[0];
                if (_placement) {
                  resetPlacement = _placement;
                }
                return _context7.abrupt("break", 35);
              case 33:
                resetPlacement = initialPlacement;
                return _context7.abrupt("break", 35);
              case 35:
                if (!(placement !== resetPlacement)) {
                  _context7.next = 37;
                  break;
                }
                return _context7.abrupt("return", {
                  reset: {
                    placement: resetPlacement
                  }
                });
              case 37:
                return _context7.abrupt("return", {});
              case 38:
              case "end":
                return _context7.stop();
            }
          }, _callee7);
        }))();
      }
    };
  };
  function convertValueToCoords(_x9, _x10) {
    return _convertValueToCoords.apply(this, arguments);
  }
  function _convertValueToCoords() {
    _convertValueToCoords = _asyncToGenerator(_regeneratorRuntime().mark(function _callee22(state, options) {
      var placement, platform, elements, rtl, side, alignment, isVertical, mainAxisMulti, crossAxisMulti, rawValue, _ref20, mainAxis, crossAxis, alignmentAxis;
      return _regeneratorRuntime().wrap(function _callee22$(_context22) {
        while (1) switch (_context22.prev = _context22.next) {
          case 0:
            placement = state.placement, platform = state.platform, elements = state.elements;
            _context22.next = 3;
            return platform.isRTL == null ? void 0 : platform.isRTL(elements.floating);
          case 3:
            rtl = _context22.sent;
            side = getSide(placement);
            alignment = getAlignment(placement);
            isVertical = getSideAxis(placement) === 'y';
            mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;
            crossAxisMulti = rtl && isVertical ? -1 : 1;
            rawValue = evaluate(options, state);
            _ref20 = typeof rawValue === 'number' ? {
              mainAxis: rawValue,
              crossAxis: 0,
              alignmentAxis: null
            } : _objectSpread({
              mainAxis: 0,
              crossAxis: 0,
              alignmentAxis: null
            }, rawValue), mainAxis = _ref20.mainAxis, crossAxis = _ref20.crossAxis, alignmentAxis = _ref20.alignmentAxis;
            if (alignment && typeof alignmentAxis === 'number') {
              crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;
            }
            return _context22.abrupt("return", isVertical ? {
              x: crossAxis * crossAxisMulti,
              y: mainAxis * mainAxisMulti
            } : {
              x: mainAxis * mainAxisMulti,
              y: crossAxis * crossAxisMulti
            });
          case 13:
          case "end":
            return _context22.stop();
        }
      }, _callee22);
    }));
    return _convertValueToCoords.apply(this, arguments);
  }
  var offset$1 = function offset$1(options) {
    if (options === void 0) {
      options = 0;
    }
    return {
      name: 'offset',
      options: options,
      fn: function fn(state) {
        return _asyncToGenerator(_regeneratorRuntime().mark(function _callee8() {
          var _middlewareData$offse, _middlewareData$arrow, x, y, placement, middlewareData, diffCoords;
          return _regeneratorRuntime().wrap(function _callee8$(_context8) {
            while (1) switch (_context8.prev = _context8.next) {
              case 0:
                x = state.x, y = state.y, placement = state.placement, middlewareData = state.middlewareData;
                _context8.next = 3;
                return convertValueToCoords(state, options);
              case 3:
                diffCoords = _context8.sent;
                if (!(placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset)) {
                  _context8.next = 6;
                  break;
                }
                return _context8.abrupt("return", {});
              case 6:
                return _context8.abrupt("return", {
                  x: x + diffCoords.x,
                  y: y + diffCoords.y,
                  data: _objectSpread(_objectSpread({}, diffCoords), {}, {
                    placement: placement
                  })
                });
              case 7:
              case "end":
                return _context8.stop();
            }
          }, _callee8);
        }))();
      }
    };
  };
  var shift$1 = function shift$1(options) {
    if (options === void 0) {
      options = {};
    }
    return {
      name: 'shift',
      options: options,
      fn: function fn(state) {
        return _asyncToGenerator(_regeneratorRuntime().mark(function _callee9() {
          var x, y, placement, _evaluate2, _evaluate2$mainAxis, checkMainAxis, _evaluate2$crossAxis, checkCrossAxis, _evaluate2$limiter, limiter, detectOverflowOptions, coords, overflow, crossAxis, mainAxis, mainAxisCoord, crossAxisCoord, minSide, maxSide, _min, _max, _minSide, _maxSide, _min2, _max2, limitedCoords;
          return _regeneratorRuntime().wrap(function _callee9$(_context9) {
            while (1) switch (_context9.prev = _context9.next) {
              case 0:
                x = state.x, y = state.y, placement = state.placement;
                _evaluate2 = evaluate(options, state), _evaluate2$mainAxis = _evaluate2.mainAxis, checkMainAxis = _evaluate2$mainAxis === void 0 ? true : _evaluate2$mainAxis, _evaluate2$crossAxis = _evaluate2.crossAxis, checkCrossAxis = _evaluate2$crossAxis === void 0 ? false : _evaluate2$crossAxis, _evaluate2$limiter = _evaluate2.limiter, limiter = _evaluate2$limiter === void 0 ? {
                  fn: function fn(_ref) {
                    var x = _ref.x,
                      y = _ref.y;
                    return {
                      x: x,
                      y: y
                    };
                  }
                } : _evaluate2$limiter, detectOverflowOptions = _objectWithoutProperties(_evaluate2, _excluded2);
                coords = {
                  x: x,
                  y: y
                };
                _context9.next = 5;
                return detectOverflow(state, detectOverflowOptions);
              case 5:
                overflow = _context9.sent;
                crossAxis = getSideAxis(getSide(placement));
                mainAxis = getOppositeAxis(crossAxis);
                mainAxisCoord = coords[mainAxis];
                crossAxisCoord = coords[crossAxis];
                if (checkMainAxis) {
                  minSide = mainAxis === 'y' ? 'top' : 'left';
                  maxSide = mainAxis === 'y' ? 'bottom' : 'right';
                  _min = mainAxisCoord + overflow[minSide];
                  _max = mainAxisCoord - overflow[maxSide];
                  mainAxisCoord = clamp$1(_min, mainAxisCoord, _max);
                }
                if (checkCrossAxis) {
                  _minSide = crossAxis === 'y' ? 'top' : 'left';
                  _maxSide = crossAxis === 'y' ? 'bottom' : 'right';
                  _min2 = crossAxisCoord + overflow[_minSide];
                  _max2 = crossAxisCoord - overflow[_maxSide];
                  crossAxisCoord = clamp$1(_min2, crossAxisCoord, _max2);
                }
                limitedCoords = limiter.fn(_objectSpread(_objectSpread({}, state), {}, _defineProperty(_defineProperty({}, mainAxis, mainAxisCoord), crossAxis, crossAxisCoord)));
                return _context9.abrupt("return", _objectSpread(_objectSpread({}, limitedCoords), {}, {
                  data: {
                    x: limitedCoords.x - x,
                    y: limitedCoords.y - y
                  }
                }));
              case 14:
              case "end":
                return _context9.stop();
            }
          }, _callee9);
        }))();
      }
    };
  };
  var size$1 = function size$1(options) {
    if (options === void 0) {
      options = {};
    }
    return {
      name: 'size',
      options: options,
      fn: function fn(state) {
        return _asyncToGenerator(_regeneratorRuntime().mark(function _callee10() {
          var placement, rects, platform, elements, _evaluate3, _evaluate3$apply, apply, detectOverflowOptions, overflow, side, alignment, isYAxis, _rects$floating, width, height, heightSide, widthSide, maximumClippingHeight, maximumClippingWidth, overflowAvailableHeight, overflowAvailableWidth, noShift, availableHeight, availableWidth, xMin, xMax, yMin, yMax, nextDimensions;
          return _regeneratorRuntime().wrap(function _callee10$(_context10) {
            while (1) switch (_context10.prev = _context10.next) {
              case 0:
                placement = state.placement, rects = state.rects, platform = state.platform, elements = state.elements;
                _evaluate3 = evaluate(options, state), _evaluate3$apply = _evaluate3.apply, apply = _evaluate3$apply === void 0 ? function () {} : _evaluate3$apply, detectOverflowOptions = _objectWithoutProperties(_evaluate3, _excluded3);
                _context10.next = 4;
                return detectOverflow(state, detectOverflowOptions);
              case 4:
                overflow = _context10.sent;
                side = getSide(placement);
                alignment = getAlignment(placement);
                isYAxis = getSideAxis(placement) === 'y';
                _rects$floating = rects.floating, width = _rects$floating.width, height = _rects$floating.height;
                if (!(side === 'top' || side === 'bottom')) {
                  _context10.next = 28;
                  break;
                }
                heightSide = side;
                _context10.t0 = alignment;
                _context10.next = 14;
                return platform.isRTL == null ? void 0 : platform.isRTL(elements.floating);
              case 14:
                if (!_context10.sent) {
                  _context10.next = 18;
                  break;
                }
                _context10.t1 = 'start';
                _context10.next = 19;
                break;
              case 18:
                _context10.t1 = 'end';
              case 19:
                _context10.t2 = _context10.t1;
                if (!(_context10.t0 === _context10.t2)) {
                  _context10.next = 24;
                  break;
                }
                _context10.t3 = 'left';
                _context10.next = 25;
                break;
              case 24:
                _context10.t3 = 'right';
              case 25:
                widthSide = _context10.t3;
                _context10.next = 30;
                break;
              case 28:
                widthSide = side;
                heightSide = alignment === 'end' ? 'top' : 'bottom';
              case 30:
                maximumClippingHeight = height - overflow.top - overflow.bottom;
                maximumClippingWidth = width - overflow.left - overflow.right;
                overflowAvailableHeight = min(height - overflow[heightSide], maximumClippingHeight);
                overflowAvailableWidth = min(width - overflow[widthSide], maximumClippingWidth);
                noShift = !state.middlewareData.shift;
                availableHeight = overflowAvailableHeight;
                availableWidth = overflowAvailableWidth;
                if (isYAxis) {
                  availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;
                } else {
                  availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;
                }
                if (noShift && !alignment) {
                  xMin = max(overflow.left, 0);
                  xMax = max(overflow.right, 0);
                  yMin = max(overflow.top, 0);
                  yMax = max(overflow.bottom, 0);
                  if (isYAxis) {
                    availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));
                  } else {
                    availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));
                  }
                }
                _context10.next = 41;
                return apply(_objectSpread(_objectSpread({}, state), {}, {
                  availableWidth: availableWidth,
                  availableHeight: availableHeight
                }));
              case 41:
                _context10.next = 43;
                return platform.getDimensions(elements.floating);
              case 43:
                nextDimensions = _context10.sent;
                if (!(width !== nextDimensions.width || height !== nextDimensions.height)) {
                  _context10.next = 46;
                  break;
                }
                return _context10.abrupt("return", {
                  reset: {
                    rects: true
                  }
                });
              case 46:
                return _context10.abrupt("return", {});
              case 47:
              case "end":
                return _context10.stop();
            }
          }, _callee10);
        }))();
      }
    };
  };
  function getNodeName(node) {
    if (isNode(node)) {
      return (node.nodeName || '').toLowerCase();
    }
    return '#document';
  }
  function getWindow(node) {
    var _node$ownerDocument;
    return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;
  }
  function getDocumentElement(node) {
    var _ref;
    return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;
  }
  function isNode(value) {
    return value instanceof Node || value instanceof getWindow(value).Node;
  }
  function isElement(value) {
    return value instanceof Element || value instanceof getWindow(value).Element;
  }
  function isHTMLElement(value) {
    return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;
  }
  function isShadowRoot(value) {
    if (typeof ShadowRoot === 'undefined') {
      return false;
    }
    return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;
  }
  function isOverflowElement(element) {
    var _getComputedStyle$ = getComputedStyle$1(element),
      overflow = _getComputedStyle$.overflow,
      overflowX = _getComputedStyle$.overflowX,
      overflowY = _getComputedStyle$.overflowY,
      display = _getComputedStyle$.display;
    return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);
  }
  function isTableElement(element) {
    return ['table', 'td', 'th'].includes(getNodeName(element));
  }
  function isContainingBlock(element) {
    var webkit = isWebKit();
    var css = getComputedStyle$1(element);
    return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(function (value) {
      return (css.willChange || '').includes(value);
    }) || ['paint', 'layout', 'strict', 'content'].some(function (value) {
      return (css.contain || '').includes(value);
    });
  }
  function getContainingBlock(element) {
    var currentNode = getParentNode(element);
    while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {
      if (isContainingBlock(currentNode)) {
        return currentNode;
      }
      currentNode = getParentNode(currentNode);
    }
    return null;
  }
  function isWebKit() {
    if (typeof CSS === 'undefined' || !CSS.supports) return false;
    return CSS.supports('-webkit-backdrop-filter', 'none');
  }
  function isLastTraversableNode(node) {
    return ['html', 'body', '#document'].includes(getNodeName(node));
  }
  function getComputedStyle$1(element) {
    return getWindow(element).getComputedStyle(element);
  }
  function getNodeScroll(element) {
    if (isElement(element)) {
      return {
        scrollLeft: element.scrollLeft,
        scrollTop: element.scrollTop
      };
    }
    return {
      scrollLeft: element.pageXOffset,
      scrollTop: element.pageYOffset
    };
  }
  function getParentNode(node) {
    if (getNodeName(node) === 'html') {
      return node;
    }
    var result = node.assignedSlot || node.parentNode || isShadowRoot(node) && node.host || getDocumentElement(node);
    return isShadowRoot(result) ? result.host : result;
  }
  function getNearestOverflowAncestor(node) {
    var parentNode = getParentNode(node);
    if (isLastTraversableNode(parentNode)) {
      return node.ownerDocument ? node.ownerDocument.body : node.body;
    }
    if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {
      return parentNode;
    }
    return getNearestOverflowAncestor(parentNode);
  }
  function getOverflowAncestors(node, list, traverseIframes) {
    var _node$ownerDocument2;
    if (list === void 0) {
      list = [];
    }
    if (traverseIframes === void 0) {
      traverseIframes = true;
    }
    var scrollableAncestor = getNearestOverflowAncestor(node);
    var isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);
    var win = getWindow(scrollableAncestor);
    if (isBody) {
      return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], win.frameElement && traverseIframes ? getOverflowAncestors(win.frameElement) : []);
    }
    return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));
  }
  function getCssDimensions(element) {
    var css = getComputedStyle$1(element);
    var width = parseFloat(css.width) || 0;
    var height = parseFloat(css.height) || 0;
    var hasOffset = isHTMLElement(element);
    var offsetWidth = hasOffset ? element.offsetWidth : width;
    var offsetHeight = hasOffset ? element.offsetHeight : height;
    var shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;
    if (shouldFallback) {
      width = offsetWidth;
      height = offsetHeight;
    }
    return {
      width: width,
      height: height,
      $: shouldFallback
    };
  }
  function unwrapElement(element) {
    return !isElement(element) ? element.contextElement : element;
  }
  function getScale(element) {
    var domElement = unwrapElement(element);
    if (!isHTMLElement(domElement)) {
      return createCoords(1);
    }
    var rect = domElement.getBoundingClientRect();
    var _getCssDimensions = getCssDimensions(domElement),
      width = _getCssDimensions.width,
      height = _getCssDimensions.height,
      $ = _getCssDimensions.$;
    var x = ($ ? round(rect.width) : rect.width) / width;
    var y = ($ ? round(rect.height) : rect.height) / height;
    if (!x || !Number.isFinite(x)) {
      x = 1;
    }
    if (!y || !Number.isFinite(y)) {
      y = 1;
    }
    return {
      x: x,
      y: y
    };
  }
  var noOffsets = createCoords(0);
  function getVisualOffsets(element) {
    var win = getWindow(element);
    if (!isWebKit() || !win.visualViewport) {
      return noOffsets;
    }
    return {
      x: win.visualViewport.offsetLeft,
      y: win.visualViewport.offsetTop
    };
  }
  function shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {
    if (isFixed === void 0) {
      isFixed = false;
    }
    if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {
      return false;
    }
    return isFixed;
  }
  function getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {
    if (includeScale === void 0) {
      includeScale = false;
    }
    if (isFixedStrategy === void 0) {
      isFixedStrategy = false;
    }
    var clientRect = element.getBoundingClientRect();
    var domElement = unwrapElement(element);
    var scale = createCoords(1);
    if (includeScale) {
      if (offsetParent) {
        if (isElement(offsetParent)) {
          scale = getScale(offsetParent);
        }
      } else {
        scale = getScale(element);
      }
    }
    var visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);
    var x = (clientRect.left + visualOffsets.x) / scale.x;
    var y = (clientRect.top + visualOffsets.y) / scale.y;
    var width = clientRect.width / scale.x;
    var height = clientRect.height / scale.y;
    if (domElement) {
      var win = getWindow(domElement);
      var offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;
      var currentWin = win;
      var currentIFrame = currentWin.frameElement;
      while (currentIFrame && offsetParent && offsetWin !== currentWin) {
        var iframeScale = getScale(currentIFrame);
        var iframeRect = currentIFrame.getBoundingClientRect();
        var css = getComputedStyle$1(currentIFrame);
        var left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;
        var top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;
        x *= iframeScale.x;
        y *= iframeScale.y;
        width *= iframeScale.x;
        height *= iframeScale.y;
        x += left;
        y += top;
        currentWin = getWindow(currentIFrame);
        currentIFrame = currentWin.frameElement;
      }
    }
    return rectToClientRect({
      width: width,
      height: height,
      x: x,
      y: y
    });
  }
  var topLayerSelectors = [':popover-open', ':modal'];
  function isTopLayer(element) {
    return topLayerSelectors.some(function (selector) {
      try {
        return element.matches(selector);
      } catch (e) {
        return false;
      }
    });
  }
  function convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {
    var elements = _ref.elements,
      rect = _ref.rect,
      offsetParent = _ref.offsetParent,
      strategy = _ref.strategy;
    var isFixed = strategy === 'fixed';
    var documentElement = getDocumentElement(offsetParent);
    var topLayer = elements ? isTopLayer(elements.floating) : false;
    if (offsetParent === documentElement || topLayer && isFixed) {
      return rect;
    }
    var scroll = {
      scrollLeft: 0,
      scrollTop: 0
    };
    var scale = createCoords(1);
    var offsets = createCoords(0);
    var isOffsetParentAnElement = isHTMLElement(offsetParent);
    if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
      if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {
        scroll = getNodeScroll(offsetParent);
      }
      if (isHTMLElement(offsetParent)) {
        var offsetRect = getBoundingClientRect(offsetParent);
        scale = getScale(offsetParent);
        offsets.x = offsetRect.x + offsetParent.clientLeft;
        offsets.y = offsetRect.y + offsetParent.clientTop;
      }
    }
    return {
      width: rect.width * scale.x,
      height: rect.height * scale.y,
      x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,
      y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y
    };
  }
  function getClientRects(element) {
    return Array.from(element.getClientRects());
  }
  function getWindowScrollBarX(element) {
    return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;
  }
  function getDocumentRect(element) {
    var html = getDocumentElement(element);
    var scroll = getNodeScroll(element);
    var body = element.ownerDocument.body;
    var width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);
    var height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);
    var x = -scroll.scrollLeft + getWindowScrollBarX(element);
    var y = -scroll.scrollTop;
    if (getComputedStyle$1(body).direction === 'rtl') {
      x += max(html.clientWidth, body.clientWidth) - width;
    }
    return {
      width: width,
      height: height,
      x: x,
      y: y
    };
  }
  function getViewportRect(element, strategy) {
    var win = getWindow(element);
    var html = getDocumentElement(element);
    var visualViewport = win.visualViewport;
    var width = html.clientWidth;
    var height = html.clientHeight;
    var x = 0;
    var y = 0;
    if (visualViewport) {
      width = visualViewport.width;
      height = visualViewport.height;
      var visualViewportBased = isWebKit();
      if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {
        x = visualViewport.offsetLeft;
        y = visualViewport.offsetTop;
      }
    }
    return {
      width: width,
      height: height,
      x: x,
      y: y
    };
  }
  function getInnerBoundingClientRect(element, strategy) {
    var clientRect = getBoundingClientRect(element, true, strategy === 'fixed');
    var top = clientRect.top + element.clientTop;
    var left = clientRect.left + element.clientLeft;
    var scale = isHTMLElement(element) ? getScale(element) : createCoords(1);
    var width = element.clientWidth * scale.x;
    var height = element.clientHeight * scale.y;
    var x = left * scale.x;
    var y = top * scale.y;
    return {
      width: width,
      height: height,
      x: x,
      y: y
    };
  }
  function getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {
    var rect;
    if (clippingAncestor === 'viewport') {
      rect = getViewportRect(element, strategy);
    } else if (clippingAncestor === 'document') {
      rect = getDocumentRect(getDocumentElement(element));
    } else if (isElement(clippingAncestor)) {
      rect = getInnerBoundingClientRect(clippingAncestor, strategy);
    } else {
      var visualOffsets = getVisualOffsets(element);
      rect = _objectSpread(_objectSpread({}, clippingAncestor), {}, {
        x: clippingAncestor.x - visualOffsets.x,
        y: clippingAncestor.y - visualOffsets.y
      });
    }
    return rectToClientRect(rect);
  }
  function hasFixedPositionAncestor(element, stopNode) {
    var parentNode = getParentNode(element);
    if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {
      return false;
    }
    return getComputedStyle$1(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);
  }
  function getClippingElementAncestors(element, cache) {
    var cachedResult = cache.get(element);
    if (cachedResult) {
      return cachedResult;
    }
    var result = getOverflowAncestors(element, [], false).filter(function (el) {
      return isElement(el) && getNodeName(el) !== 'body';
    });
    var currentContainingBlockComputedStyle = null;
    var elementIsFixed = getComputedStyle$1(element).position === 'fixed';
    var currentNode = elementIsFixed ? getParentNode(element) : element;
    while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {
      var computedStyle = getComputedStyle$1(currentNode);
      var currentNodeIsContaining = isContainingBlock(currentNode);
      if (!currentNodeIsContaining && computedStyle.position === 'fixed') {
        currentContainingBlockComputedStyle = null;
      }
      var shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);
      if (shouldDropCurrentNode) {
        result = result.filter(function (ancestor) {
          return ancestor !== currentNode;
        });
      } else {
        currentContainingBlockComputedStyle = computedStyle;
      }
      currentNode = getParentNode(currentNode);
    }
    cache.set(element, result);
    return result;
  }
  function getClippingRect(_ref) {
    var element = _ref.element,
      boundary = _ref.boundary,
      rootBoundary = _ref.rootBoundary,
      strategy = _ref.strategy;
    var elementClippingAncestors = boundary === 'clippingAncestors' ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);
    var clippingAncestors = [].concat(_toConsumableArray(elementClippingAncestors), [rootBoundary]);
    var firstClippingAncestor = clippingAncestors[0];
    var clippingRect = clippingAncestors.reduce(function (accRect, clippingAncestor) {
      var rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);
      accRect.top = max(rect.top, accRect.top);
      accRect.right = min(rect.right, accRect.right);
      accRect.bottom = min(rect.bottom, accRect.bottom);
      accRect.left = max(rect.left, accRect.left);
      return accRect;
    }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));
    return {
      width: clippingRect.right - clippingRect.left,
      height: clippingRect.bottom - clippingRect.top,
      x: clippingRect.left,
      y: clippingRect.top
    };
  }
  function getDimensions(element) {
    var _getCssDimensions2 = getCssDimensions(element),
      width = _getCssDimensions2.width,
      height = _getCssDimensions2.height;
    return {
      width: width,
      height: height
    };
  }
  function getRectRelativeToOffsetParent(element, offsetParent, strategy) {
    var isOffsetParentAnElement = isHTMLElement(offsetParent);
    var documentElement = getDocumentElement(offsetParent);
    var isFixed = strategy === 'fixed';
    var rect = getBoundingClientRect(element, true, isFixed, offsetParent);
    var scroll = {
      scrollLeft: 0,
      scrollTop: 0
    };
    var offsets = createCoords(0);
    if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
      if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {
        scroll = getNodeScroll(offsetParent);
      }
      if (isOffsetParentAnElement) {
        var offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);
        offsets.x = offsetRect.x + offsetParent.clientLeft;
        offsets.y = offsetRect.y + offsetParent.clientTop;
      } else if (documentElement) {
        offsets.x = getWindowScrollBarX(documentElement);
      }
    }
    var x = rect.left + scroll.scrollLeft - offsets.x;
    var y = rect.top + scroll.scrollTop - offsets.y;
    return {
      x: x,
      y: y,
      width: rect.width,
      height: rect.height
    };
  }
  function isStaticPositioned(element) {
    return getComputedStyle$1(element).position === 'static';
  }
  function getTrueOffsetParent(element, polyfill) {
    if (!isHTMLElement(element) || getComputedStyle$1(element).position === 'fixed') {
      return null;
    }
    if (polyfill) {
      return polyfill(element);
    }
    return element.offsetParent;
  }
  function getOffsetParent(element, polyfill) {
    var win = getWindow(element);
    if (isTopLayer(element)) {
      return win;
    }
    if (!isHTMLElement(element)) {
      var svgOffsetParent = getParentNode(element);
      while (svgOffsetParent && !isLastTraversableNode(svgOffsetParent)) {
        if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {
          return svgOffsetParent;
        }
        svgOffsetParent = getParentNode(svgOffsetParent);
      }
      return win;
    }
    var offsetParent = getTrueOffsetParent(element, polyfill);
    while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {
      offsetParent = getTrueOffsetParent(offsetParent, polyfill);
    }
    if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {
      return win;
    }
    return offsetParent || getContainingBlock(element) || win;
  }
  var getElementRects = function () {
    var _ref13 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee11(data) {
      var getOffsetParentFn, getDimensionsFn, floatingDimensions;
      return _regeneratorRuntime().wrap(function _callee11$(_context11) {
        while (1) switch (_context11.prev = _context11.next) {
          case 0:
            getOffsetParentFn = this.getOffsetParent || getOffsetParent;
            getDimensionsFn = this.getDimensions;
            _context11.next = 4;
            return getDimensionsFn(data.floating);
          case 4:
            floatingDimensions = _context11.sent;
            _context11.t0 = getRectRelativeToOffsetParent;
            _context11.t1 = data.reference;
            _context11.next = 9;
            return getOffsetParentFn(data.floating);
          case 9:
            _context11.t2 = _context11.sent;
            _context11.t3 = data.strategy;
            _context11.t4 = (0, _context11.t0)(_context11.t1, _context11.t2, _context11.t3);
            _context11.t5 = {
              x: 0,
              y: 0,
              width: floatingDimensions.width,
              height: floatingDimensions.height
            };
            return _context11.abrupt("return", {
              reference: _context11.t4,
              floating: _context11.t5
            });
          case 14:
          case "end":
            return _context11.stop();
        }
      }, _callee11, this);
    }));
    return function getElementRects(_x11) {
      return _ref13.apply(this, arguments);
    };
  }();
  function isRTL(element) {
    return getComputedStyle$1(element).direction === 'rtl';
  }
  var platform = {
    convertOffsetParentRelativeRectToViewportRelativeRect: convertOffsetParentRelativeRectToViewportRelativeRect,
    getDocumentElement: getDocumentElement,
    getClippingRect: getClippingRect,
    getOffsetParent: getOffsetParent,
    getElementRects: getElementRects,
    getClientRects: getClientRects,
    getDimensions: getDimensions,
    getScale: getScale,
    isElement: isElement,
    isRTL: isRTL
  };
  function observeMove(element, onMove) {
    var io = null;
    var timeoutId;
    var root = getDocumentElement(element);
    function cleanup() {
      var _io;
      clearTimeout(timeoutId);
      (_io = io) == null || _io.disconnect();
      io = null;
    }
    function refresh(skip, threshold) {
      if (skip === void 0) {
        skip = false;
      }
      if (threshold === void 0) {
        threshold = 1;
      }
      cleanup();
      var _element$getBoundingC = element.getBoundingClientRect(),
        left = _element$getBoundingC.left,
        top = _element$getBoundingC.top,
        width = _element$getBoundingC.width,
        height = _element$getBoundingC.height;
      if (!skip) {
        onMove();
      }
      if (!width || !height) {
        return;
      }
      var insetTop = floor(top);
      var insetRight = floor(root.clientWidth - (left + width));
      var insetBottom = floor(root.clientHeight - (top + height));
      var insetLeft = floor(left);
      var rootMargin = -insetTop + "px " + -insetRight + "px " + -insetBottom + "px " + -insetLeft + "px";
      var options = {
        rootMargin: rootMargin,
        threshold: max(0, min(1, threshold)) || 1
      };
      var isFirstUpdate = true;
      function handleObserve(entries) {
        var ratio = entries[0].intersectionRatio;
        if (ratio !== threshold) {
          if (!isFirstUpdate) {
            return refresh();
          }
          if (!ratio) {
            timeoutId = setTimeout(function () {
              refresh(false, 1e-7);
            }, 1000);
          } else {
            refresh(false, ratio);
          }
        }
        isFirstUpdate = false;
      }
      try {
        io = new IntersectionObserver(handleObserve, _objectSpread(_objectSpread({}, options), {}, {
          root: root.ownerDocument
        }));
      } catch (e) {
        io = new IntersectionObserver(handleObserve, options);
      }
      io.observe(element);
    }
    refresh(true);
    return cleanup;
  }
  function autoUpdate(reference, floating, update, options) {
    if (options === void 0) {
      options = {};
    }
    var _options = options,
      _options$ancestorScro = _options.ancestorScroll,
      ancestorScroll = _options$ancestorScro === void 0 ? true : _options$ancestorScro,
      _options$ancestorResi = _options.ancestorResize,
      ancestorResize = _options$ancestorResi === void 0 ? true : _options$ancestorResi,
      _options$elementResiz = _options.elementResize,
      elementResize = _options$elementResiz === void 0 ? typeof ResizeObserver === 'function' : _options$elementResiz,
      _options$layoutShift = _options.layoutShift,
      layoutShift = _options$layoutShift === void 0 ? typeof IntersectionObserver === 'function' : _options$layoutShift,
      _options$animationFra = _options.animationFrame,
      animationFrame = _options$animationFra === void 0 ? false : _options$animationFra;
    var referenceEl = unwrapElement(reference);
    var ancestors = ancestorScroll || ancestorResize ? [].concat(_toConsumableArray(referenceEl ? getOverflowAncestors(referenceEl) : []), _toConsumableArray(getOverflowAncestors(floating))) : [];
    ancestors.forEach(function (ancestor) {
      ancestorScroll && ancestor.addEventListener('scroll', update, {
        passive: true
      });
      ancestorResize && ancestor.addEventListener('resize', update);
    });
    var cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;
    var reobserveFrame = -1;
    var resizeObserver = null;
    if (elementResize) {
      resizeObserver = new ResizeObserver(function (_ref) {
        var _ref14 = _slicedToArray(_ref, 1),
          firstEntry = _ref14[0];
        if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {
          resizeObserver.unobserve(floating);
          cancelAnimationFrame(reobserveFrame);
          reobserveFrame = requestAnimationFrame(function () {
            var _resizeObserver;
            (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);
          });
        }
        update();
      });
      if (referenceEl && !animationFrame) {
        resizeObserver.observe(referenceEl);
      }
      resizeObserver.observe(floating);
    }
    var frameId;
    var prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;
    if (animationFrame) {
      frameLoop();
    }
    function frameLoop() {
      var nextRefRect = getBoundingClientRect(reference);
      if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {
        update();
      }
      prevRefRect = nextRefRect;
      frameId = requestAnimationFrame(frameLoop);
    }
    update();
    return function () {
      var _resizeObserver2;
      ancestors.forEach(function (ancestor) {
        ancestorScroll && ancestor.removeEventListener('scroll', update);
        ancestorResize && ancestor.removeEventListener('resize', update);
      });
      cleanupIo == null || cleanupIo();
      (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();
      resizeObserver = null;
      if (animationFrame) {
        cancelAnimationFrame(frameId);
      }
    };
  }
  var offset = offset$1;
  var shift = shift$1;
  var flip = flip$1;
  var size = size$1;
  var arrow = arrow$1;
  var computePosition = function computePosition(reference, floating, options) {
    var cache = new Map();
    var mergedOptions = _objectSpread({
      platform: platform
    }, options);
    var platformWithCache = _objectSpread(_objectSpread({}, mergedOptions.platform), {}, {
      _c: cache
    });
    return computePosition$1(reference, floating, _objectSpread(_objectSpread({}, mergedOptions), {}, {
      platform: platformWithCache
    }));
  };
  function offsetParent(element) {
    return offsetParentPolyfill(element);
  }
  function flatTreeParent(element) {
    if (element.assignedSlot) {
      return element.assignedSlot;
    }
    if (element.parentNode instanceof ShadowRoot) {
      return element.parentNode.host;
    }
    return element.parentNode;
  }
  function offsetParentPolyfill(element) {
    for (var ancestor = element; ancestor; ancestor = flatTreeParent(ancestor)) {
      if (!(ancestor instanceof Element)) {
        continue;
      }
      if (getComputedStyle(ancestor).display === 'none') {
        return null;
      }
    }
    for (var _ancestor = flatTreeParent(element); _ancestor; _ancestor = flatTreeParent(_ancestor)) {
      if (!(_ancestor instanceof Element)) {
        continue;
      }
      var style = getComputedStyle(_ancestor);
      if (style.display === 'contents') {
        continue;
      }
      if (style.position !== 'static' || style.filter !== 'none') {
        return _ancestor;
      }
      if (_ancestor.tagName === 'BODY') {
        return _ancestor;
      }
    }
    return null;
  }
  function isVirtualElement(e) {
    return e !== null && _typeof(e) === "object" && "getBoundingClientRect" in e;
  }
  var SlPopup = function (_ShoelaceElement4) {
    function SlPopup() {
      var _this20;
      _classCallCheck(this, SlPopup);
      _this20 = _callSuper(this, SlPopup, arguments);
      _this20.active = false;
      _this20.placement = "top";
      _this20.strategy = "absolute";
      _this20.distance = 0;
      _this20.skidding = 0;
      _this20.arrow = false;
      _this20.arrowPlacement = "anchor";
      _this20.arrowPadding = 10;
      _this20.flip = false;
      _this20.flipFallbackPlacements = "";
      _this20.flipFallbackStrategy = "best-fit";
      _this20.flipPadding = 0;
      _this20.shift = false;
      _this20.shiftPadding = 0;
      _this20.autoSizePadding = 0;
      _this20.hoverBridge = false;
      _this20.updateHoverBridge = function () {
        if (_this20.hoverBridge && _this20.anchorEl) {
          var anchorRect = _this20.anchorEl.getBoundingClientRect();
          var popupRect = _this20.popup.getBoundingClientRect();
          var isVertical = _this20.placement.includes("top") || _this20.placement.includes("bottom");
          var topLeftX = 0;
          var topLeftY = 0;
          var topRightX = 0;
          var topRightY = 0;
          var bottomLeftX = 0;
          var bottomLeftY = 0;
          var bottomRightX = 0;
          var bottomRightY = 0;
          if (isVertical) {
            if (anchorRect.top < popupRect.top) {
              topLeftX = anchorRect.left;
              topLeftY = anchorRect.bottom;
              topRightX = anchorRect.right;
              topRightY = anchorRect.bottom;
              bottomLeftX = popupRect.left;
              bottomLeftY = popupRect.top;
              bottomRightX = popupRect.right;
              bottomRightY = popupRect.top;
            } else {
              topLeftX = popupRect.left;
              topLeftY = popupRect.bottom;
              topRightX = popupRect.right;
              topRightY = popupRect.bottom;
              bottomLeftX = anchorRect.left;
              bottomLeftY = anchorRect.top;
              bottomRightX = anchorRect.right;
              bottomRightY = anchorRect.top;
            }
          } else {
            if (anchorRect.left < popupRect.left) {
              topLeftX = anchorRect.right;
              topLeftY = anchorRect.top;
              topRightX = popupRect.left;
              topRightY = popupRect.top;
              bottomLeftX = anchorRect.right;
              bottomLeftY = anchorRect.bottom;
              bottomRightX = popupRect.left;
              bottomRightY = popupRect.bottom;
            } else {
              topLeftX = popupRect.right;
              topLeftY = popupRect.top;
              topRightX = anchorRect.left;
              topRightY = anchorRect.top;
              bottomLeftX = popupRect.right;
              bottomLeftY = popupRect.bottom;
              bottomRightX = anchorRect.left;
              bottomRightY = anchorRect.bottom;
            }
          }
          _this20.style.setProperty("--hover-bridge-top-left-x", "".concat(topLeftX, "px"));
          _this20.style.setProperty("--hover-bridge-top-left-y", "".concat(topLeftY, "px"));
          _this20.style.setProperty("--hover-bridge-top-right-x", "".concat(topRightX, "px"));
          _this20.style.setProperty("--hover-bridge-top-right-y", "".concat(topRightY, "px"));
          _this20.style.setProperty("--hover-bridge-bottom-left-x", "".concat(bottomLeftX, "px"));
          _this20.style.setProperty("--hover-bridge-bottom-left-y", "".concat(bottomLeftY, "px"));
          _this20.style.setProperty("--hover-bridge-bottom-right-x", "".concat(bottomRightX, "px"));
          _this20.style.setProperty("--hover-bridge-bottom-right-y", "".concat(bottomRightY, "px"));
        }
      };
      return _this20;
    }
    _inherits(SlPopup, _ShoelaceElement4);
    return _createClass(SlPopup, [{
      key: "connectedCallback",
      value: function () {
        var _connectedCallback = _asyncToGenerator(_regeneratorRuntime().mark(function _callee12() {
          return _regeneratorRuntime().wrap(function _callee12$(_context12) {
            while (1) switch (_context12.prev = _context12.next) {
              case 0:
                _get(_getPrototypeOf(SlPopup.prototype), "connectedCallback", this).call(this);
                _context12.next = 3;
                return this.updateComplete;
              case 3:
                this.start();
              case 4:
              case "end":
                return _context12.stop();
            }
          }, _callee12, this);
        }));
        function connectedCallback() {
          return _connectedCallback.apply(this, arguments);
        }
        return connectedCallback;
      }()
    }, {
      key: "disconnectedCallback",
      value: function disconnectedCallback() {
        _get(_getPrototypeOf(SlPopup.prototype), "disconnectedCallback", this).call(this);
        this.stop();
      }
    }, {
      key: "updated",
      value: function () {
        var _updated = _asyncToGenerator(_regeneratorRuntime().mark(function _callee13(changedProps) {
          return _regeneratorRuntime().wrap(function _callee13$(_context13) {
            while (1) switch (_context13.prev = _context13.next) {
              case 0:
                _get(_getPrototypeOf(SlPopup.prototype), "updated", this).call(this, changedProps);
                if (changedProps.has("active")) {
                  if (this.active) {
                    this.start();
                  } else {
                    this.stop();
                  }
                }
                if (changedProps.has("anchor")) {
                  this.handleAnchorChange();
                }
                if (!this.active) {
                  _context13.next = 7;
                  break;
                }
                _context13.next = 6;
                return this.updateComplete;
              case 6:
                this.reposition();
              case 7:
              case "end":
                return _context13.stop();
            }
          }, _callee13, this);
        }));
        function updated(_x12) {
          return _updated.apply(this, arguments);
        }
        return updated;
      }()
    }, {
      key: "handleAnchorChange",
      value: function () {
        var _handleAnchorChange = _asyncToGenerator(_regeneratorRuntime().mark(function _callee14() {
          var root;
          return _regeneratorRuntime().wrap(function _callee14$(_context14) {
            while (1) switch (_context14.prev = _context14.next) {
              case 0:
                _context14.next = 2;
                return this.stop();
              case 2:
                if (this.anchor && typeof this.anchor === "string") {
                  root = this.getRootNode();
                  this.anchorEl = root.getElementById(this.anchor);
                } else if (this.anchor instanceof Element || isVirtualElement(this.anchor)) {
                  this.anchorEl = this.anchor;
                } else {
                  this.anchorEl = this.querySelector('[slot="anchor"]');
                }
                if (this.anchorEl instanceof HTMLSlotElement) {
                  this.anchorEl = this.anchorEl.assignedElements({
                    flatten: true
                  })[0];
                }
                if (this.anchorEl) {
                  this.start();
                }
              case 5:
              case "end":
                return _context14.stop();
            }
          }, _callee14, this);
        }));
        function handleAnchorChange() {
          return _handleAnchorChange.apply(this, arguments);
        }
        return handleAnchorChange;
      }()
    }, {
      key: "start",
      value: function start() {
        var _this21 = this;
        if (!this.anchorEl) {
          return;
        }
        this.cleanup = autoUpdate(this.anchorEl, this.popup, function () {
          _this21.reposition();
        });
      }
    }, {
      key: "stop",
      value: function () {
        var _stop = _asyncToGenerator(_regeneratorRuntime().mark(function _callee15() {
          var _this22 = this;
          return _regeneratorRuntime().wrap(function _callee15$(_context15) {
            while (1) switch (_context15.prev = _context15.next) {
              case 0:
                return _context15.abrupt("return", new Promise(function (resolve) {
                  if (_this22.cleanup) {
                    _this22.cleanup();
                    _this22.cleanup = void 0;
                    _this22.removeAttribute("data-current-placement");
                    _this22.style.removeProperty("--auto-size-available-width");
                    _this22.style.removeProperty("--auto-size-available-height");
                    requestAnimationFrame(function () {
                      return resolve();
                    });
                  } else {
                    resolve();
                  }
                }));
              case 1:
              case "end":
                return _context15.stop();
            }
          }, _callee15);
        }));
        function stop() {
          return _stop.apply(this, arguments);
        }
        return stop;
      }()
    }, {
      key: "reposition",
      value: function reposition() {
        var _this23 = this;
        if (!this.active || !this.anchorEl) {
          return;
        }
        var middleware = [offset({
          mainAxis: this.distance,
          crossAxis: this.skidding
        })];
        if (this.sync) {
          middleware.push(size({
            apply: function apply(_ref15) {
              var rects = _ref15.rects;
              var syncWidth = _this23.sync === "width" || _this23.sync === "both";
              var syncHeight = _this23.sync === "height" || _this23.sync === "both";
              _this23.popup.style.width = syncWidth ? "".concat(rects.reference.width, "px") : "";
              _this23.popup.style.height = syncHeight ? "".concat(rects.reference.height, "px") : "";
            }
          }));
        } else {
          this.popup.style.width = "";
          this.popup.style.height = "";
        }
        if (this.flip) {
          middleware.push(flip({
            boundary: this.flipBoundary,
            fallbackPlacements: this.flipFallbackPlacements,
            fallbackStrategy: this.flipFallbackStrategy === "best-fit" ? "bestFit" : "initialPlacement",
            padding: this.flipPadding
          }));
        }
        if (this.shift) {
          middleware.push(shift({
            boundary: this.shiftBoundary,
            padding: this.shiftPadding
          }));
        }
        if (this.autoSize) {
          middleware.push(size({
            boundary: this.autoSizeBoundary,
            padding: this.autoSizePadding,
            apply: function apply(_ref16) {
              var availableWidth = _ref16.availableWidth,
                availableHeight = _ref16.availableHeight;
              if (_this23.autoSize === "vertical" || _this23.autoSize === "both") {
                _this23.style.setProperty("--auto-size-available-height", "".concat(availableHeight, "px"));
              } else {
                _this23.style.removeProperty("--auto-size-available-height");
              }
              if (_this23.autoSize === "horizontal" || _this23.autoSize === "both") {
                _this23.style.setProperty("--auto-size-available-width", "".concat(availableWidth, "px"));
              } else {
                _this23.style.removeProperty("--auto-size-available-width");
              }
            }
          }));
        } else {
          this.style.removeProperty("--auto-size-available-width");
          this.style.removeProperty("--auto-size-available-height");
        }
        if (this.arrow) {
          middleware.push(arrow({
            element: this.arrowEl,
            padding: this.arrowPadding
          }));
        }
        var getOffsetParent = this.strategy === "absolute" ? function (element) {
          return platform.getOffsetParent(element, offsetParent);
        } : platform.getOffsetParent;
        computePosition(this.anchorEl, this.popup, {
          placement: this.placement,
          middleware: middleware,
          strategy: this.strategy,
          platform: __spreadProps(__spreadValues({}, platform), {
            getOffsetParent: getOffsetParent
          })
        }).then(function (_ref17) {
          var x = _ref17.x,
            y = _ref17.y,
            middlewareData = _ref17.middlewareData,
            placement = _ref17.placement;
          var isRtl = getComputedStyle(_this23).direction === "rtl";
          var staticSide = {
            top: "bottom",
            right: "left",
            bottom: "top",
            left: "right"
          }[placement.split("-")[0]];
          _this23.setAttribute("data-current-placement", placement);
          Object.assign(_this23.popup.style, {
            left: "".concat(x, "px"),
            top: "".concat(y, "px")
          });
          if (_this23.arrow) {
            var arrowX = middlewareData.arrow.x;
            var arrowY = middlewareData.arrow.y;
            var top = "";
            var right = "";
            var bottom = "";
            var left = "";
            if (_this23.arrowPlacement === "start") {
              var value = typeof arrowX === "number" ? "calc(".concat(_this23.arrowPadding, "px - var(--arrow-padding-offset))") : "";
              top = typeof arrowY === "number" ? "calc(".concat(_this23.arrowPadding, "px - var(--arrow-padding-offset))") : "";
              right = isRtl ? value : "";
              left = isRtl ? "" : value;
            } else if (_this23.arrowPlacement === "end") {
              var _value = typeof arrowX === "number" ? "calc(".concat(_this23.arrowPadding, "px - var(--arrow-padding-offset))") : "";
              right = isRtl ? "" : _value;
              left = isRtl ? _value : "";
              bottom = typeof arrowY === "number" ? "calc(".concat(_this23.arrowPadding, "px - var(--arrow-padding-offset))") : "";
            } else if (_this23.arrowPlacement === "center") {
              left = typeof arrowX === "number" ? "calc(50% - var(--arrow-size-diagonal))" : "";
              top = typeof arrowY === "number" ? "calc(50% - var(--arrow-size-diagonal))" : "";
            } else {
              left = typeof arrowX === "number" ? "".concat(arrowX, "px") : "";
              top = typeof arrowY === "number" ? "".concat(arrowY, "px") : "";
            }
            Object.assign(_this23.arrowEl.style, _defineProperty({
              top: top,
              right: right,
              bottom: bottom,
              left: left
            }, staticSide, "calc(var(--arrow-size-diagonal) * -1)"));
          }
        });
        requestAnimationFrame(function () {
          return _this23.updateHoverBridge();
        });
        this.emit("sl-reposition");
      }
    }, {
      key: "render",
      value: function render() {
        return x(_templateObject15 || (_templateObject15 = _taggedTemplateLiteral(["\n      <slot name=\"anchor\" @slotchange=", "></slot>\n\n      <span\n        part=\"hover-bridge\"\n        class=", "\n      ></span>\n\n      <div\n        part=\"popup\"\n        class=", "\n      >\n        <slot></slot>\n        ", "\n      </div>\n    "])), this.handleAnchorChange, e$1({
          "popup-hover-bridge": true,
          "popup-hover-bridge--visible": this.hoverBridge && this.active
        }), e$1({
          popup: true,
          "popup--active": this.active,
          "popup--fixed": this.strategy === "fixed",
          "popup--has-arrow": this.arrow
        }), this.arrow ? x(_templateObject16 || (_templateObject16 = _taggedTemplateLiteral(["<div part=\"arrow\" class=\"popup__arrow\" role=\"presentation\"></div>"]))) : "");
      }
    }]);
  }(ShoelaceElement);
  SlPopup.styles = [component_styles_default, popup_styles_default];
  __decorateClass([e$4(".popup")], SlPopup.prototype, "popup", 2);
  __decorateClass([e$4(".popup__arrow")], SlPopup.prototype, "arrowEl", 2);
  __decorateClass([n$2()], SlPopup.prototype, "anchor", 2);
  __decorateClass([n$2({
    type: Boolean,
    reflect: true
  })], SlPopup.prototype, "active", 2);
  __decorateClass([n$2({
    reflect: true
  })], SlPopup.prototype, "placement", 2);
  __decorateClass([n$2({
    reflect: true
  })], SlPopup.prototype, "strategy", 2);
  __decorateClass([n$2({
    type: Number
  })], SlPopup.prototype, "distance", 2);
  __decorateClass([n$2({
    type: Number
  })], SlPopup.prototype, "skidding", 2);
  __decorateClass([n$2({
    type: Boolean
  })], SlPopup.prototype, "arrow", 2);
  __decorateClass([n$2({
    attribute: "arrow-placement"
  })], SlPopup.prototype, "arrowPlacement", 2);
  __decorateClass([n$2({
    attribute: "arrow-padding",
    type: Number
  })], SlPopup.prototype, "arrowPadding", 2);
  __decorateClass([n$2({
    type: Boolean
  })], SlPopup.prototype, "flip", 2);
  __decorateClass([n$2({
    attribute: "flip-fallback-placements",
    converter: {
      fromAttribute: function fromAttribute(value) {
        return value.split(" ").map(function (p) {
          return p.trim();
        }).filter(function (p) {
          return p !== "";
        });
      },
      toAttribute: function toAttribute(value) {
        return value.join(" ");
      }
    }
  })], SlPopup.prototype, "flipFallbackPlacements", 2);
  __decorateClass([n$2({
    attribute: "flip-fallback-strategy"
  })], SlPopup.prototype, "flipFallbackStrategy", 2);
  __decorateClass([n$2({
    type: Object
  })], SlPopup.prototype, "flipBoundary", 2);
  __decorateClass([n$2({
    attribute: "flip-padding",
    type: Number
  })], SlPopup.prototype, "flipPadding", 2);
  __decorateClass([n$2({
    type: Boolean
  })], SlPopup.prototype, "shift", 2);
  __decorateClass([n$2({
    type: Object
  })], SlPopup.prototype, "shiftBoundary", 2);
  __decorateClass([n$2({
    attribute: "shift-padding",
    type: Number
  })], SlPopup.prototype, "shiftPadding", 2);
  __decorateClass([n$2({
    attribute: "auto-size"
  })], SlPopup.prototype, "autoSize", 2);
  __decorateClass([n$2()], SlPopup.prototype, "sync", 2);
  __decorateClass([n$2({
    type: Object
  })], SlPopup.prototype, "autoSizeBoundary", 2);
  __decorateClass([n$2({
    attribute: "auto-size-padding",
    type: Number
  })], SlPopup.prototype, "autoSizePadding", 2);
  __decorateClass([n$2({
    attribute: "hover-bridge",
    type: Boolean
  })], SlPopup.prototype, "hoverBridge", 2);
  var defaultAnimationRegistry = new Map();
  var customAnimationRegistry = new WeakMap();
  function ensureAnimation(animation) {
    return animation != null ? animation : {
      keyframes: [],
      options: {
        duration: 0
      }
    };
  }
  function getLogicalAnimation(animation, dir) {
    if (dir.toLowerCase() === "rtl") {
      return {
        keyframes: animation.rtlKeyframes || animation.keyframes,
        options: animation.options
      };
    }
    return animation;
  }
  function setDefaultAnimation(animationName, animation) {
    defaultAnimationRegistry.set(animationName, ensureAnimation(animation));
  }
  function getAnimation(el, animationName, options) {
    var customAnimation = customAnimationRegistry.get(el);
    if (customAnimation == null ? void 0 : customAnimation[animationName]) {
      return getLogicalAnimation(customAnimation[animationName], options.dir);
    }
    var defaultAnimation = defaultAnimationRegistry.get(animationName);
    if (defaultAnimation) {
      return getLogicalAnimation(defaultAnimation, options.dir);
    }
    return {
      keyframes: [],
      options: {
        duration: 0
      }
    };
  }
  function waitForEvent(el, eventName) {
    return new Promise(function (resolve) {
      function done(event) {
        if (event.target === el) {
          el.removeEventListener(eventName, done);
          resolve();
        }
      }
      el.addEventListener(eventName, done);
    });
  }
  function animateTo(el, keyframes, options) {
    return new Promise(function (resolve) {
      if ((options == null ? void 0 : options.duration) === Infinity) {
        throw new Error("Promise-based animations must be finite.");
      }
      var animation = el.animate(keyframes, __spreadProps(__spreadValues({}, options), {
        duration: prefersReducedMotion() ? 0 : options.duration
      }));
      animation.addEventListener("cancel", resolve, {
        once: true
      });
      animation.addEventListener("finish", resolve, {
        once: true
      });
    });
  }
  function prefersReducedMotion() {
    var query = window.matchMedia("(prefers-reduced-motion: reduce)");
    return query.matches;
  }
  function stopAnimations(el) {
    return Promise.all(el.getAnimations().map(function (animation) {
      return new Promise(function (resolve) {
        animation.cancel();
        requestAnimationFrame(resolve);
      });
    }));
  }
  var SlDropdown = function (_ShoelaceElement5) {
    function SlDropdown() {
      var _this24;
      _classCallCheck(this, SlDropdown);
      _this24 = _callSuper(this, SlDropdown, arguments);
      _this24.localize = new LocalizeController(_this24);
      _this24.open = false;
      _this24.placement = "bottom-start";
      _this24.disabled = false;
      _this24.stayOpenOnSelect = false;
      _this24.distance = 0;
      _this24.skidding = 0;
      _this24.hoist = false;
      _this24.handleKeyDown = function (event) {
        if (_this24.open && event.key === "Escape") {
          event.stopPropagation();
          _this24.hide();
          _this24.focusOnTrigger();
        }
      };
      _this24.handleDocumentKeyDown = function (event) {
        var _a;
        if (event.key === "Escape" && _this24.open && !_this24.closeWatcher) {
          event.stopPropagation();
          _this24.focusOnTrigger();
          _this24.hide();
          return;
        }
        if (event.key === "Tab") {
          if (_this24.open && ((_a = document.activeElement) == null ? void 0 : _a.tagName.toLowerCase()) === "sl-menu-item") {
            event.preventDefault();
            _this24.hide();
            _this24.focusOnTrigger();
            return;
          }
          setTimeout(function () {
            var _a2, _b, _c;
            var activeElement = ((_a2 = _this24.containingElement) == null ? void 0 : _a2.getRootNode()) instanceof ShadowRoot ? (_c = (_b = document.activeElement) == null ? void 0 : _b.shadowRoot) == null ? void 0 : _c.activeElement : document.activeElement;
            if (!_this24.containingElement || (activeElement == null ? void 0 : activeElement.closest(_this24.containingElement.tagName.toLowerCase())) !== _this24.containingElement) {
              _this24.hide();
            }
          });
        }
      };
      _this24.handleDocumentMouseDown = function (event) {
        var path = event.composedPath();
        if (_this24.containingElement && !path.includes(_this24.containingElement)) {
          _this24.hide();
        }
      };
      _this24.handlePanelSelect = function (event) {
        var target = event.target;
        if (!_this24.stayOpenOnSelect && target.tagName.toLowerCase() === "sl-menu") {
          _this24.hide();
          _this24.focusOnTrigger();
        }
      };
      return _this24;
    }
    _inherits(SlDropdown, _ShoelaceElement5);
    return _createClass(SlDropdown, [{
      key: "connectedCallback",
      value: function connectedCallback() {
        _get(_getPrototypeOf(SlDropdown.prototype), "connectedCallback", this).call(this);
        if (!this.containingElement) {
          this.containingElement = this;
        }
      }
    }, {
      key: "firstUpdated",
      value: function firstUpdated() {
        this.panel.hidden = !this.open;
        if (this.open) {
          this.addOpenListeners();
          this.popup.active = true;
        }
      }
    }, {
      key: "disconnectedCallback",
      value: function disconnectedCallback() {
        _get(_getPrototypeOf(SlDropdown.prototype), "disconnectedCallback", this).call(this);
        this.removeOpenListeners();
        this.hide();
      }
    }, {
      key: "focusOnTrigger",
      value: function focusOnTrigger() {
        var trigger = this.trigger.assignedElements({
          flatten: true
        })[0];
        if (typeof (trigger == null ? void 0 : trigger.focus) === "function") {
          trigger.focus();
        }
      }
    }, {
      key: "getMenu",
      value: function getMenu() {
        return this.panel.assignedElements({
          flatten: true
        }).find(function (el) {
          return el.tagName.toLowerCase() === "sl-menu";
        });
      }
    }, {
      key: "handleTriggerClick",
      value: function handleTriggerClick() {
        if (this.open) {
          this.hide();
        } else {
          this.show();
          this.focusOnTrigger();
        }
      }
    }, {
      key: "handleTriggerKeyDown",
      value: function () {
        var _handleTriggerKeyDown = _asyncToGenerator(_regeneratorRuntime().mark(function _callee16(event) {
          var menu, menuItems, firstMenuItem, lastMenuItem;
          return _regeneratorRuntime().wrap(function _callee16$(_context16) {
            while (1) switch (_context16.prev = _context16.next) {
              case 0:
                if (![" ", "Enter"].includes(event.key)) {
                  _context16.next = 4;
                  break;
                }
                event.preventDefault();
                this.handleTriggerClick();
                return _context16.abrupt("return");
              case 4:
                menu = this.getMenu();
                if (!menu) {
                  _context16.next = 16;
                  break;
                }
                menuItems = menu.getAllItems();
                firstMenuItem = menuItems[0];
                lastMenuItem = menuItems[menuItems.length - 1];
                if (!["ArrowDown", "ArrowUp", "Home", "End"].includes(event.key)) {
                  _context16.next = 16;
                  break;
                }
                event.preventDefault();
                if (this.open) {
                  _context16.next = 15;
                  break;
                }
                this.show();
                _context16.next = 15;
                return this.updateComplete;
              case 15:
                if (menuItems.length > 0) {
                  this.updateComplete.then(function () {
                    if (event.key === "ArrowDown" || event.key === "Home") {
                      menu.setCurrentItem(firstMenuItem);
                      firstMenuItem.focus();
                    }
                    if (event.key === "ArrowUp" || event.key === "End") {
                      menu.setCurrentItem(lastMenuItem);
                      lastMenuItem.focus();
                    }
                  });
                }
              case 16:
              case "end":
                return _context16.stop();
            }
          }, _callee16, this);
        }));
        function handleTriggerKeyDown(_x13) {
          return _handleTriggerKeyDown.apply(this, arguments);
        }
        return handleTriggerKeyDown;
      }()
    }, {
      key: "handleTriggerKeyUp",
      value: function handleTriggerKeyUp(event) {
        if (event.key === " ") {
          event.preventDefault();
        }
      }
    }, {
      key: "handleTriggerSlotChange",
      value: function handleTriggerSlotChange() {
        this.updateAccessibleTrigger();
      }
    }, {
      key: "updateAccessibleTrigger",
      value: function updateAccessibleTrigger() {
        var assignedElements = this.trigger.assignedElements({
          flatten: true
        });
        var accessibleTrigger = assignedElements.find(function (el) {
          return getTabbableBoundary(el).start;
        });
        var target;
        if (accessibleTrigger) {
          switch (accessibleTrigger.tagName.toLowerCase()) {
            case "sl-button":
            case "sl-icon-button":
              target = accessibleTrigger.button;
              break;
            default:
              target = accessibleTrigger;
          }
          target.setAttribute("aria-haspopup", "true");
          target.setAttribute("aria-expanded", this.open ? "true" : "false");
        }
      }
    }, {
      key: "show",
      value: (function () {
        var _show = _asyncToGenerator(_regeneratorRuntime().mark(function _callee17() {
          return _regeneratorRuntime().wrap(function _callee17$(_context17) {
            while (1) switch (_context17.prev = _context17.next) {
              case 0:
                if (!this.open) {
                  _context17.next = 2;
                  break;
                }
                return _context17.abrupt("return", void 0);
              case 2:
                this.open = true;
                return _context17.abrupt("return", waitForEvent(this, "sl-after-show"));
              case 4:
              case "end":
                return _context17.stop();
            }
          }, _callee17, this);
        }));
        function show() {
          return _show.apply(this, arguments);
        }
        return show;
      }())
    }, {
      key: "hide",
      value: (function () {
        var _hide = _asyncToGenerator(_regeneratorRuntime().mark(function _callee18() {
          return _regeneratorRuntime().wrap(function _callee18$(_context18) {
            while (1) switch (_context18.prev = _context18.next) {
              case 0:
                if (this.open) {
                  _context18.next = 2;
                  break;
                }
                return _context18.abrupt("return", void 0);
              case 2:
                this.open = false;
                return _context18.abrupt("return", waitForEvent(this, "sl-after-hide"));
              case 4:
              case "end":
                return _context18.stop();
            }
          }, _callee18, this);
        }));
        function hide() {
          return _hide.apply(this, arguments);
        }
        return hide;
      }())
    }, {
      key: "reposition",
      value: function reposition() {
        this.popup.reposition();
      }
    }, {
      key: "addOpenListeners",
      value: function addOpenListeners() {
        var _this25 = this;
        var _a;
        this.panel.addEventListener("sl-select", this.handlePanelSelect);
        if ("CloseWatcher" in window) {
          (_a = this.closeWatcher) == null ? void 0 : _a.destroy();
          this.closeWatcher = new CloseWatcher();
          this.closeWatcher.onclose = function () {
            _this25.hide();
            _this25.focusOnTrigger();
          };
        } else {
          this.panel.addEventListener("keydown", this.handleKeyDown);
        }
        document.addEventListener("keydown", this.handleDocumentKeyDown);
        document.addEventListener("mousedown", this.handleDocumentMouseDown);
      }
    }, {
      key: "removeOpenListeners",
      value: function removeOpenListeners() {
        var _a;
        if (this.panel) {
          this.panel.removeEventListener("sl-select", this.handlePanelSelect);
          this.panel.removeEventListener("keydown", this.handleKeyDown);
        }
        document.removeEventListener("keydown", this.handleDocumentKeyDown);
        document.removeEventListener("mousedown", this.handleDocumentMouseDown);
        (_a = this.closeWatcher) == null ? void 0 : _a.destroy();
      }
    }, {
      key: "handleOpenChange",
      value: function () {
        var _handleOpenChange = _asyncToGenerator(_regeneratorRuntime().mark(function _callee19() {
          var _getAnimation, keyframes, options, _getAnimation2, _keyframes, _options2;
          return _regeneratorRuntime().wrap(function _callee19$(_context19) {
            while (1) switch (_context19.prev = _context19.next) {
              case 0:
                if (!this.disabled) {
                  _context19.next = 3;
                  break;
                }
                this.open = false;
                return _context19.abrupt("return");
              case 3:
                this.updateAccessibleTrigger();
                if (!this.open) {
                  _context19.next = 17;
                  break;
                }
                this.emit("sl-show");
                this.addOpenListeners();
                _context19.next = 9;
                return stopAnimations(this);
              case 9:
                this.panel.hidden = false;
                this.popup.active = true;
                _getAnimation = getAnimation(this, "dropdown.show", {
                  dir: this.localize.dir()
                }), keyframes = _getAnimation.keyframes, options = _getAnimation.options;
                _context19.next = 14;
                return animateTo(this.popup.popup, keyframes, options);
              case 14:
                this.emit("sl-after-show");
                _context19.next = 27;
                break;
              case 17:
                this.emit("sl-hide");
                this.removeOpenListeners();
                _context19.next = 21;
                return stopAnimations(this);
              case 21:
                _getAnimation2 = getAnimation(this, "dropdown.hide", {
                  dir: this.localize.dir()
                }), _keyframes = _getAnimation2.keyframes, _options2 = _getAnimation2.options;
                _context19.next = 24;
                return animateTo(this.popup.popup, _keyframes, _options2);
              case 24:
                this.panel.hidden = true;
                this.popup.active = false;
                this.emit("sl-after-hide");
              case 27:
              case "end":
                return _context19.stop();
            }
          }, _callee19, this);
        }));
        function handleOpenChange() {
          return _handleOpenChange.apply(this, arguments);
        }
        return handleOpenChange;
      }()
    }, {
      key: "render",
      value: function render() {
        return x(_templateObject17 || (_templateObject17 = _taggedTemplateLiteral(["\n      <sl-popup\n        part=\"base\"\n        id=\"dropdown\"\n        placement=", "\n        distance=", "\n        skidding=", "\n        strategy=", "\n        flip\n        shift\n        auto-size=\"vertical\"\n        auto-size-padding=\"10\"\n        class=", "\n      >\n        <slot\n          name=\"trigger\"\n          slot=\"anchor\"\n          part=\"trigger\"\n          class=\"dropdown__trigger\"\n          @click=", "\n          @keydown=", "\n          @keyup=", "\n          @slotchange=", "\n        ></slot>\n\n        <div aria-hidden=", " aria-labelledby=\"dropdown\">\n          <slot part=\"panel\" class=\"dropdown__panel\"></slot>\n        </div>\n      </sl-popup>\n    "])), this.placement, this.distance, this.skidding, this.hoist ? "fixed" : "absolute", e$1({
          dropdown: true,
          "dropdown--open": this.open
        }), this.handleTriggerClick, this.handleTriggerKeyDown, this.handleTriggerKeyUp, this.handleTriggerSlotChange, this.open ? "false" : "true");
      }
    }]);
  }(ShoelaceElement);
  SlDropdown.styles = [component_styles_default, dropdown_styles_default];
  SlDropdown.dependencies = {
    "sl-popup": SlPopup
  };
  __decorateClass([e$4(".dropdown")], SlDropdown.prototype, "popup", 2);
  __decorateClass([e$4(".dropdown__trigger")], SlDropdown.prototype, "trigger", 2);
  __decorateClass([e$4(".dropdown__panel")], SlDropdown.prototype, "panel", 2);
  __decorateClass([n$2({
    type: Boolean,
    reflect: true
  })], SlDropdown.prototype, "open", 2);
  __decorateClass([n$2({
    reflect: true
  })], SlDropdown.prototype, "placement", 2);
  __decorateClass([n$2({
    type: Boolean,
    reflect: true
  })], SlDropdown.prototype, "disabled", 2);
  __decorateClass([n$2({
    attribute: "stay-open-on-select",
    type: Boolean,
    reflect: true
  })], SlDropdown.prototype, "stayOpenOnSelect", 2);
  __decorateClass([n$2({
    attribute: false
  })], SlDropdown.prototype, "containingElement", 2);
  __decorateClass([n$2({
    type: Number
  })], SlDropdown.prototype, "distance", 2);
  __decorateClass([n$2({
    type: Number
  })], SlDropdown.prototype, "skidding", 2);
  __decorateClass([n$2({
    type: Boolean
  })], SlDropdown.prototype, "hoist", 2);
  __decorateClass([watch("open", {
    waitUntilFirstUpdate: true
  })], SlDropdown.prototype, "handleOpenChange", 1);
  setDefaultAnimation("dropdown.show", {
    keyframes: [{
      opacity: 0,
      scale: 0.9
    }, {
      opacity: 1,
      scale: 1
    }],
    options: {
      duration: 100,
      easing: "ease"
    }
  });
  setDefaultAnimation("dropdown.hide", {
    keyframes: [{
      opacity: 1,
      scale: 1
    }, {
      opacity: 0,
      scale: 0.9
    }],
    options: {
      duration: 100,
      easing: "ease"
    }
  });
  var color_picker_styles_default = i$4(_templateObject18 || (_templateObject18 = _taggedTemplateLiteral(["\n  :host {\n    --grid-width: 280px;\n    --grid-height: 200px;\n    --grid-handle-size: 16px;\n    --slider-height: 15px;\n    --slider-handle-size: 17px;\n    --swatch-size: 25px;\n\n    display: inline-block;\n  }\n\n  .color-picker {\n    width: var(--grid-width);\n    font-family: var(--sl-font-sans);\n    font-size: var(--sl-font-size-medium);\n    font-weight: var(--sl-font-weight-normal);\n    color: var(--color);\n    background-color: var(--sl-panel-background-color);\n    border-radius: var(--sl-border-radius-medium);\n    user-select: none;\n    -webkit-user-select: none;\n  }\n\n  .color-picker--inline {\n    border: solid var(--sl-panel-border-width) var(--sl-panel-border-color);\n  }\n\n  .color-picker--inline:focus-visible {\n    outline: var(--sl-focus-ring);\n    outline-offset: var(--sl-focus-ring-offset);\n  }\n\n  .color-picker__grid {\n    position: relative;\n    height: var(--grid-height);\n    background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 1) 100%),\n      linear-gradient(to right, #fff 0%, rgba(255, 255, 255, 0) 100%);\n    border-top-left-radius: var(--sl-border-radius-medium);\n    border-top-right-radius: var(--sl-border-radius-medium);\n    cursor: crosshair;\n    forced-color-adjust: none;\n  }\n\n  .color-picker__grid-handle {\n    position: absolute;\n    width: var(--grid-handle-size);\n    height: var(--grid-handle-size);\n    border-radius: 50%;\n    box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.25);\n    border: solid 2px white;\n    margin-top: calc(var(--grid-handle-size) / -2);\n    margin-left: calc(var(--grid-handle-size) / -2);\n    transition: var(--sl-transition-fast) scale;\n  }\n\n  .color-picker__grid-handle--dragging {\n    cursor: none;\n    scale: 1.5;\n  }\n\n  .color-picker__grid-handle:focus-visible {\n    outline: var(--sl-focus-ring);\n  }\n\n  .color-picker__controls {\n    padding: var(--sl-spacing-small);\n    display: flex;\n    align-items: center;\n  }\n\n  .color-picker__sliders {\n    flex: 1 1 auto;\n  }\n\n  .color-picker__slider {\n    position: relative;\n    height: var(--slider-height);\n    border-radius: var(--sl-border-radius-pill);\n    box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.2);\n    forced-color-adjust: none;\n  }\n\n  .color-picker__slider:not(:last-of-type) {\n    margin-bottom: var(--sl-spacing-small);\n  }\n\n  .color-picker__slider-handle {\n    position: absolute;\n    top: calc(50% - var(--slider-handle-size) / 2);\n    width: var(--slider-handle-size);\n    height: var(--slider-handle-size);\n    background-color: white;\n    border-radius: 50%;\n    box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.25);\n    margin-left: calc(var(--slider-handle-size) / -2);\n  }\n\n  .color-picker__slider-handle:focus-visible {\n    outline: var(--sl-focus-ring);\n  }\n\n  .color-picker__hue {\n    background-image: linear-gradient(\n      to right,\n      rgb(255, 0, 0) 0%,\n      rgb(255, 255, 0) 17%,\n      rgb(0, 255, 0) 33%,\n      rgb(0, 255, 255) 50%,\n      rgb(0, 0, 255) 67%,\n      rgb(255, 0, 255) 83%,\n      rgb(255, 0, 0) 100%\n    );\n  }\n\n  .color-picker__alpha .color-picker__alpha-gradient {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    border-radius: inherit;\n  }\n\n  .color-picker__preview {\n    flex: 0 0 auto;\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n    width: 2.25rem;\n    height: 2.25rem;\n    border: none;\n    border-radius: var(--sl-border-radius-circle);\n    background: none;\n    margin-left: var(--sl-spacing-small);\n    cursor: copy;\n    forced-color-adjust: none;\n  }\n\n  .color-picker__preview:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    border-radius: inherit;\n    box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.2);\n\n    /* We use a custom property in lieu of currentColor because of https://bugs.webkit.org/show_bug.cgi?id=216780 */\n    background-color: var(--preview-color);\n  }\n\n  .color-picker__preview:focus-visible {\n    outline: var(--sl-focus-ring);\n    outline-offset: var(--sl-focus-ring-offset);\n  }\n\n  .color-picker__preview-color {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    border: solid 1px rgba(0, 0, 0, 0.125);\n  }\n\n  .color-picker__preview-color--copied {\n    animation: pulse 0.75s;\n  }\n\n  @keyframes pulse {\n    0% {\n      box-shadow: 0 0 0 0 var(--sl-color-primary-500);\n    }\n    70% {\n      box-shadow: 0 0 0 0.5rem transparent;\n    }\n    100% {\n      box-shadow: 0 0 0 0 transparent;\n    }\n  }\n\n  .color-picker__user-input {\n    display: flex;\n    padding: 0 var(--sl-spacing-small) var(--sl-spacing-small) var(--sl-spacing-small);\n  }\n\n  .color-picker__user-input sl-input {\n    min-width: 0; /* fix input width in Safari */\n    flex: 1 1 auto;\n  }\n\n  .color-picker__user-input sl-button-group {\n    margin-left: var(--sl-spacing-small);\n  }\n\n  .color-picker__user-input sl-button {\n    min-width: 3.25rem;\n    max-width: 3.25rem;\n    font-size: 1rem;\n  }\n\n  .color-picker__swatches {\n    display: grid;\n    grid-template-columns: repeat(8, 1fr);\n    grid-gap: 0.5rem;\n    justify-items: center;\n    border-top: solid 1px var(--sl-color-neutral-200);\n    padding: var(--sl-spacing-small);\n    forced-color-adjust: none;\n  }\n\n  .color-picker__swatch {\n    position: relative;\n    width: var(--swatch-size);\n    height: var(--swatch-size);\n    border-radius: var(--sl-border-radius-small);\n  }\n\n  .color-picker__swatch .color-picker__swatch-color {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    border: solid 1px rgba(0, 0, 0, 0.125);\n    border-radius: inherit;\n    cursor: pointer;\n  }\n\n  .color-picker__swatch:focus-visible {\n    outline: var(--sl-focus-ring);\n    outline-offset: var(--sl-focus-ring-offset);\n  }\n\n  .color-picker__transparent-bg {\n    background-image: linear-gradient(45deg, var(--sl-color-neutral-300) 25%, transparent 25%),\n      linear-gradient(45deg, transparent 75%, var(--sl-color-neutral-300) 75%),\n      linear-gradient(45deg, transparent 75%, var(--sl-color-neutral-300) 75%),\n      linear-gradient(45deg, var(--sl-color-neutral-300) 25%, transparent 25%);\n    background-size: 10px 10px;\n    background-position:\n      0 0,\n      0 0,\n      -5px -5px,\n      5px 5px;\n  }\n\n  .color-picker--disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n\n  .color-picker--disabled .color-picker__grid,\n  .color-picker--disabled .color-picker__grid-handle,\n  .color-picker--disabled .color-picker__slider,\n  .color-picker--disabled .color-picker__slider-handle,\n  .color-picker--disabled .color-picker__preview,\n  .color-picker--disabled .color-picker__swatch,\n  .color-picker--disabled .color-picker__swatch-color {\n    pointer-events: none;\n  }\n\n  /*\n   * Color dropdown\n   */\n\n  .color-dropdown::part(panel) {\n    max-height: none;\n    background-color: var(--sl-panel-background-color);\n    border: solid var(--sl-panel-border-width) var(--sl-panel-border-color);\n    border-radius: var(--sl-border-radius-medium);\n    overflow: visible;\n  }\n\n  .color-dropdown__trigger {\n    display: inline-block;\n    position: relative;\n    background-color: transparent;\n    border: none;\n    cursor: pointer;\n    forced-color-adjust: none;\n  }\n\n  .color-dropdown__trigger.color-dropdown__trigger--small {\n    width: var(--sl-input-height-small);\n    height: var(--sl-input-height-small);\n    border-radius: var(--sl-border-radius-circle);\n  }\n\n  .color-dropdown__trigger.color-dropdown__trigger--medium {\n    width: var(--sl-input-height-medium);\n    height: var(--sl-input-height-medium);\n    border-radius: var(--sl-border-radius-circle);\n  }\n\n  .color-dropdown__trigger.color-dropdown__trigger--large {\n    width: var(--sl-input-height-large);\n    height: var(--sl-input-height-large);\n    border-radius: var(--sl-border-radius-circle);\n  }\n\n  .color-dropdown__trigger:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    border-radius: inherit;\n    background-color: currentColor;\n    box-shadow:\n      inset 0 0 0 2px var(--sl-input-border-color),\n      inset 0 0 0 4px var(--sl-color-neutral-0);\n  }\n\n  .color-dropdown__trigger--empty:before {\n    background-color: transparent;\n  }\n\n  .color-dropdown__trigger:focus-visible {\n    outline: none;\n  }\n\n  .color-dropdown__trigger:focus-visible:not(.color-dropdown__trigger--disabled) {\n    outline: var(--sl-focus-ring);\n    outline-offset: var(--sl-focus-ring-offset);\n  }\n\n  .color-dropdown__trigger.color-dropdown__trigger--disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n"])));
  function clamp(value, min, max) {
    var noNegativeZero = function noNegativeZero(n) {
      return Object.is(n, -0) ? 0 : n;
    };
    if (value < min) {
      return noNegativeZero(min);
    }
    if (value > max) {
      return noNegativeZero(max);
    }
    return noNegativeZero(value);
  }
  var spinner_styles_default = i$4(_templateObject19 || (_templateObject19 = _taggedTemplateLiteral(["\n  :host {\n    --track-width: 2px;\n    --track-color: rgb(128 128 128 / 25%);\n    --indicator-color: var(--sl-color-primary-600);\n    --speed: 2s;\n\n    display: inline-flex;\n    width: 1em;\n    height: 1em;\n    flex: none;\n  }\n\n  .spinner {\n    flex: 1 1 auto;\n    height: 100%;\n    width: 100%;\n  }\n\n  .spinner__track,\n  .spinner__indicator {\n    fill: none;\n    stroke-width: var(--track-width);\n    r: calc(0.5em - var(--track-width) / 2);\n    cx: 0.5em;\n    cy: 0.5em;\n    transform-origin: 50% 50%;\n  }\n\n  .spinner__track {\n    stroke: var(--track-color);\n    transform-origin: 0% 0%;\n  }\n\n  .spinner__indicator {\n    stroke: var(--indicator-color);\n    stroke-linecap: round;\n    stroke-dasharray: 150% 75%;\n    animation: spin var(--speed) linear infinite;\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n      stroke-dasharray: 0.05em, 3em;\n    }\n\n    50% {\n      transform: rotate(450deg);\n      stroke-dasharray: 1.375em, 1.375em;\n    }\n\n    100% {\n      transform: rotate(1080deg);\n      stroke-dasharray: 0.05em, 3em;\n    }\n  }\n"])));
  var SlSpinner = function (_ShoelaceElement6) {
    function SlSpinner() {
      var _this26;
      _classCallCheck(this, SlSpinner);
      _this26 = _callSuper(this, SlSpinner, arguments);
      _this26.localize = new LocalizeController(_this26);
      return _this26;
    }
    _inherits(SlSpinner, _ShoelaceElement6);
    return _createClass(SlSpinner, [{
      key: "render",
      value: function render() {
        return x(_templateObject20 || (_templateObject20 = _taggedTemplateLiteral(["\n      <svg part=\"base\" class=\"spinner\" role=\"progressbar\" aria-label=", ">\n        <circle class=\"spinner__track\"></circle>\n        <circle class=\"spinner__indicator\"></circle>\n      </svg>\n    "])), this.localize.term("loading"));
      }
    }]);
  }(ShoelaceElement);
  SlSpinner.styles = [component_styles_default, spinner_styles_default];
  var button_styles_default = i$4(_templateObject21 || (_templateObject21 = _taggedTemplateLiteral(["\n  :host {\n    display: inline-block;\n    position: relative;\n    width: auto;\n    cursor: pointer;\n  }\n\n  .button {\n    display: inline-flex;\n    align-items: stretch;\n    justify-content: center;\n    width: 100%;\n    border-style: solid;\n    border-width: var(--sl-input-border-width);\n    font-family: var(--sl-input-font-family);\n    font-weight: var(--sl-font-weight-semibold);\n    text-decoration: none;\n    user-select: none;\n    -webkit-user-select: none;\n    white-space: nowrap;\n    vertical-align: middle;\n    padding: 0;\n    transition:\n      var(--sl-transition-x-fast) background-color,\n      var(--sl-transition-x-fast) color,\n      var(--sl-transition-x-fast) border,\n      var(--sl-transition-x-fast) box-shadow;\n    cursor: inherit;\n  }\n\n  .button::-moz-focus-inner {\n    border: 0;\n  }\n\n  .button:focus {\n    outline: none;\n  }\n\n  .button:focus-visible {\n    outline: var(--sl-focus-ring);\n    outline-offset: var(--sl-focus-ring-offset);\n  }\n\n  .button--disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n\n  /* When disabled, prevent mouse events from bubbling up from children */\n  .button--disabled * {\n    pointer-events: none;\n  }\n\n  .button__prefix,\n  .button__suffix {\n    flex: 0 0 auto;\n    display: flex;\n    align-items: center;\n    pointer-events: none;\n  }\n\n  .button__label {\n    display: inline-block;\n  }\n\n  .button__label::slotted(sl-icon) {\n    vertical-align: -2px;\n  }\n\n  /*\n   * Standard buttons\n   */\n\n  /* Default */\n  .button--standard.button--default {\n    background-color: var(--sl-color-neutral-0);\n    border-color: var(--sl-color-neutral-300);\n    color: var(--sl-color-neutral-700);\n  }\n\n  .button--standard.button--default:hover:not(.button--disabled) {\n    background-color: var(--sl-color-primary-50);\n    border-color: var(--sl-color-primary-300);\n    color: var(--sl-color-primary-700);\n  }\n\n  .button--standard.button--default:active:not(.button--disabled) {\n    background-color: var(--sl-color-primary-100);\n    border-color: var(--sl-color-primary-400);\n    color: var(--sl-color-primary-700);\n  }\n\n  /* Primary */\n  .button--standard.button--primary {\n    background-color: var(--sl-color-primary-600);\n    border-color: var(--sl-color-primary-600);\n    color: var(--sl-color-neutral-0);\n  }\n\n  .button--standard.button--primary:hover:not(.button--disabled) {\n    background-color: var(--sl-color-primary-500);\n    border-color: var(--sl-color-primary-500);\n    color: var(--sl-color-neutral-0);\n  }\n\n  .button--standard.button--primary:active:not(.button--disabled) {\n    background-color: var(--sl-color-primary-600);\n    border-color: var(--sl-color-primary-600);\n    color: var(--sl-color-neutral-0);\n  }\n\n  /* Success */\n  .button--standard.button--success {\n    background-color: var(--sl-color-success-600);\n    border-color: var(--sl-color-success-600);\n    color: var(--sl-color-neutral-0);\n  }\n\n  .button--standard.button--success:hover:not(.button--disabled) {\n    background-color: var(--sl-color-success-500);\n    border-color: var(--sl-color-success-500);\n    color: var(--sl-color-neutral-0);\n  }\n\n  .button--standard.button--success:active:not(.button--disabled) {\n    background-color: var(--sl-color-success-600);\n    border-color: var(--sl-color-success-600);\n    color: var(--sl-color-neutral-0);\n  }\n\n  /* Neutral */\n  .button--standard.button--neutral {\n    background-color: var(--sl-color-neutral-600);\n    border-color: var(--sl-color-neutral-600);\n    color: var(--sl-color-neutral-0);\n  }\n\n  .button--standard.button--neutral:hover:not(.button--disabled) {\n    background-color: var(--sl-color-neutral-500);\n    border-color: var(--sl-color-neutral-500);\n    color: var(--sl-color-neutral-0);\n  }\n\n  .button--standard.button--neutral:active:not(.button--disabled) {\n    background-color: var(--sl-color-neutral-600);\n    border-color: var(--sl-color-neutral-600);\n    color: var(--sl-color-neutral-0);\n  }\n\n  /* Warning */\n  .button--standard.button--warning {\n    background-color: var(--sl-color-warning-600);\n    border-color: var(--sl-color-warning-600);\n    color: var(--sl-color-neutral-0);\n  }\n  .button--standard.button--warning:hover:not(.button--disabled) {\n    background-color: var(--sl-color-warning-500);\n    border-color: var(--sl-color-warning-500);\n    color: var(--sl-color-neutral-0);\n  }\n\n  .button--standard.button--warning:active:not(.button--disabled) {\n    background-color: var(--sl-color-warning-600);\n    border-color: var(--sl-color-warning-600);\n    color: var(--sl-color-neutral-0);\n  }\n\n  /* Danger */\n  .button--standard.button--danger {\n    background-color: var(--sl-color-danger-600);\n    border-color: var(--sl-color-danger-600);\n    color: var(--sl-color-neutral-0);\n  }\n\n  .button--standard.button--danger:hover:not(.button--disabled) {\n    background-color: var(--sl-color-danger-500);\n    border-color: var(--sl-color-danger-500);\n    color: var(--sl-color-neutral-0);\n  }\n\n  .button--standard.button--danger:active:not(.button--disabled) {\n    background-color: var(--sl-color-danger-600);\n    border-color: var(--sl-color-danger-600);\n    color: var(--sl-color-neutral-0);\n  }\n\n  /*\n   * Outline buttons\n   */\n\n  .button--outline {\n    background: none;\n    border: solid 1px;\n  }\n\n  /* Default */\n  .button--outline.button--default {\n    border-color: var(--sl-color-neutral-300);\n    color: var(--sl-color-neutral-700);\n  }\n\n  .button--outline.button--default:hover:not(.button--disabled),\n  .button--outline.button--default.button--checked:not(.button--disabled) {\n    border-color: var(--sl-color-primary-600);\n    background-color: var(--sl-color-primary-600);\n    color: var(--sl-color-neutral-0);\n  }\n\n  .button--outline.button--default:active:not(.button--disabled) {\n    border-color: var(--sl-color-primary-700);\n    background-color: var(--sl-color-primary-700);\n    color: var(--sl-color-neutral-0);\n  }\n\n  /* Primary */\n  .button--outline.button--primary {\n    border-color: var(--sl-color-primary-600);\n    color: var(--sl-color-primary-600);\n  }\n\n  .button--outline.button--primary:hover:not(.button--disabled),\n  .button--outline.button--primary.button--checked:not(.button--disabled) {\n    background-color: var(--sl-color-primary-600);\n    color: var(--sl-color-neutral-0);\n  }\n\n  .button--outline.button--primary:active:not(.button--disabled) {\n    border-color: var(--sl-color-primary-700);\n    background-color: var(--sl-color-primary-700);\n    color: var(--sl-color-neutral-0);\n  }\n\n  /* Success */\n  .button--outline.button--success {\n    border-color: var(--sl-color-success-600);\n    color: var(--sl-color-success-600);\n  }\n\n  .button--outline.button--success:hover:not(.button--disabled),\n  .button--outline.button--success.button--checked:not(.button--disabled) {\n    background-color: var(--sl-color-success-600);\n    color: var(--sl-color-neutral-0);\n  }\n\n  .button--outline.button--success:active:not(.button--disabled) {\n    border-color: var(--sl-color-success-700);\n    background-color: var(--sl-color-success-700);\n    color: var(--sl-color-neutral-0);\n  }\n\n  /* Neutral */\n  .button--outline.button--neutral {\n    border-color: var(--sl-color-neutral-600);\n    color: var(--sl-color-neutral-600);\n  }\n\n  .button--outline.button--neutral:hover:not(.button--disabled),\n  .button--outline.button--neutral.button--checked:not(.button--disabled) {\n    background-color: var(--sl-color-neutral-600);\n    color: var(--sl-color-neutral-0);\n  }\n\n  .button--outline.button--neutral:active:not(.button--disabled) {\n    border-color: var(--sl-color-neutral-700);\n    background-color: var(--sl-color-neutral-700);\n    color: var(--sl-color-neutral-0);\n  }\n\n  /* Warning */\n  .button--outline.button--warning {\n    border-color: var(--sl-color-warning-600);\n    color: var(--sl-color-warning-600);\n  }\n\n  .button--outline.button--warning:hover:not(.button--disabled),\n  .button--outline.button--warning.button--checked:not(.button--disabled) {\n    background-color: var(--sl-color-warning-600);\n    color: var(--sl-color-neutral-0);\n  }\n\n  .button--outline.button--warning:active:not(.button--disabled) {\n    border-color: var(--sl-color-warning-700);\n    background-color: var(--sl-color-warning-700);\n    color: var(--sl-color-neutral-0);\n  }\n\n  /* Danger */\n  .button--outline.button--danger {\n    border-color: var(--sl-color-danger-600);\n    color: var(--sl-color-danger-600);\n  }\n\n  .button--outline.button--danger:hover:not(.button--disabled),\n  .button--outline.button--danger.button--checked:not(.button--disabled) {\n    background-color: var(--sl-color-danger-600);\n    color: var(--sl-color-neutral-0);\n  }\n\n  .button--outline.button--danger:active:not(.button--disabled) {\n    border-color: var(--sl-color-danger-700);\n    background-color: var(--sl-color-danger-700);\n    color: var(--sl-color-neutral-0);\n  }\n\n  @media (forced-colors: active) {\n    .button.button--outline.button--checked:not(.button--disabled) {\n      outline: solid 2px transparent;\n    }\n  }\n\n  /*\n   * Text buttons\n   */\n\n  .button--text {\n    background-color: transparent;\n    border-color: transparent;\n    color: var(--sl-color-primary-600);\n  }\n\n  .button--text:hover:not(.button--disabled) {\n    background-color: transparent;\n    border-color: transparent;\n    color: var(--sl-color-primary-500);\n  }\n\n  .button--text:focus-visible:not(.button--disabled) {\n    background-color: transparent;\n    border-color: transparent;\n    color: var(--sl-color-primary-500);\n  }\n\n  .button--text:active:not(.button--disabled) {\n    background-color: transparent;\n    border-color: transparent;\n    color: var(--sl-color-primary-700);\n  }\n\n  /*\n   * Size modifiers\n   */\n\n  .button--small {\n    height: auto;\n    min-height: var(--sl-input-height-small);\n    font-size: var(--sl-button-font-size-small);\n    line-height: calc(var(--sl-input-height-small) - var(--sl-input-border-width) * 2);\n    border-radius: var(--sl-input-border-radius-small);\n  }\n\n  .button--medium {\n    height: auto;\n    min-height: var(--sl-input-height-medium);\n    font-size: var(--sl-button-font-size-medium);\n    line-height: calc(var(--sl-input-height-medium) - var(--sl-input-border-width) * 2);\n    border-radius: var(--sl-input-border-radius-medium);\n  }\n\n  .button--large {\n    height: auto;\n    min-height: var(--sl-input-height-large);\n    font-size: var(--sl-button-font-size-large);\n    line-height: calc(var(--sl-input-height-large) - var(--sl-input-border-width) * 2);\n    border-radius: var(--sl-input-border-radius-large);\n  }\n\n  /*\n   * Pill modifier\n   */\n\n  .button--pill.button--small {\n    border-radius: var(--sl-input-height-small);\n  }\n\n  .button--pill.button--medium {\n    border-radius: var(--sl-input-height-medium);\n  }\n\n  .button--pill.button--large {\n    border-radius: var(--sl-input-height-large);\n  }\n\n  /*\n   * Circle modifier\n   */\n\n  .button--circle {\n    padding-left: 0;\n    padding-right: 0;\n  }\n\n  .button--circle.button--small {\n    width: var(--sl-input-height-small);\n    border-radius: 50%;\n  }\n\n  .button--circle.button--medium {\n    width: var(--sl-input-height-medium);\n    border-radius: 50%;\n  }\n\n  .button--circle.button--large {\n    width: var(--sl-input-height-large);\n    border-radius: 50%;\n  }\n\n  .button--circle .button__prefix,\n  .button--circle .button__suffix,\n  .button--circle .button__caret {\n    display: none;\n  }\n\n  /*\n   * Caret modifier\n   */\n\n  .button--caret .button__suffix {\n    display: none;\n  }\n\n  .button--caret .button__caret {\n    height: auto;\n  }\n\n  /*\n   * Loading modifier\n   */\n\n  .button--loading {\n    position: relative;\n    cursor: wait;\n  }\n\n  .button--loading .button__prefix,\n  .button--loading .button__label,\n  .button--loading .button__suffix,\n  .button--loading .button__caret {\n    visibility: hidden;\n  }\n\n  .button--loading sl-spinner {\n    --indicator-color: currentColor;\n    position: absolute;\n    font-size: 1em;\n    height: 1em;\n    width: 1em;\n    top: calc(50% - 0.5em);\n    left: calc(50% - 0.5em);\n  }\n\n  /*\n   * Badges\n   */\n\n  .button ::slotted(sl-badge) {\n    position: absolute;\n    top: 0;\n    right: 0;\n    translate: 50% -50%;\n    pointer-events: none;\n  }\n\n  .button--rtl ::slotted(sl-badge) {\n    right: auto;\n    left: 0;\n    translate: -50% -50%;\n  }\n\n  /*\n   * Button spacing\n   */\n\n  .button--has-label.button--small .button__label {\n    padding: 0 var(--sl-spacing-small);\n  }\n\n  .button--has-label.button--medium .button__label {\n    padding: 0 var(--sl-spacing-medium);\n  }\n\n  .button--has-label.button--large .button__label {\n    padding: 0 var(--sl-spacing-large);\n  }\n\n  .button--has-prefix.button--small {\n    padding-inline-start: var(--sl-spacing-x-small);\n  }\n\n  .button--has-prefix.button--small .button__label {\n    padding-inline-start: var(--sl-spacing-x-small);\n  }\n\n  .button--has-prefix.button--medium {\n    padding-inline-start: var(--sl-spacing-small);\n  }\n\n  .button--has-prefix.button--medium .button__label {\n    padding-inline-start: var(--sl-spacing-small);\n  }\n\n  .button--has-prefix.button--large {\n    padding-inline-start: var(--sl-spacing-small);\n  }\n\n  .button--has-prefix.button--large .button__label {\n    padding-inline-start: var(--sl-spacing-small);\n  }\n\n  .button--has-suffix.button--small,\n  .button--caret.button--small {\n    padding-inline-end: var(--sl-spacing-x-small);\n  }\n\n  .button--has-suffix.button--small .button__label,\n  .button--caret.button--small .button__label {\n    padding-inline-end: var(--sl-spacing-x-small);\n  }\n\n  .button--has-suffix.button--medium,\n  .button--caret.button--medium {\n    padding-inline-end: var(--sl-spacing-small);\n  }\n\n  .button--has-suffix.button--medium .button__label,\n  .button--caret.button--medium .button__label {\n    padding-inline-end: var(--sl-spacing-small);\n  }\n\n  .button--has-suffix.button--large,\n  .button--caret.button--large {\n    padding-inline-end: var(--sl-spacing-small);\n  }\n\n  .button--has-suffix.button--large .button__label,\n  .button--caret.button--large .button__label {\n    padding-inline-end: var(--sl-spacing-small);\n  }\n\n  /*\n   * Button groups support a variety of button types (e.g. buttons with tooltips, buttons as dropdown triggers, etc.).\n   * This means buttons aren't always direct descendants of the button group, thus we can't target them with the\n   * ::slotted selector. To work around this, the button group component does some magic to add these special classes to\n   * buttons and we style them here instead.\n   */\n\n  :host(.sl-button-group__button--first:not(.sl-button-group__button--last)) .button {\n    border-start-end-radius: 0;\n    border-end-end-radius: 0;\n  }\n\n  :host(.sl-button-group__button--inner) .button {\n    border-radius: 0;\n  }\n\n  :host(.sl-button-group__button--last:not(.sl-button-group__button--first)) .button {\n    border-start-start-radius: 0;\n    border-end-start-radius: 0;\n  }\n\n  /* All except the first */\n  :host(.sl-button-group__button:not(.sl-button-group__button--first)) {\n    margin-inline-start: calc(-1 * var(--sl-input-border-width));\n  }\n\n  /* Add a visual separator between solid buttons */\n  :host(\n      .sl-button-group__button:not(\n          .sl-button-group__button--first,\n          .sl-button-group__button--radio,\n          [variant='default']\n        ):not(:hover)\n    )\n    .button:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    inset-inline-start: 0;\n    bottom: 0;\n    border-left: solid 1px rgb(128 128 128 / 33%);\n    mix-blend-mode: multiply;\n  }\n\n  /* Bump hovered, focused, and checked buttons up so their focus ring isn't clipped */\n  :host(.sl-button-group__button--hover) {\n    z-index: 1;\n  }\n\n  /* Focus and checked are always on top */\n  :host(.sl-button-group__button--focus),\n  :host(.sl-button-group__button[checked]) {\n    z-index: 2;\n  }\n"])));

  /**
   * @license
   * Copyright 2020 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   */
  var e = Symbol["for"](""),
    o$1 = function o$1(t) {
      if ((t === null || t === void 0 ? void 0 : t.r) === e) return t === null || t === void 0 ? void 0 : t._$litStatic$;
    },
    s = function s(t) {
      for (var _len7 = arguments.length, r = new Array(_len7 > 1 ? _len7 - 1 : 0), _key7 = 1; _key7 < _len7; _key7++) {
        r[_key7 - 1] = arguments[_key7];
      }
      return {
        _$litStatic$: r.reduce(function (r, e, o) {
          return r + function (t) {
            if (void 0 !== t._$litStatic$) return t._$litStatic$;
            throw Error("Value passed to 'literal' function must be a 'literal' result: ".concat(t, ". Use 'unsafeStatic' to pass non-literal values, but\n            take care to ensure page security."));
          }(e) + t[o + 1];
        }, t[0]),
        r: e
      };
    },
    a = new Map(),
    l = function l(t) {
      return function (r) {
        for (var _len8 = arguments.length, e = new Array(_len8 > 1 ? _len8 - 1 : 0), _key8 = 1; _key8 < _len8; _key8++) {
          e[_key8 - 1] = arguments[_key8];
        }
        var i = e.length;
        var s, l;
        var n = [],
          u = [];
        var c,
          $ = 0,
          f = !1;
        for (; $ < i;) {
          for (c = r[$]; $ < i && void 0 !== (l = e[$], s = o$1(l));) c += s + r[++$], f = !0;
          $ !== i && u.push(l), n.push(c), $++;
        }
        if ($ === i && n.push(r[i]), f) {
          var _t17 = n.join("$$lit$$");
          void 0 === (r = a.get(_t17)) && (n.raw = n, a.set(_t17, r = n)), e = u;
        }
        return t.apply(void 0, [r].concat(_toConsumableArray(e)));
      };
    },
    n$1 = l(x);
  var SlButton = function (_ShoelaceElement7) {
    function SlButton() {
      var _this27;
      _classCallCheck(this, SlButton);
      _this27 = _callSuper(this, SlButton, arguments);
      _this27.formControlController = new FormControlController(_this27, {
        assumeInteractionOn: ["click"]
      });
      _this27.hasSlotController = new HasSlotController(_this27, "[default]", "prefix", "suffix");
      _this27.localize = new LocalizeController(_this27);
      _this27.hasFocus = false;
      _this27.invalid = false;
      _this27.title = "";
      _this27.variant = "default";
      _this27.size = "medium";
      _this27.caret = false;
      _this27.disabled = false;
      _this27.loading = false;
      _this27.outline = false;
      _this27.pill = false;
      _this27.circle = false;
      _this27.type = "button";
      _this27.name = "";
      _this27.value = "";
      _this27.href = "";
      _this27.rel = "noreferrer noopener";
      return _this27;
    }
    _inherits(SlButton, _ShoelaceElement7);
    return _createClass(SlButton, [{
      key: "validity",
      get: function get() {
        if (this.isButton()) {
          return this.button.validity;
        }
        return validValidityState;
      }
    }, {
      key: "validationMessage",
      get: function get() {
        if (this.isButton()) {
          return this.button.validationMessage;
        }
        return "";
      }
    }, {
      key: "firstUpdated",
      value: function firstUpdated() {
        if (this.isButton()) {
          this.formControlController.updateValidity();
        }
      }
    }, {
      key: "handleBlur",
      value: function handleBlur() {
        this.hasFocus = false;
        this.emit("sl-blur");
      }
    }, {
      key: "handleFocus",
      value: function handleFocus() {
        this.hasFocus = true;
        this.emit("sl-focus");
      }
    }, {
      key: "handleClick",
      value: function handleClick() {
        if (this.type === "submit") {
          this.formControlController.submit(this);
        }
        if (this.type === "reset") {
          this.formControlController.reset(this);
        }
      }
    }, {
      key: "handleInvalid",
      value: function handleInvalid(event) {
        this.formControlController.setValidity(false);
        this.formControlController.emitInvalidEvent(event);
      }
    }, {
      key: "isButton",
      value: function isButton() {
        return this.href ? false : true;
      }
    }, {
      key: "isLink",
      value: function isLink() {
        return this.href ? true : false;
      }
    }, {
      key: "handleDisabledChange",
      value: function handleDisabledChange() {
        if (this.isButton()) {
          this.formControlController.setValidity(this.disabled);
        }
      }
    }, {
      key: "click",
      value: function click() {
        this.button.click();
      }
    }, {
      key: "focus",
      value: function focus(options) {
        this.button.focus(options);
      }
    }, {
      key: "blur",
      value: function blur() {
        this.button.blur();
      }
    }, {
      key: "checkValidity",
      value: function checkValidity() {
        if (this.isButton()) {
          return this.button.checkValidity();
        }
        return true;
      }
    }, {
      key: "getForm",
      value: function getForm() {
        return this.formControlController.getForm();
      }
    }, {
      key: "reportValidity",
      value: function reportValidity() {
        if (this.isButton()) {
          return this.button.reportValidity();
        }
        return true;
      }
    }, {
      key: "setCustomValidity",
      value: function setCustomValidity(message) {
        if (this.isButton()) {
          this.button.setCustomValidity(message);
          this.formControlController.updateValidity();
        }
      }
    }, {
      key: "render",
      value: function render() {
        var isLink = this.isLink();
        var tag = isLink ? s(_templateObject22 || (_templateObject22 = _taggedTemplateLiteral(["a"]))) : s(_templateObject23 || (_templateObject23 = _taggedTemplateLiteral(["button"])));
        return n$1(_templateObject24 || (_templateObject24 = _taggedTemplateLiteral(["\n      <", "\n        part=\"base\"\n        class=", "\n        ?disabled=", "\n        type=", "\n        title=", "\n        name=", "\n        value=", "\n        href=", "\n        target=", "\n        download=", "\n        rel=", "\n        role=", "\n        aria-disabled=", "\n        tabindex=", "\n        @blur=", "\n        @focus=", "\n        @invalid=", "\n        @click=", "\n      >\n        <slot name=\"prefix\" part=\"prefix\" class=\"button__prefix\"></slot>\n        <slot part=\"label\" class=\"button__label\"></slot>\n        <slot name=\"suffix\" part=\"suffix\" class=\"button__suffix\"></slot>\n        ", "\n        ", "\n      </", ">\n    "])), tag, e$1({
          button: true,
          "button--default": this.variant === "default",
          "button--primary": this.variant === "primary",
          "button--success": this.variant === "success",
          "button--neutral": this.variant === "neutral",
          "button--warning": this.variant === "warning",
          "button--danger": this.variant === "danger",
          "button--text": this.variant === "text",
          "button--small": this.size === "small",
          "button--medium": this.size === "medium",
          "button--large": this.size === "large",
          "button--caret": this.caret,
          "button--circle": this.circle,
          "button--disabled": this.disabled,
          "button--focused": this.hasFocus,
          "button--loading": this.loading,
          "button--standard": !this.outline,
          "button--outline": this.outline,
          "button--pill": this.pill,
          "button--rtl": this.localize.dir() === "rtl",
          "button--has-label": this.hasSlotController.test("[default]"),
          "button--has-prefix": this.hasSlotController.test("prefix"),
          "button--has-suffix": this.hasSlotController.test("suffix")
        }), o$2(isLink ? void 0 : this.disabled), o$2(isLink ? void 0 : this.type), this.title, o$2(isLink ? void 0 : this.name), o$2(isLink ? void 0 : this.value), o$2(isLink ? this.href : void 0), o$2(isLink ? this.target : void 0), o$2(isLink ? this.download : void 0), o$2(isLink ? this.rel : void 0), o$2(isLink ? void 0 : "button"), this.disabled ? "true" : "false", this.disabled ? "-1" : "0", this.handleBlur, this.handleFocus, this.isButton() ? this.handleInvalid : null, this.handleClick, this.caret ? n$1(_templateObject25 || (_templateObject25 = _taggedTemplateLiteral([" <sl-icon part=\"caret\" class=\"button__caret\" library=\"system\" name=\"caret\"></sl-icon> "]))) : "", this.loading ? n$1(_templateObject26 || (_templateObject26 = _taggedTemplateLiteral(["<sl-spinner part=\"spinner\"></sl-spinner>"]))) : "", tag);
      }
    }]);
  }(ShoelaceElement);
  SlButton.styles = [component_styles_default, button_styles_default];
  SlButton.dependencies = {
    "sl-icon": SlIcon,
    "sl-spinner": SlSpinner
  };
  __decorateClass([e$4(".button")], SlButton.prototype, "button", 2);
  __decorateClass([r()], SlButton.prototype, "hasFocus", 2);
  __decorateClass([r()], SlButton.prototype, "invalid", 2);
  __decorateClass([n$2()], SlButton.prototype, "title", 2);
  __decorateClass([n$2({
    reflect: true
  })], SlButton.prototype, "variant", 2);
  __decorateClass([n$2({
    reflect: true
  })], SlButton.prototype, "size", 2);
  __decorateClass([n$2({
    type: Boolean,
    reflect: true
  })], SlButton.prototype, "caret", 2);
  __decorateClass([n$2({
    type: Boolean,
    reflect: true
  })], SlButton.prototype, "disabled", 2);
  __decorateClass([n$2({
    type: Boolean,
    reflect: true
  })], SlButton.prototype, "loading", 2);
  __decorateClass([n$2({
    type: Boolean,
    reflect: true
  })], SlButton.prototype, "outline", 2);
  __decorateClass([n$2({
    type: Boolean,
    reflect: true
  })], SlButton.prototype, "pill", 2);
  __decorateClass([n$2({
    type: Boolean,
    reflect: true
  })], SlButton.prototype, "circle", 2);
  __decorateClass([n$2()], SlButton.prototype, "type", 2);
  __decorateClass([n$2()], SlButton.prototype, "name", 2);
  __decorateClass([n$2()], SlButton.prototype, "value", 2);
  __decorateClass([n$2()], SlButton.prototype, "href", 2);
  __decorateClass([n$2()], SlButton.prototype, "target", 2);
  __decorateClass([n$2()], SlButton.prototype, "rel", 2);
  __decorateClass([n$2()], SlButton.prototype, "download", 2);
  __decorateClass([n$2()], SlButton.prototype, "form", 2);
  __decorateClass([n$2({
    attribute: "formaction"
  })], SlButton.prototype, "formAction", 2);
  __decorateClass([n$2({
    attribute: "formenctype"
  })], SlButton.prototype, "formEnctype", 2);
  __decorateClass([n$2({
    attribute: "formmethod"
  })], SlButton.prototype, "formMethod", 2);
  __decorateClass([n$2({
    attribute: "formnovalidate",
    type: Boolean
  })], SlButton.prototype, "formNoValidate", 2);
  __decorateClass([n$2({
    attribute: "formtarget"
  })], SlButton.prototype, "formTarget", 2);
  __decorateClass([watch("disabled", {
    waitUntilFirstUpdate: true
  })], SlButton.prototype, "handleDisabledChange", 1);
  var button_group_styles_default = i$4(_templateObject27 || (_templateObject27 = _taggedTemplateLiteral(["\n  :host {\n    display: inline-block;\n  }\n\n  .button-group {\n    display: flex;\n    flex-wrap: nowrap;\n  }\n"])));
  var SlButtonGroup = function (_ShoelaceElement8) {
    function SlButtonGroup() {
      var _this28;
      _classCallCheck(this, SlButtonGroup);
      _this28 = _callSuper(this, SlButtonGroup, arguments);
      _this28.disableRole = false;
      _this28.label = "";
      return _this28;
    }
    _inherits(SlButtonGroup, _ShoelaceElement8);
    return _createClass(SlButtonGroup, [{
      key: "handleFocus",
      value: function handleFocus(event) {
        var button = findButton(event.target);
        button == null ? void 0 : button.classList.add("sl-button-group__button--focus");
      }
    }, {
      key: "handleBlur",
      value: function handleBlur(event) {
        var button = findButton(event.target);
        button == null ? void 0 : button.classList.remove("sl-button-group__button--focus");
      }
    }, {
      key: "handleMouseOver",
      value: function handleMouseOver(event) {
        var button = findButton(event.target);
        button == null ? void 0 : button.classList.add("sl-button-group__button--hover");
      }
    }, {
      key: "handleMouseOut",
      value: function handleMouseOut(event) {
        var button = findButton(event.target);
        button == null ? void 0 : button.classList.remove("sl-button-group__button--hover");
      }
    }, {
      key: "handleSlotChange",
      value: function handleSlotChange() {
        var slottedElements = _toConsumableArray(this.defaultSlot.assignedElements({
          flatten: true
        }));
        slottedElements.forEach(function (el) {
          var index = slottedElements.indexOf(el);
          var button = findButton(el);
          if (button) {
            button.classList.add("sl-button-group__button");
            button.classList.toggle("sl-button-group__button--first", index === 0);
            button.classList.toggle("sl-button-group__button--inner", index > 0 && index < slottedElements.length - 1);
            button.classList.toggle("sl-button-group__button--last", index === slottedElements.length - 1);
            button.classList.toggle("sl-button-group__button--radio", button.tagName.toLowerCase() === "sl-radio-button");
          }
        });
      }
    }, {
      key: "render",
      value: function render() {
        return x(_templateObject28 || (_templateObject28 = _taggedTemplateLiteral(["\n      <div\n        part=\"base\"\n        class=\"button-group\"\n        role=\"", "\"\n        aria-label=", "\n        @focusout=", "\n        @focusin=", "\n        @mouseover=", "\n        @mouseout=", "\n      >\n        <slot @slotchange=", "></slot>\n      </div>\n    "])), this.disableRole ? "presentation" : "group", this.label, this.handleBlur, this.handleFocus, this.handleMouseOver, this.handleMouseOut, this.handleSlotChange);
      }
    }]);
  }(ShoelaceElement);
  SlButtonGroup.styles = [component_styles_default, button_group_styles_default];
  __decorateClass([e$4("slot")], SlButtonGroup.prototype, "defaultSlot", 2);
  __decorateClass([r()], SlButtonGroup.prototype, "disableRole", 2);
  __decorateClass([n$2()], SlButtonGroup.prototype, "label", 2);
  function findButton(el) {
    var _a;
    var selector = "sl-button, sl-radio-button";
    return (_a = el.closest(selector)) != null ? _a : el.querySelector(selector);
  }

  /**
   * @license
   * Copyright 2018 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   */
  var n = "important",
    i = " !" + n,
    o = e$2(function (_i$3) {
      function _class4(t$1) {
        var _t$1$strings2;
        var _this29;
        _classCallCheck(this, _class4);
        if (_this29 = _callSuper(this, _class4, [t$1]), t$1.type !== t.ATTRIBUTE || "style" !== t$1.name || ((_t$1$strings2 = t$1.strings) === null || _t$1$strings2 === void 0 ? void 0 : _t$1$strings2.length) > 2) throw Error("The 'styleMap' directive must be used in the 'style' attribute and must be the only part in the attribute.");
        return _assertThisInitialized(_this29);
      }
      _inherits(_class4, _i$3);
      return _createClass(_class4, [{
        key: "render",
        value: function render(t) {
          return Object.keys(t).reduce(function (e, r) {
            var s = t[r];
            return null == s ? e : e + "".concat(r = r.includes("-") ? r : r.replace(/(?:^(webkit|moz|ms|o)|)(?=[A-Z])/g, "-$&").toLowerCase(), ":").concat(s, ";");
          }, "");
        }
      }, {
        key: "update",
        value: function update(e, _ref18) {
          var _ref19 = _slicedToArray(_ref18, 1),
            r = _ref19[0];
          var s = e.element.style;
          if (void 0 === this.ft) return this.ft = new Set(Object.keys(r)), this.render(r);
          var _iterator18 = _createForOfIteratorHelper(this.ft),
            _step18;
          try {
            for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {
              var _t19 = _step18.value;
              null == r[_t19] && (this.ft["delete"](_t19), _t19.includes("-") ? s.removeProperty(_t19) : s[_t19] = null);
            }
          } catch (err) {
            _iterator18.e(err);
          } finally {
            _iterator18.f();
          }
          for (var _t18 in r) {
            var _e7 = r[_t18];
            if (null != _e7) {
              this.ft.add(_t18);
              var _r7 = "string" == typeof _e7 && _e7.endsWith(i);
              _t18.includes("-") || _r7 ? s.setProperty(_t18, _r7 ? _e7.slice(0, -11) : _e7, _r7 ? n : "") : s[_t18] = _e7;
            }
          }
          return w;
        }
      }]);
    }(i$1));
  function bound01(n, max) {
    if (isOnePointZero(n)) {
      n = '100%';
    }
    var isPercent = isPercentage(n);
    n = max === 360 ? n : Math.min(max, Math.max(0, parseFloat(n)));
    if (isPercent) {
      n = parseInt(String(n * max), 10) / 100;
    }
    if (Math.abs(n - max) < 0.000001) {
      return 1;
    }
    if (max === 360) {
      n = (n < 0 ? n % max + max : n % max) / parseFloat(String(max));
    } else {
      n = n % max / parseFloat(String(max));
    }
    return n;
  }
  function clamp01(val) {
    return Math.min(1, Math.max(0, val));
  }
  function isOnePointZero(n) {
    return typeof n === 'string' && n.indexOf('.') !== -1 && parseFloat(n) === 1;
  }
  function isPercentage(n) {
    return typeof n === 'string' && n.indexOf('%') !== -1;
  }
  function boundAlpha(a) {
    a = parseFloat(a);
    if (isNaN(a) || a < 0 || a > 1) {
      a = 1;
    }
    return a;
  }
  function convertToPercentage(n) {
    if (Number(n) <= 1) {
      return "".concat(Number(n) * 100, "%");
    }
    return n;
  }
  function pad2(c) {
    return c.length === 1 ? '0' + c : String(c);
  }
  function rgbToRgb(r, g, b) {
    return {
      r: bound01(r, 255) * 255,
      g: bound01(g, 255) * 255,
      b: bound01(b, 255) * 255
    };
  }
  function rgbToHsl(r, g, b) {
    r = bound01(r, 255);
    g = bound01(g, 255);
    b = bound01(b, 255);
    var max = Math.max(r, g, b);
    var min = Math.min(r, g, b);
    var h = 0;
    var s = 0;
    var l = (max + min) / 2;
    if (max === min) {
      s = 0;
      h = 0;
    } else {
      var _d2 = max - min;
      s = l > 0.5 ? _d2 / (2 - max - min) : _d2 / (max + min);
      switch (max) {
        case r:
          h = (g - b) / _d2 + (g < b ? 6 : 0);
          break;
        case g:
          h = (b - r) / _d2 + 2;
          break;
        case b:
          h = (r - g) / _d2 + 4;
          break;
      }
      h /= 6;
    }
    return {
      h: h,
      s: s,
      l: l
    };
  }
  function hue2rgb(p, q, t) {
    if (t < 0) {
      t += 1;
    }
    if (t > 1) {
      t -= 1;
    }
    if (t < 1 / 6) {
      return p + (q - p) * (6 * t);
    }
    if (t < 1 / 2) {
      return q;
    }
    if (t < 2 / 3) {
      return p + (q - p) * (2 / 3 - t) * 6;
    }
    return p;
  }
  function hslToRgb(h, s, l) {
    var r;
    var g;
    var b;
    h = bound01(h, 360);
    s = bound01(s, 100);
    l = bound01(l, 100);
    if (s === 0) {
      g = l;
      b = l;
      r = l;
    } else {
      var q = l < 0.5 ? l * (1 + s) : l + s - l * s;
      var _p = 2 * l - q;
      r = hue2rgb(_p, q, h + 1 / 3);
      g = hue2rgb(_p, q, h);
      b = hue2rgb(_p, q, h - 1 / 3);
    }
    return {
      r: r * 255,
      g: g * 255,
      b: b * 255
    };
  }
  function rgbToHsv(r, g, b) {
    r = bound01(r, 255);
    g = bound01(g, 255);
    b = bound01(b, 255);
    var max = Math.max(r, g, b);
    var min = Math.min(r, g, b);
    var h = 0;
    var v = max;
    var d = max - min;
    var s = max === 0 ? 0 : d / max;
    if (max === min) {
      h = 0;
    } else {
      switch (max) {
        case r:
          h = (g - b) / d + (g < b ? 6 : 0);
          break;
        case g:
          h = (b - r) / d + 2;
          break;
        case b:
          h = (r - g) / d + 4;
          break;
      }
      h /= 6;
    }
    return {
      h: h,
      s: s,
      v: v
    };
  }
  function hsvToRgb(h, s, v) {
    h = bound01(h, 360) * 6;
    s = bound01(s, 100);
    v = bound01(v, 100);
    var i = Math.floor(h);
    var f = h - i;
    var p = v * (1 - s);
    var q = v * (1 - f * s);
    var t = v * (1 - (1 - f) * s);
    var mod = i % 6;
    var r = [v, q, p, p, t, v][mod];
    var g = [t, v, v, q, p, p][mod];
    var b = [p, p, t, v, v, q][mod];
    return {
      r: r * 255,
      g: g * 255,
      b: b * 255
    };
  }
  function rgbToHex(r, g, b, allow3Char) {
    var hex = [pad2(Math.round(r).toString(16)), pad2(Math.round(g).toString(16)), pad2(Math.round(b).toString(16))];
    if (allow3Char && hex[0].startsWith(hex[0].charAt(1)) && hex[1].startsWith(hex[1].charAt(1)) && hex[2].startsWith(hex[2].charAt(1))) {
      return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);
    }
    return hex.join('');
  }
  function rgbaToHex(r, g, b, a, allow4Char) {
    var hex = [pad2(Math.round(r).toString(16)), pad2(Math.round(g).toString(16)), pad2(Math.round(b).toString(16)), pad2(convertDecimalToHex(a))];
    if (allow4Char && hex[0].startsWith(hex[0].charAt(1)) && hex[1].startsWith(hex[1].charAt(1)) && hex[2].startsWith(hex[2].charAt(1)) && hex[3].startsWith(hex[3].charAt(1))) {
      return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);
    }
    return hex.join('');
  }
  function cmykToRgb(c, m, y, k) {
    var cConv = c / 100;
    var mConv = m / 100;
    var yConv = y / 100;
    var kConv = k / 100;
    var r = 255 * (1 - cConv) * (1 - kConv);
    var g = 255 * (1 - mConv) * (1 - kConv);
    var b = 255 * (1 - yConv) * (1 - kConv);
    return {
      r: r,
      g: g,
      b: b
    };
  }
  function rgbToCmyk(r, g, b) {
    var c = 1 - r / 255;
    var m = 1 - g / 255;
    var y = 1 - b / 255;
    var k = Math.min(c, m, y);
    if (k === 1) {
      c = 0;
      m = 0;
      y = 0;
    } else {
      c = (c - k) / (1 - k) * 100;
      m = (m - k) / (1 - k) * 100;
      y = (y - k) / (1 - k) * 100;
    }
    k *= 100;
    return {
      c: Math.round(c),
      m: Math.round(m),
      y: Math.round(y),
      k: Math.round(k)
    };
  }
  function convertDecimalToHex(d) {
    return Math.round(parseFloat(d) * 255).toString(16);
  }
  function convertHexToDecimal(h) {
    return parseIntFromHex(h) / 255;
  }
  function parseIntFromHex(val) {
    return parseInt(val, 16);
  }
  function numberInputToObject(color) {
    return {
      r: color >> 16,
      g: (color & 0xff00) >> 8,
      b: color & 0xff
    };
  }
  var names = {
    aliceblue: '#f0f8ff',
    antiquewhite: '#faebd7',
    aqua: '#00ffff',
    aquamarine: '#7fffd4',
    azure: '#f0ffff',
    beige: '#f5f5dc',
    bisque: '#ffe4c4',
    black: '#000000',
    blanchedalmond: '#ffebcd',
    blue: '#0000ff',
    blueviolet: '#8a2be2',
    brown: '#a52a2a',
    burlywood: '#deb887',
    cadetblue: '#5f9ea0',
    chartreuse: '#7fff00',
    chocolate: '#d2691e',
    coral: '#ff7f50',
    cornflowerblue: '#6495ed',
    cornsilk: '#fff8dc',
    crimson: '#dc143c',
    cyan: '#00ffff',
    darkblue: '#00008b',
    darkcyan: '#008b8b',
    darkgoldenrod: '#b8860b',
    darkgray: '#a9a9a9',
    darkgreen: '#006400',
    darkgrey: '#a9a9a9',
    darkkhaki: '#bdb76b',
    darkmagenta: '#8b008b',
    darkolivegreen: '#556b2f',
    darkorange: '#ff8c00',
    darkorchid: '#9932cc',
    darkred: '#8b0000',
    darksalmon: '#e9967a',
    darkseagreen: '#8fbc8f',
    darkslateblue: '#483d8b',
    darkslategray: '#2f4f4f',
    darkslategrey: '#2f4f4f',
    darkturquoise: '#00ced1',
    darkviolet: '#9400d3',
    deeppink: '#ff1493',
    deepskyblue: '#00bfff',
    dimgray: '#696969',
    dimgrey: '#696969',
    dodgerblue: '#1e90ff',
    firebrick: '#b22222',
    floralwhite: '#fffaf0',
    forestgreen: '#228b22',
    fuchsia: '#ff00ff',
    gainsboro: '#dcdcdc',
    ghostwhite: '#f8f8ff',
    goldenrod: '#daa520',
    gold: '#ffd700',
    gray: '#808080',
    green: '#008000',
    greenyellow: '#adff2f',
    grey: '#808080',
    honeydew: '#f0fff0',
    hotpink: '#ff69b4',
    indianred: '#cd5c5c',
    indigo: '#4b0082',
    ivory: '#fffff0',
    khaki: '#f0e68c',
    lavenderblush: '#fff0f5',
    lavender: '#e6e6fa',
    lawngreen: '#7cfc00',
    lemonchiffon: '#fffacd',
    lightblue: '#add8e6',
    lightcoral: '#f08080',
    lightcyan: '#e0ffff',
    lightgoldenrodyellow: '#fafad2',
    lightgray: '#d3d3d3',
    lightgreen: '#90ee90',
    lightgrey: '#d3d3d3',
    lightpink: '#ffb6c1',
    lightsalmon: '#ffa07a',
    lightseagreen: '#20b2aa',
    lightskyblue: '#87cefa',
    lightslategray: '#778899',
    lightslategrey: '#778899',
    lightsteelblue: '#b0c4de',
    lightyellow: '#ffffe0',
    lime: '#00ff00',
    limegreen: '#32cd32',
    linen: '#faf0e6',
    magenta: '#ff00ff',
    maroon: '#800000',
    mediumaquamarine: '#66cdaa',
    mediumblue: '#0000cd',
    mediumorchid: '#ba55d3',
    mediumpurple: '#9370db',
    mediumseagreen: '#3cb371',
    mediumslateblue: '#7b68ee',
    mediumspringgreen: '#00fa9a',
    mediumturquoise: '#48d1cc',
    mediumvioletred: '#c71585',
    midnightblue: '#191970',
    mintcream: '#f5fffa',
    mistyrose: '#ffe4e1',
    moccasin: '#ffe4b5',
    navajowhite: '#ffdead',
    navy: '#000080',
    oldlace: '#fdf5e6',
    olive: '#808000',
    olivedrab: '#6b8e23',
    orange: '#ffa500',
    orangered: '#ff4500',
    orchid: '#da70d6',
    palegoldenrod: '#eee8aa',
    palegreen: '#98fb98',
    paleturquoise: '#afeeee',
    palevioletred: '#db7093',
    papayawhip: '#ffefd5',
    peachpuff: '#ffdab9',
    peru: '#cd853f',
    pink: '#ffc0cb',
    plum: '#dda0dd',
    powderblue: '#b0e0e6',
    purple: '#800080',
    rebeccapurple: '#663399',
    red: '#ff0000',
    rosybrown: '#bc8f8f',
    royalblue: '#4169e1',
    saddlebrown: '#8b4513',
    salmon: '#fa8072',
    sandybrown: '#f4a460',
    seagreen: '#2e8b57',
    seashell: '#fff5ee',
    sienna: '#a0522d',
    silver: '#c0c0c0',
    skyblue: '#87ceeb',
    slateblue: '#6a5acd',
    slategray: '#708090',
    slategrey: '#708090',
    snow: '#fffafa',
    springgreen: '#00ff7f',
    steelblue: '#4682b4',
    tan: '#d2b48c',
    teal: '#008080',
    thistle: '#d8bfd8',
    tomato: '#ff6347',
    turquoise: '#40e0d0',
    violet: '#ee82ee',
    wheat: '#f5deb3',
    white: '#ffffff',
    whitesmoke: '#f5f5f5',
    yellow: '#ffff00',
    yellowgreen: '#9acd32'
  };
  function inputToRGB(color) {
    var rgb = {
      r: 0,
      g: 0,
      b: 0
    };
    var a = 1;
    var s = null;
    var v = null;
    var l = null;
    var ok = false;
    var format = false;
    if (typeof color === 'string') {
      color = stringInputToObject(color);
    }
    if (_typeof(color) === 'object') {
      if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {
        rgb = rgbToRgb(color.r, color.g, color.b);
        ok = true;
        format = String(color.r).substr(-1) === '%' ? 'prgb' : 'rgb';
      } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {
        s = convertToPercentage(color.s);
        v = convertToPercentage(color.v);
        rgb = hsvToRgb(color.h, s, v);
        ok = true;
        format = 'hsv';
      } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {
        s = convertToPercentage(color.s);
        l = convertToPercentage(color.l);
        rgb = hslToRgb(color.h, s, l);
        ok = true;
        format = 'hsl';
      } else if (isValidCSSUnit(color.c) && isValidCSSUnit(color.m) && isValidCSSUnit(color.y) && isValidCSSUnit(color.k)) {
        rgb = cmykToRgb(color.c, color.m, color.y, color.k);
        ok = true;
        format = 'cmyk';
      }
      if (Object.prototype.hasOwnProperty.call(color, 'a')) {
        a = color.a;
      }
    }
    a = boundAlpha(a);
    return {
      ok: ok,
      format: color.format || format,
      r: Math.min(255, Math.max(rgb.r, 0)),
      g: Math.min(255, Math.max(rgb.g, 0)),
      b: Math.min(255, Math.max(rgb.b, 0)),
      a: a
    };
  }
  var CSS_INTEGER = '[-\\+]?\\d+%?';
  var CSS_NUMBER = '[-\\+]?\\d*\\.\\d+%?';
  var CSS_UNIT = '(?:' + CSS_NUMBER + ')|(?:' + CSS_INTEGER + ')';
  var PERMISSIVE_MATCH3 = '[\\s|\\(]+(' + CSS_UNIT + ')[,|\\s]+(' + CSS_UNIT + ')[,|\\s]+(' + CSS_UNIT + ')\\s*\\)?';
  var PERMISSIVE_MATCH4 = '[\\s|\\(]+(' + CSS_UNIT + ')[,|\\s]+(' + CSS_UNIT + ')[,|\\s]+(' + CSS_UNIT + ')[,|\\s]+(' + CSS_UNIT + ')\\s*\\)?';
  var matchers = {
    CSS_UNIT: new RegExp(CSS_UNIT),
    rgb: new RegExp('rgb' + PERMISSIVE_MATCH3),
    rgba: new RegExp('rgba' + PERMISSIVE_MATCH4),
    hsl: new RegExp('hsl' + PERMISSIVE_MATCH3),
    hsla: new RegExp('hsla' + PERMISSIVE_MATCH4),
    hsv: new RegExp('hsv' + PERMISSIVE_MATCH3),
    hsva: new RegExp('hsva' + PERMISSIVE_MATCH4),
    cmyk: new RegExp('cmyk' + PERMISSIVE_MATCH4),
    hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
    hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
    hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
    hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/
  };
  function stringInputToObject(color) {
    color = color.trim().toLowerCase();
    if (color.length === 0) {
      return false;
    }
    var named = false;
    if (names[color]) {
      color = names[color];
      named = true;
    } else if (color === 'transparent') {
      return {
        r: 0,
        g: 0,
        b: 0,
        a: 0,
        format: 'name'
      };
    }
    var match = matchers.rgb.exec(color);
    if (match) {
      return {
        r: match[1],
        g: match[2],
        b: match[3]
      };
    }
    match = matchers.rgba.exec(color);
    if (match) {
      return {
        r: match[1],
        g: match[2],
        b: match[3],
        a: match[4]
      };
    }
    match = matchers.hsl.exec(color);
    if (match) {
      return {
        h: match[1],
        s: match[2],
        l: match[3]
      };
    }
    match = matchers.hsla.exec(color);
    if (match) {
      return {
        h: match[1],
        s: match[2],
        l: match[3],
        a: match[4]
      };
    }
    match = matchers.hsv.exec(color);
    if (match) {
      return {
        h: match[1],
        s: match[2],
        v: match[3]
      };
    }
    match = matchers.hsva.exec(color);
    if (match) {
      return {
        h: match[1],
        s: match[2],
        v: match[3],
        a: match[4]
      };
    }
    match = matchers.cmyk.exec(color);
    if (match) {
      return {
        c: match[1],
        m: match[2],
        y: match[3],
        k: match[4]
      };
    }
    match = matchers.hex8.exec(color);
    if (match) {
      return {
        r: parseIntFromHex(match[1]),
        g: parseIntFromHex(match[2]),
        b: parseIntFromHex(match[3]),
        a: convertHexToDecimal(match[4]),
        format: named ? 'name' : 'hex8'
      };
    }
    match = matchers.hex6.exec(color);
    if (match) {
      return {
        r: parseIntFromHex(match[1]),
        g: parseIntFromHex(match[2]),
        b: parseIntFromHex(match[3]),
        format: named ? 'name' : 'hex'
      };
    }
    match = matchers.hex4.exec(color);
    if (match) {
      return {
        r: parseIntFromHex(match[1] + match[1]),
        g: parseIntFromHex(match[2] + match[2]),
        b: parseIntFromHex(match[3] + match[3]),
        a: convertHexToDecimal(match[4] + match[4]),
        format: named ? 'name' : 'hex8'
      };
    }
    match = matchers.hex3.exec(color);
    if (match) {
      return {
        r: parseIntFromHex(match[1] + match[1]),
        g: parseIntFromHex(match[2] + match[2]),
        b: parseIntFromHex(match[3] + match[3]),
        format: named ? 'name' : 'hex'
      };
    }
    return false;
  }
  function isValidCSSUnit(color) {
    if (typeof color === 'number') {
      return !Number.isNaN(color);
    }
    return matchers.CSS_UNIT.test(color);
  }
  var TinyColor = function () {
    function TinyColor() {
      var _opts$format;
      var color = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      _classCallCheck(this, TinyColor);
      if (color instanceof TinyColor) {
        return color;
      }
      if (typeof color === 'number') {
        color = numberInputToObject(color);
      }
      this.originalInput = color;
      var rgb = inputToRGB(color);
      this.originalInput = color;
      this.r = rgb.r;
      this.g = rgb.g;
      this.b = rgb.b;
      this.a = rgb.a;
      this.roundA = Math.round(100 * this.a) / 100;
      this.format = (_opts$format = opts.format) !== null && _opts$format !== void 0 ? _opts$format : rgb.format;
      this.gradientType = opts.gradientType;
      if (this.r < 1) {
        this.r = Math.round(this.r);
      }
      if (this.g < 1) {
        this.g = Math.round(this.g);
      }
      if (this.b < 1) {
        this.b = Math.round(this.b);
      }
      this.isValid = rgb.ok;
    }
    return _createClass(TinyColor, [{
      key: "isDark",
      value: function isDark() {
        return this.getBrightness() < 128;
      }
    }, {
      key: "isLight",
      value: function isLight() {
        return !this.isDark();
      }
    }, {
      key: "getBrightness",
      value: function getBrightness() {
        var rgb = this.toRgb();
        return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;
      }
    }, {
      key: "getLuminance",
      value: function getLuminance() {
        var rgb = this.toRgb();
        var R;
        var G;
        var B;
        var RsRGB = rgb.r / 255;
        var GsRGB = rgb.g / 255;
        var BsRGB = rgb.b / 255;
        if (RsRGB <= 0.03928) {
          R = RsRGB / 12.92;
        } else {
          R = Math.pow((RsRGB + 0.055) / 1.055, 2.4);
        }
        if (GsRGB <= 0.03928) {
          G = GsRGB / 12.92;
        } else {
          G = Math.pow((GsRGB + 0.055) / 1.055, 2.4);
        }
        if (BsRGB <= 0.03928) {
          B = BsRGB / 12.92;
        } else {
          B = Math.pow((BsRGB + 0.055) / 1.055, 2.4);
        }
        return 0.2126 * R + 0.7152 * G + 0.0722 * B;
      }
    }, {
      key: "getAlpha",
      value: function getAlpha() {
        return this.a;
      }
    }, {
      key: "setAlpha",
      value: function setAlpha(alpha) {
        this.a = boundAlpha(alpha);
        this.roundA = Math.round(100 * this.a) / 100;
        return this;
      }
    }, {
      key: "isMonochrome",
      value: function isMonochrome() {
        var _this$toHsl = this.toHsl(),
          s = _this$toHsl.s;
        return s === 0;
      }
    }, {
      key: "toHsv",
      value: function toHsv() {
        var hsv = rgbToHsv(this.r, this.g, this.b);
        return {
          h: hsv.h * 360,
          s: hsv.s,
          v: hsv.v,
          a: this.a
        };
      }
    }, {
      key: "toHsvString",
      value: function toHsvString() {
        var hsv = rgbToHsv(this.r, this.g, this.b);
        var h = Math.round(hsv.h * 360);
        var s = Math.round(hsv.s * 100);
        var v = Math.round(hsv.v * 100);
        return this.a === 1 ? "hsv(".concat(h, ", ").concat(s, "%, ").concat(v, "%)") : "hsva(".concat(h, ", ").concat(s, "%, ").concat(v, "%, ").concat(this.roundA, ")");
      }
    }, {
      key: "toHsl",
      value: function toHsl() {
        var hsl = rgbToHsl(this.r, this.g, this.b);
        return {
          h: hsl.h * 360,
          s: hsl.s,
          l: hsl.l,
          a: this.a
        };
      }
    }, {
      key: "toHslString",
      value: function toHslString() {
        var hsl = rgbToHsl(this.r, this.g, this.b);
        var h = Math.round(hsl.h * 360);
        var s = Math.round(hsl.s * 100);
        var l = Math.round(hsl.l * 100);
        return this.a === 1 ? "hsl(".concat(h, ", ").concat(s, "%, ").concat(l, "%)") : "hsla(".concat(h, ", ").concat(s, "%, ").concat(l, "%, ").concat(this.roundA, ")");
      }
    }, {
      key: "toHex",
      value: function toHex() {
        var allow3Char = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
        return rgbToHex(this.r, this.g, this.b, allow3Char);
      }
    }, {
      key: "toHexString",
      value: function toHexString() {
        var allow3Char = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
        return '#' + this.toHex(allow3Char);
      }
    }, {
      key: "toHex8",
      value: function toHex8() {
        var allow4Char = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
        return rgbaToHex(this.r, this.g, this.b, this.a, allow4Char);
      }
    }, {
      key: "toHex8String",
      value: function toHex8String() {
        var allow4Char = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
        return '#' + this.toHex8(allow4Char);
      }
    }, {
      key: "toHexShortString",
      value: function toHexShortString() {
        var allowShortChar = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
        return this.a === 1 ? this.toHexString(allowShortChar) : this.toHex8String(allowShortChar);
      }
    }, {
      key: "toRgb",
      value: function toRgb() {
        return {
          r: Math.round(this.r),
          g: Math.round(this.g),
          b: Math.round(this.b),
          a: this.a
        };
      }
    }, {
      key: "toRgbString",
      value: function toRgbString() {
        var r = Math.round(this.r);
        var g = Math.round(this.g);
        var b = Math.round(this.b);
        return this.a === 1 ? "rgb(".concat(r, ", ").concat(g, ", ").concat(b, ")") : "rgba(".concat(r, ", ").concat(g, ", ").concat(b, ", ").concat(this.roundA, ")");
      }
    }, {
      key: "toPercentageRgb",
      value: function toPercentageRgb() {
        var fmt = function fmt(x) {
          return "".concat(Math.round(bound01(x, 255) * 100), "%");
        };
        return {
          r: fmt(this.r),
          g: fmt(this.g),
          b: fmt(this.b),
          a: this.a
        };
      }
    }, {
      key: "toPercentageRgbString",
      value: function toPercentageRgbString() {
        var rnd = function rnd(x) {
          return Math.round(bound01(x, 255) * 100);
        };
        return this.a === 1 ? "rgb(".concat(rnd(this.r), "%, ").concat(rnd(this.g), "%, ").concat(rnd(this.b), "%)") : "rgba(".concat(rnd(this.r), "%, ").concat(rnd(this.g), "%, ").concat(rnd(this.b), "%, ").concat(this.roundA, ")");
      }
    }, {
      key: "toCmyk",
      value: function toCmyk() {
        return _objectSpread({}, rgbToCmyk(this.r, this.g, this.b));
      }
    }, {
      key: "toCmykString",
      value: function toCmykString() {
        var _rgbToCmyk = rgbToCmyk(this.r, this.g, this.b),
          c = _rgbToCmyk.c,
          m = _rgbToCmyk.m,
          y = _rgbToCmyk.y,
          k = _rgbToCmyk.k;
        return "cmyk(".concat(c, ", ").concat(m, ", ").concat(y, ", ").concat(k, ")");
      }
    }, {
      key: "toName",
      value: function toName() {
        if (this.a === 0) {
          return 'transparent';
        }
        if (this.a < 1) {
          return false;
        }
        var hex = '#' + rgbToHex(this.r, this.g, this.b, false);
        for (var _i15 = 0, _Object$entries = Object.entries(names); _i15 < _Object$entries.length; _i15++) {
          var _Object$entries$_i = _slicedToArray(_Object$entries[_i15], 2),
            key = _Object$entries$_i[0],
            value = _Object$entries$_i[1];
          if (hex === value) {
            return key;
          }
        }
        return false;
      }
    }, {
      key: "toString",
      value: function toString(format) {
        var _format;
        var formatSet = Boolean(format);
        format = (_format = format) !== null && _format !== void 0 ? _format : this.format;
        var formattedString = false;
        var hasAlpha = this.a < 1 && this.a >= 0;
        var needsAlphaFormat = !formatSet && hasAlpha && (format.startsWith('hex') || format === 'name');
        if (needsAlphaFormat) {
          if (format === 'name' && this.a === 0) {
            return this.toName();
          }
          return this.toRgbString();
        }
        if (format === 'rgb') {
          formattedString = this.toRgbString();
        }
        if (format === 'prgb') {
          formattedString = this.toPercentageRgbString();
        }
        if (format === 'hex' || format === 'hex6') {
          formattedString = this.toHexString();
        }
        if (format === 'hex3') {
          formattedString = this.toHexString(true);
        }
        if (format === 'hex4') {
          formattedString = this.toHex8String(true);
        }
        if (format === 'hex8') {
          formattedString = this.toHex8String();
        }
        if (format === 'name') {
          formattedString = this.toName();
        }
        if (format === 'hsl') {
          formattedString = this.toHslString();
        }
        if (format === 'hsv') {
          formattedString = this.toHsvString();
        }
        if (format === 'cmyk') {
          formattedString = this.toCmykString();
        }
        return formattedString || this.toHexString();
      }
    }, {
      key: "toNumber",
      value: function toNumber() {
        return (Math.round(this.r) << 16) + (Math.round(this.g) << 8) + Math.round(this.b);
      }
    }, {
      key: "clone",
      value: function clone() {
        return new TinyColor(this.toString());
      }
    }, {
      key: "lighten",
      value: function lighten() {
        var amount = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;
        var hsl = this.toHsl();
        hsl.l += amount / 100;
        hsl.l = clamp01(hsl.l);
        return new TinyColor(hsl);
      }
    }, {
      key: "brighten",
      value: function brighten() {
        var amount = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;
        var rgb = this.toRgb();
        rgb.r = Math.max(0, Math.min(255, rgb.r - Math.round(255 * -(amount / 100))));
        rgb.g = Math.max(0, Math.min(255, rgb.g - Math.round(255 * -(amount / 100))));
        rgb.b = Math.max(0, Math.min(255, rgb.b - Math.round(255 * -(amount / 100))));
        return new TinyColor(rgb);
      }
    }, {
      key: "darken",
      value: function darken() {
        var amount = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;
        var hsl = this.toHsl();
        hsl.l -= amount / 100;
        hsl.l = clamp01(hsl.l);
        return new TinyColor(hsl);
      }
    }, {
      key: "tint",
      value: function tint() {
        var amount = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;
        return this.mix('white', amount);
      }
    }, {
      key: "shade",
      value: function shade() {
        var amount = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;
        return this.mix('black', amount);
      }
    }, {
      key: "desaturate",
      value: function desaturate() {
        var amount = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;
        var hsl = this.toHsl();
        hsl.s -= amount / 100;
        hsl.s = clamp01(hsl.s);
        return new TinyColor(hsl);
      }
    }, {
      key: "saturate",
      value: function saturate() {
        var amount = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;
        var hsl = this.toHsl();
        hsl.s += amount / 100;
        hsl.s = clamp01(hsl.s);
        return new TinyColor(hsl);
      }
    }, {
      key: "greyscale",
      value: function greyscale() {
        return this.desaturate(100);
      }
    }, {
      key: "spin",
      value: function spin(amount) {
        var hsl = this.toHsl();
        var hue = (hsl.h + amount) % 360;
        hsl.h = hue < 0 ? 360 + hue : hue;
        return new TinyColor(hsl);
      }
    }, {
      key: "mix",
      value: function mix(color) {
        var amount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 50;
        var rgb1 = this.toRgb();
        var rgb2 = new TinyColor(color).toRgb();
        var p = amount / 100;
        var rgba = {
          r: (rgb2.r - rgb1.r) * p + rgb1.r,
          g: (rgb2.g - rgb1.g) * p + rgb1.g,
          b: (rgb2.b - rgb1.b) * p + rgb1.b,
          a: (rgb2.a - rgb1.a) * p + rgb1.a
        };
        return new TinyColor(rgba);
      }
    }, {
      key: "analogous",
      value: function analogous() {
        var results = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 6;
        var slices = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 30;
        var hsl = this.toHsl();
        var part = 360 / slices;
        var ret = [this];
        for (hsl.h = (hsl.h - (part * results >> 1) + 720) % 360; --results;) {
          hsl.h = (hsl.h + part) % 360;
          ret.push(new TinyColor(hsl));
        }
        return ret;
      }
    }, {
      key: "complement",
      value: function complement() {
        var hsl = this.toHsl();
        hsl.h = (hsl.h + 180) % 360;
        return new TinyColor(hsl);
      }
    }, {
      key: "monochromatic",
      value: function monochromatic() {
        var results = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 6;
        var hsv = this.toHsv();
        var h = hsv.h;
        var s = hsv.s;
        var v = hsv.v;
        var res = [];
        var modification = 1 / results;
        while (results--) {
          res.push(new TinyColor({
            h: h,
            s: s,
            v: v
          }));
          v = (v + modification) % 1;
        }
        return res;
      }
    }, {
      key: "splitcomplement",
      value: function splitcomplement() {
        var hsl = this.toHsl();
        var h = hsl.h;
        return [this, new TinyColor({
          h: (h + 72) % 360,
          s: hsl.s,
          l: hsl.l
        }), new TinyColor({
          h: (h + 216) % 360,
          s: hsl.s,
          l: hsl.l
        })];
      }
    }, {
      key: "onBackground",
      value: function onBackground(background) {
        var fg = this.toRgb();
        var bg = new TinyColor(background).toRgb();
        var alpha = fg.a + bg.a * (1 - fg.a);
        return new TinyColor({
          r: (fg.r * fg.a + bg.r * bg.a * (1 - fg.a)) / alpha,
          g: (fg.g * fg.a + bg.g * bg.a * (1 - fg.a)) / alpha,
          b: (fg.b * fg.a + bg.b * bg.a * (1 - fg.a)) / alpha,
          a: alpha
        });
      }
    }, {
      key: "triad",
      value: function triad() {
        return this.polyad(3);
      }
    }, {
      key: "tetrad",
      value: function tetrad() {
        return this.polyad(4);
      }
    }, {
      key: "polyad",
      value: function polyad(n) {
        var hsl = this.toHsl();
        var h = hsl.h;
        var result = [this];
        var increment = 360 / n;
        for (var _i16 = 1; _i16 < n; _i16++) {
          result.push(new TinyColor({
            h: (h + _i16 * increment) % 360,
            s: hsl.s,
            l: hsl.l
          }));
        }
        return result;
      }
    }, {
      key: "equals",
      value: function equals(color) {
        var comparedColor = new TinyColor(color);
        if (this.format === 'cmyk' || comparedColor.format === 'cmyk') {
          return this.toCmykString() === comparedColor.toCmykString();
        }
        return this.toRgbString() === comparedColor.toRgbString();
      }
    }]);
  }();
  var hasEyeDropper = ("EyeDropper" in window);
  var SlColorPicker = function (_ShoelaceElement9) {
    function SlColorPicker() {
      var _this30;
      _classCallCheck(this, SlColorPicker);
      _this30 = _callSuper(this, SlColorPicker);
      _this30.formControlController = new FormControlController(_this30);
      _this30.isSafeValue = false;
      _this30.localize = new LocalizeController(_this30);
      _this30.hasFocus = false;
      _this30.isDraggingGridHandle = false;
      _this30.isEmpty = false;
      _this30.inputValue = "";
      _this30.hue = 0;
      _this30.saturation = 100;
      _this30.brightness = 100;
      _this30.alpha = 100;
      _this30.value = "";
      _this30.defaultValue = "";
      _this30.label = "";
      _this30.format = "hex";
      _this30.inline = false;
      _this30.size = "medium";
      _this30.noFormatToggle = false;
      _this30.name = "";
      _this30.disabled = false;
      _this30.hoist = false;
      _this30.opacity = false;
      _this30.uppercase = false;
      _this30.swatches = "";
      _this30.form = "";
      _this30.required = false;
      _this30.handleFocusIn = function () {
        _this30.hasFocus = true;
        _this30.emit("sl-focus");
      };
      _this30.handleFocusOut = function () {
        _this30.hasFocus = false;
        _this30.emit("sl-blur");
      };
      _this30.addEventListener("focusin", _this30.handleFocusIn);
      _this30.addEventListener("focusout", _this30.handleFocusOut);
      return _this30;
    }
    _inherits(SlColorPicker, _ShoelaceElement9);
    return _createClass(SlColorPicker, [{
      key: "validity",
      get: function get() {
        return this.input.validity;
      }
    }, {
      key: "validationMessage",
      get: function get() {
        return this.input.validationMessage;
      }
    }, {
      key: "firstUpdated",
      value: function firstUpdated() {
        var _this31 = this;
        this.input.updateComplete.then(function () {
          _this31.formControlController.updateValidity();
        });
      }
    }, {
      key: "handleCopy",
      value: function handleCopy() {
        var _this32 = this;
        this.input.select();
        document.execCommand("copy");
        this.previewButton.focus();
        this.previewButton.classList.add("color-picker__preview-color--copied");
        this.previewButton.addEventListener("animationend", function () {
          _this32.previewButton.classList.remove("color-picker__preview-color--copied");
        });
      }
    }, {
      key: "handleFormatToggle",
      value: function handleFormatToggle() {
        var formats = ["hex", "rgb", "hsl", "hsv"];
        var nextIndex = (formats.indexOf(this.format) + 1) % formats.length;
        this.format = formats[nextIndex];
        this.setColor(this.value);
        this.emit("sl-change");
        this.emit("sl-input");
      }
    }, {
      key: "handleAlphaDrag",
      value: function handleAlphaDrag(event) {
        var _this33 = this;
        var container = this.shadowRoot.querySelector(".color-picker__slider.color-picker__alpha");
        var handle = container.querySelector(".color-picker__slider-handle");
        var _container$getBoundin = container.getBoundingClientRect(),
          width = _container$getBoundin.width;
        var initialValue = this.value;
        var currentValue = this.value;
        handle.focus();
        event.preventDefault();
        drag(container, {
          onMove: function onMove(x) {
            _this33.alpha = clamp(x / width * 100, 0, 100);
            _this33.syncValues();
            if (_this33.value !== currentValue) {
              currentValue = _this33.value;
              _this33.emit("sl-input");
            }
          },
          onStop: function onStop() {
            if (_this33.value !== initialValue) {
              initialValue = _this33.value;
              _this33.emit("sl-change");
            }
          },
          initialEvent: event
        });
      }
    }, {
      key: "handleHueDrag",
      value: function handleHueDrag(event) {
        var _this34 = this;
        var container = this.shadowRoot.querySelector(".color-picker__slider.color-picker__hue");
        var handle = container.querySelector(".color-picker__slider-handle");
        var _container$getBoundin2 = container.getBoundingClientRect(),
          width = _container$getBoundin2.width;
        var initialValue = this.value;
        var currentValue = this.value;
        handle.focus();
        event.preventDefault();
        drag(container, {
          onMove: function onMove(x) {
            _this34.hue = clamp(x / width * 360, 0, 360);
            _this34.syncValues();
            if (_this34.value !== currentValue) {
              currentValue = _this34.value;
              _this34.emit("sl-input");
            }
          },
          onStop: function onStop() {
            if (_this34.value !== initialValue) {
              initialValue = _this34.value;
              _this34.emit("sl-change");
            }
          },
          initialEvent: event
        });
      }
    }, {
      key: "handleGridDrag",
      value: function handleGridDrag(event) {
        var _this35 = this;
        var grid = this.shadowRoot.querySelector(".color-picker__grid");
        var handle = grid.querySelector(".color-picker__grid-handle");
        var _grid$getBoundingClie = grid.getBoundingClientRect(),
          width = _grid$getBoundingClie.width,
          height = _grid$getBoundingClie.height;
        var initialValue = this.value;
        var currentValue = this.value;
        handle.focus();
        event.preventDefault();
        this.isDraggingGridHandle = true;
        drag(grid, {
          onMove: function onMove(x, y) {
            _this35.saturation = clamp(x / width * 100, 0, 100);
            _this35.brightness = clamp(100 - y / height * 100, 0, 100);
            _this35.syncValues();
            if (_this35.value !== currentValue) {
              currentValue = _this35.value;
              _this35.emit("sl-input");
            }
          },
          onStop: function onStop() {
            _this35.isDraggingGridHandle = false;
            if (_this35.value !== initialValue) {
              initialValue = _this35.value;
              _this35.emit("sl-change");
            }
          },
          initialEvent: event
        });
      }
    }, {
      key: "handleAlphaKeyDown",
      value: function handleAlphaKeyDown(event) {
        var increment = event.shiftKey ? 10 : 1;
        var oldValue = this.value;
        if (event.key === "ArrowLeft") {
          event.preventDefault();
          this.alpha = clamp(this.alpha - increment, 0, 100);
          this.syncValues();
        }
        if (event.key === "ArrowRight") {
          event.preventDefault();
          this.alpha = clamp(this.alpha + increment, 0, 100);
          this.syncValues();
        }
        if (event.key === "Home") {
          event.preventDefault();
          this.alpha = 0;
          this.syncValues();
        }
        if (event.key === "End") {
          event.preventDefault();
          this.alpha = 100;
          this.syncValues();
        }
        if (this.value !== oldValue) {
          this.emit("sl-change");
          this.emit("sl-input");
        }
      }
    }, {
      key: "handleHueKeyDown",
      value: function handleHueKeyDown(event) {
        var increment = event.shiftKey ? 10 : 1;
        var oldValue = this.value;
        if (event.key === "ArrowLeft") {
          event.preventDefault();
          this.hue = clamp(this.hue - increment, 0, 360);
          this.syncValues();
        }
        if (event.key === "ArrowRight") {
          event.preventDefault();
          this.hue = clamp(this.hue + increment, 0, 360);
          this.syncValues();
        }
        if (event.key === "Home") {
          event.preventDefault();
          this.hue = 0;
          this.syncValues();
        }
        if (event.key === "End") {
          event.preventDefault();
          this.hue = 360;
          this.syncValues();
        }
        if (this.value !== oldValue) {
          this.emit("sl-change");
          this.emit("sl-input");
        }
      }
    }, {
      key: "handleGridKeyDown",
      value: function handleGridKeyDown(event) {
        var increment = event.shiftKey ? 10 : 1;
        var oldValue = this.value;
        if (event.key === "ArrowLeft") {
          event.preventDefault();
          this.saturation = clamp(this.saturation - increment, 0, 100);
          this.syncValues();
        }
        if (event.key === "ArrowRight") {
          event.preventDefault();
          this.saturation = clamp(this.saturation + increment, 0, 100);
          this.syncValues();
        }
        if (event.key === "ArrowUp") {
          event.preventDefault();
          this.brightness = clamp(this.brightness + increment, 0, 100);
          this.syncValues();
        }
        if (event.key === "ArrowDown") {
          event.preventDefault();
          this.brightness = clamp(this.brightness - increment, 0, 100);
          this.syncValues();
        }
        if (this.value !== oldValue) {
          this.emit("sl-change");
          this.emit("sl-input");
        }
      }
    }, {
      key: "handleInputChange",
      value: function handleInputChange(event) {
        var target = event.target;
        var oldValue = this.value;
        event.stopPropagation();
        if (this.input.value) {
          this.setColor(target.value);
          target.value = this.value;
        } else {
          this.value = "";
        }
        if (this.value !== oldValue) {
          this.emit("sl-change");
          this.emit("sl-input");
        }
      }
    }, {
      key: "handleInputInput",
      value: function handleInputInput(event) {
        this.formControlController.updateValidity();
        event.stopPropagation();
      }
    }, {
      key: "handleInputKeyDown",
      value: function handleInputKeyDown(event) {
        var _this36 = this;
        if (event.key === "Enter") {
          var oldValue = this.value;
          if (this.input.value) {
            this.setColor(this.input.value);
            this.input.value = this.value;
            if (this.value !== oldValue) {
              this.emit("sl-change");
              this.emit("sl-input");
            }
            setTimeout(function () {
              return _this36.input.select();
            });
          } else {
            this.hue = 0;
          }
        }
      }
    }, {
      key: "handleInputInvalid",
      value: function handleInputInvalid(event) {
        this.formControlController.setValidity(false);
        this.formControlController.emitInvalidEvent(event);
      }
    }, {
      key: "handleTouchMove",
      value: function handleTouchMove(event) {
        event.preventDefault();
      }
    }, {
      key: "parseColor",
      value: function parseColor(colorString) {
        var color = new TinyColor(colorString);
        if (!color.isValid) {
          return null;
        }
        var hslColor = color.toHsl();
        var hsl = {
          h: hslColor.h,
          s: hslColor.s * 100,
          l: hslColor.l * 100,
          a: hslColor.a
        };
        var rgb = color.toRgb();
        var hex = color.toHexString();
        var hexa = color.toHex8String();
        var hsvColor = color.toHsv();
        var hsv = {
          h: hsvColor.h,
          s: hsvColor.s * 100,
          v: hsvColor.v * 100,
          a: hsvColor.a
        };
        return {
          hsl: {
            h: hsl.h,
            s: hsl.s,
            l: hsl.l,
            string: this.setLetterCase("hsl(".concat(Math.round(hsl.h), ", ").concat(Math.round(hsl.s), "%, ").concat(Math.round(hsl.l), "%)"))
          },
          hsla: {
            h: hsl.h,
            s: hsl.s,
            l: hsl.l,
            a: hsl.a,
            string: this.setLetterCase("hsla(".concat(Math.round(hsl.h), ", ").concat(Math.round(hsl.s), "%, ").concat(Math.round(hsl.l), "%, ").concat(hsl.a.toFixed(2).toString(), ")"))
          },
          hsv: {
            h: hsv.h,
            s: hsv.s,
            v: hsv.v,
            string: this.setLetterCase("hsv(".concat(Math.round(hsv.h), ", ").concat(Math.round(hsv.s), "%, ").concat(Math.round(hsv.v), "%)"))
          },
          hsva: {
            h: hsv.h,
            s: hsv.s,
            v: hsv.v,
            a: hsv.a,
            string: this.setLetterCase("hsva(".concat(Math.round(hsv.h), ", ").concat(Math.round(hsv.s), "%, ").concat(Math.round(hsv.v), "%, ").concat(hsv.a.toFixed(2).toString(), ")"))
          },
          rgb: {
            r: rgb.r,
            g: rgb.g,
            b: rgb.b,
            string: this.setLetterCase("rgb(".concat(Math.round(rgb.r), ", ").concat(Math.round(rgb.g), ", ").concat(Math.round(rgb.b), ")"))
          },
          rgba: {
            r: rgb.r,
            g: rgb.g,
            b: rgb.b,
            a: rgb.a,
            string: this.setLetterCase("rgba(".concat(Math.round(rgb.r), ", ").concat(Math.round(rgb.g), ", ").concat(Math.round(rgb.b), ", ").concat(rgb.a.toFixed(2).toString(), ")"))
          },
          hex: this.setLetterCase(hex),
          hexa: this.setLetterCase(hexa)
        };
      }
    }, {
      key: "setColor",
      value: function setColor(colorString) {
        var newColor = this.parseColor(colorString);
        if (newColor === null) {
          return false;
        }
        this.hue = newColor.hsva.h;
        this.saturation = newColor.hsva.s;
        this.brightness = newColor.hsva.v;
        this.alpha = this.opacity ? newColor.hsva.a * 100 : 100;
        this.syncValues();
        return true;
      }
    }, {
      key: "setLetterCase",
      value: function setLetterCase(string) {
        if (typeof string !== "string") {
          return "";
        }
        return this.uppercase ? string.toUpperCase() : string.toLowerCase();
      }
    }, {
      key: "syncValues",
      value: function () {
        var _syncValues = _asyncToGenerator(_regeneratorRuntime().mark(function _callee20() {
          var currentColor;
          return _regeneratorRuntime().wrap(function _callee20$(_context20) {
            while (1) switch (_context20.prev = _context20.next) {
              case 0:
                currentColor = this.parseColor("hsva(".concat(this.hue, ", ").concat(this.saturation, "%, ").concat(this.brightness, "%, ").concat(this.alpha / 100, ")"));
                if (!(currentColor === null)) {
                  _context20.next = 3;
                  break;
                }
                return _context20.abrupt("return");
              case 3:
                if (this.format === "hsl") {
                  this.inputValue = this.opacity ? currentColor.hsla.string : currentColor.hsl.string;
                } else if (this.format === "rgb") {
                  this.inputValue = this.opacity ? currentColor.rgba.string : currentColor.rgb.string;
                } else if (this.format === "hsv") {
                  this.inputValue = this.opacity ? currentColor.hsva.string : currentColor.hsv.string;
                } else {
                  this.inputValue = this.opacity ? currentColor.hexa : currentColor.hex;
                }
                this.isSafeValue = true;
                this.value = this.inputValue;
                _context20.next = 8;
                return this.updateComplete;
              case 8:
                this.isSafeValue = false;
              case 9:
              case "end":
                return _context20.stop();
            }
          }, _callee20, this);
        }));
        function syncValues() {
          return _syncValues.apply(this, arguments);
        }
        return syncValues;
      }()
    }, {
      key: "handleAfterHide",
      value: function handleAfterHide() {
        this.previewButton.classList.remove("color-picker__preview-color--copied");
      }
    }, {
      key: "handleEyeDropper",
      value: function handleEyeDropper() {
        var _this37 = this;
        if (!hasEyeDropper) {
          return;
        }
        var eyeDropper = new EyeDropper();
        eyeDropper.open().then(function (colorSelectionResult) {
          var oldValue = _this37.value;
          _this37.setColor(colorSelectionResult.sRGBHex);
          if (_this37.value !== oldValue) {
            _this37.emit("sl-change");
            _this37.emit("sl-input");
          }
        })["catch"](function () {});
      }
    }, {
      key: "selectSwatch",
      value: function selectSwatch(color) {
        var oldValue = this.value;
        if (!this.disabled) {
          this.setColor(color);
          if (this.value !== oldValue) {
            this.emit("sl-change");
            this.emit("sl-input");
          }
        }
      }
    }, {
      key: "getHexString",
      value: function getHexString(hue, saturation, brightness) {
        var alpha = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 100;
        var color = new TinyColor("hsva(".concat(hue, ", ").concat(saturation, "%, ").concat(brightness, "%, ").concat(alpha / 100, ")"));
        if (!color.isValid) {
          return "";
        }
        return color.toHex8String();
      }
    }, {
      key: "stopNestedEventPropagation",
      value: function stopNestedEventPropagation(event) {
        event.stopImmediatePropagation();
      }
    }, {
      key: "handleFormatChange",
      value: function handleFormatChange() {
        this.syncValues();
      }
    }, {
      key: "handleOpacityChange",
      value: function handleOpacityChange() {
        this.alpha = 100;
      }
    }, {
      key: "handleValueChange",
      value: function handleValueChange(oldValue, newValue) {
        this.isEmpty = !newValue;
        if (!newValue) {
          this.hue = 0;
          this.saturation = 0;
          this.brightness = 100;
          this.alpha = 100;
        }
        if (!this.isSafeValue) {
          var newColor = this.parseColor(newValue);
          if (newColor !== null) {
            this.inputValue = this.value;
            this.hue = newColor.hsva.h;
            this.saturation = newColor.hsva.s;
            this.brightness = newColor.hsva.v;
            this.alpha = newColor.hsva.a * 100;
            this.syncValues();
          } else {
            this.inputValue = oldValue != null ? oldValue : "";
          }
        }
      }
    }, {
      key: "focus",
      value: function focus(options) {
        if (this.inline) {
          this.base.focus(options);
        } else {
          this.trigger.focus(options);
        }
      }
    }, {
      key: "blur",
      value: function blur() {
        var _a;
        var elementToBlur = this.inline ? this.base : this.trigger;
        if (this.hasFocus) {
          elementToBlur.focus({
            preventScroll: true
          });
          elementToBlur.blur();
        }
        if ((_a = this.dropdown) == null ? void 0 : _a.open) {
          this.dropdown.hide();
        }
      }
    }, {
      key: "getFormattedValue",
      value: function getFormattedValue() {
        var format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "hex";
        var currentColor = this.parseColor("hsva(".concat(this.hue, ", ").concat(this.saturation, "%, ").concat(this.brightness, "%, ").concat(this.alpha / 100, ")"));
        if (currentColor === null) {
          return "";
        }
        switch (format) {
          case "hex":
            return currentColor.hex;
          case "hexa":
            return currentColor.hexa;
          case "rgb":
            return currentColor.rgb.string;
          case "rgba":
            return currentColor.rgba.string;
          case "hsl":
            return currentColor.hsl.string;
          case "hsla":
            return currentColor.hsla.string;
          case "hsv":
            return currentColor.hsv.string;
          case "hsva":
            return currentColor.hsva.string;
          default:
            return "";
        }
      }
    }, {
      key: "checkValidity",
      value: function checkValidity() {
        return this.input.checkValidity();
      }
    }, {
      key: "getForm",
      value: function getForm() {
        return this.formControlController.getForm();
      }
    }, {
      key: "reportValidity",
      value: function reportValidity() {
        var _this38 = this;
        if (!this.inline && !this.validity.valid) {
          this.dropdown.show();
          this.addEventListener("sl-after-show", function () {
            return _this38.input.reportValidity();
          }, {
            once: true
          });
          if (!this.disabled) {
            this.formControlController.emitInvalidEvent();
          }
          return false;
        }
        return this.input.reportValidity();
      }
    }, {
      key: "setCustomValidity",
      value: function setCustomValidity(message) {
        this.input.setCustomValidity(message);
        this.formControlController.updateValidity();
      }
    }, {
      key: "render",
      value: function render() {
        var _this39 = this;
        var gridHandleX = this.saturation;
        var gridHandleY = 100 - this.brightness;
        var swatches = Array.isArray(this.swatches) ? this.swatches : this.swatches.split(";").filter(function (color) {
          return color.trim() !== "";
        });
        var colorPicker = x(_templateObject29 || (_templateObject29 = _taggedTemplateLiteral(["\n      <div\n        part=\"base\"\n        class=", "\n        aria-disabled=", "\n        aria-labelledby=\"label\"\n        tabindex=", "\n      >\n        ", "\n\n        <div\n          part=\"grid\"\n          class=\"color-picker__grid\"\n          style=", "\n          @pointerdown=", "\n          @touchmove=", "\n        >\n          <span\n            part=\"grid-handle\"\n            class=", "\n            style=", "\n            role=\"application\"\n            aria-label=\"HSV\"\n            tabindex=", "\n            @keydown=", "\n          ></span>\n        </div>\n\n        <div class=\"color-picker__controls\">\n          <div class=\"color-picker__sliders\">\n            <div\n              part=\"slider hue-slider\"\n              class=\"color-picker__hue color-picker__slider\"\n              @pointerdown=", "\n              @touchmove=", "\n            >\n              <span\n                part=\"slider-handle hue-slider-handle\"\n                class=\"color-picker__slider-handle\"\n                style=", "\n                role=\"slider\"\n                aria-label=\"hue\"\n                aria-orientation=\"horizontal\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"360\"\n                aria-valuenow=", "\n                tabindex=", "\n                @keydown=", "\n              ></span>\n            </div>\n\n            ", "\n          </div>\n\n          <button\n            type=\"button\"\n            part=\"preview\"\n            class=\"color-picker__preview color-picker__transparent-bg\"\n            aria-label=", "\n            style=", "\n            @click=", "\n          ></button>\n        </div>\n\n        <div class=\"color-picker__user-input\" aria-live=\"polite\">\n          <sl-input\n            part=\"input\"\n            type=\"text\"\n            name=", "\n            autocomplete=\"off\"\n            autocorrect=\"off\"\n            autocapitalize=\"off\"\n            spellcheck=\"false\"\n            value=", "\n            ?required=", "\n            ?disabled=", "\n            aria-label=", "\n            @keydown=", "\n            @sl-change=", "\n            @sl-input=", "\n            @sl-invalid=", "\n            @sl-blur=", "\n            @sl-focus=", "\n          ></sl-input>\n\n          <sl-button-group>\n            ", "\n            ", "\n          </sl-button-group>\n        </div>\n\n        ", "\n      </div>\n    "])), e$1({
          "color-picker": true,
          "color-picker--inline": this.inline,
          "color-picker--disabled": this.disabled,
          "color-picker--focused": this.hasFocus
        }), this.disabled ? "true" : "false", this.inline ? "0" : "-1", this.inline ? x(_templateObject30 || (_templateObject30 = _taggedTemplateLiteral(["\n              <sl-visually-hidden id=\"label\">\n                <slot name=\"label\">", "</slot>\n              </sl-visually-hidden>\n            "])), this.label) : null, o({
          backgroundColor: this.getHexString(this.hue, 100, 100)
        }), this.handleGridDrag, this.handleTouchMove, e$1({
          "color-picker__grid-handle": true,
          "color-picker__grid-handle--dragging": this.isDraggingGridHandle
        }), o({
          top: "".concat(gridHandleY, "%"),
          left: "".concat(gridHandleX, "%"),
          backgroundColor: this.getHexString(this.hue, this.saturation, this.brightness, this.alpha)
        }), o$2(this.disabled ? void 0 : "0"), this.handleGridKeyDown, this.handleHueDrag, this.handleTouchMove, o({
          left: "".concat(this.hue === 0 ? 0 : 100 / (360 / this.hue), "%")
        }), "".concat(Math.round(this.hue)), o$2(this.disabled ? void 0 : "0"), this.handleHueKeyDown, this.opacity ? x(_templateObject31 || (_templateObject31 = _taggedTemplateLiteral(["\n                  <div\n                    part=\"slider opacity-slider\"\n                    class=\"color-picker__alpha color-picker__slider color-picker__transparent-bg\"\n                    @pointerdown=\"", "\"\n                    @touchmove=", "\n                  >\n                    <div\n                      class=\"color-picker__alpha-gradient\"\n                      style=", "\n                    ></div>\n                    <span\n                      part=\"slider-handle opacity-slider-handle\"\n                      class=\"color-picker__slider-handle\"\n                      style=", "\n                      role=\"slider\"\n                      aria-label=\"alpha\"\n                      aria-orientation=\"horizontal\"\n                      aria-valuemin=\"0\"\n                      aria-valuemax=\"100\"\n                      aria-valuenow=", "\n                      tabindex=", "\n                      @keydown=", "\n                    ></span>\n                  </div>\n                "])), this.handleAlphaDrag, this.handleTouchMove, o({
          backgroundImage: "linear-gradient(\n                          to right,\n                          ".concat(this.getHexString(this.hue, this.saturation, this.brightness, 0), " 0%,\n                          ").concat(this.getHexString(this.hue, this.saturation, this.brightness, 100), " 100%\n                        )")
        }), o({
          left: "".concat(this.alpha, "%")
        }), Math.round(this.alpha), o$2(this.disabled ? void 0 : "0"), this.handleAlphaKeyDown) : "", this.localize.term("copy"), o({
          "--preview-color": this.getHexString(this.hue, this.saturation, this.brightness, this.alpha)
        }), this.handleCopy, this.name, this.isEmpty ? "" : this.inputValue, this.required, this.disabled, this.localize.term("currentValue"), this.handleInputKeyDown, this.handleInputChange, this.handleInputInput, this.handleInputInvalid, this.stopNestedEventPropagation, this.stopNestedEventPropagation, !this.noFormatToggle ? x(_templateObject32 || (_templateObject32 = _taggedTemplateLiteral(["\n                  <sl-button\n                    part=\"format-button\"\n                    aria-label=", "\n                    exportparts=\"\n                      base:format-button__base,\n                      prefix:format-button__prefix,\n                      label:format-button__label,\n                      suffix:format-button__suffix,\n                      caret:format-button__caret\n                    \"\n                    @click=", "\n                    @sl-blur=", "\n                    @sl-focus=", "\n                  >\n                    ", "\n                  </sl-button>\n                "])), this.localize.term("toggleColorFormat"), this.handleFormatToggle, this.stopNestedEventPropagation, this.stopNestedEventPropagation, this.setLetterCase(this.format)) : "", hasEyeDropper ? x(_templateObject33 || (_templateObject33 = _taggedTemplateLiteral(["\n                  <sl-button\n                    part=\"eye-dropper-button\"\n                    exportparts=\"\n                      base:eye-dropper-button__base,\n                      prefix:eye-dropper-button__prefix,\n                      label:eye-dropper-button__label,\n                      suffix:eye-dropper-button__suffix,\n                      caret:eye-dropper-button__caret\n                    \"\n                    @click=", "\n                    @sl-blur=", "\n                    @sl-focus=", "\n                  >\n                    <sl-icon\n                      library=\"system\"\n                      name=\"eyedropper\"\n                      label=", "\n                    ></sl-icon>\n                  </sl-button>\n                "])), this.handleEyeDropper, this.stopNestedEventPropagation, this.stopNestedEventPropagation, this.localize.term("selectAColorFromTheScreen")) : "", swatches.length > 0 ? x(_templateObject34 || (_templateObject34 = _taggedTemplateLiteral(["\n              <div part=\"swatches\" class=\"color-picker__swatches\">\n                ", "\n              </div>\n            "])), swatches.map(function (swatch) {
          var parsedColor = _this39.parseColor(swatch);
          if (!parsedColor) {
            console.error("Unable to parse swatch color: \"".concat(swatch, "\""), _this39);
            return "";
          }
          return x(_templateObject35 || (_templateObject35 = _taggedTemplateLiteral(["\n                    <div\n                      part=\"swatch\"\n                      class=\"color-picker__swatch color-picker__transparent-bg\"\n                      tabindex=", "\n                      role=\"button\"\n                      aria-label=", "\n                      @click=", "\n                      @keydown=", "\n                    >\n                      <div\n                        class=\"color-picker__swatch-color\"\n                        style=", "\n                      ></div>\n                    </div>\n                  "])), o$2(_this39.disabled ? void 0 : "0"), swatch, function () {
            return _this39.selectSwatch(swatch);
          }, function (event) {
            return !_this39.disabled && event.key === "Enter" && _this39.setColor(parsedColor.hexa);
          }, o({
            backgroundColor: parsedColor.hexa
          }));
        })) : "");
        if (this.inline) {
          return colorPicker;
        }
        return x(_templateObject36 || (_templateObject36 = _taggedTemplateLiteral(["\n      <sl-dropdown\n        class=\"color-dropdown\"\n        aria-disabled=", "\n        .containing-element=", "\n        ?disabled=", "\n        ?hoist=", "\n        @sl-after-hide=", "\n      >\n        <button\n          part=\"trigger\"\n          slot=\"trigger\"\n          class=", "\n          style=", "\n          type=\"button\"\n        >\n          <sl-visually-hidden>\n            <slot name=\"label\">", "</slot>\n          </sl-visually-hidden>\n        </button>\n        ", "\n      </sl-dropdown>\n    "])), this.disabled ? "true" : "false", this, this.disabled, this.hoist, this.handleAfterHide, e$1({
          "color-dropdown__trigger": true,
          "color-dropdown__trigger--disabled": this.disabled,
          "color-dropdown__trigger--small": this.size === "small",
          "color-dropdown__trigger--medium": this.size === "medium",
          "color-dropdown__trigger--large": this.size === "large",
          "color-dropdown__trigger--empty": this.isEmpty,
          "color-dropdown__trigger--focused": this.hasFocus,
          "color-picker__transparent-bg": true
        }), o({
          color: this.getHexString(this.hue, this.saturation, this.brightness, this.alpha)
        }), this.label, colorPicker);
      }
    }]);
  }(ShoelaceElement);
  SlColorPicker.styles = [component_styles_default, color_picker_styles_default];
  SlColorPicker.dependencies = {
    "sl-button-group": SlButtonGroup,
    "sl-button": SlButton,
    "sl-dropdown": SlDropdown,
    "sl-icon": SlIcon,
    "sl-input": SlInput,
    "sl-visually-hidden": SlVisuallyHidden
  };
  __decorateClass([e$4('[part~="base"]')], SlColorPicker.prototype, "base", 2);
  __decorateClass([e$4('[part~="input"]')], SlColorPicker.prototype, "input", 2);
  __decorateClass([e$4(".color-dropdown")], SlColorPicker.prototype, "dropdown", 2);
  __decorateClass([e$4('[part~="preview"]')], SlColorPicker.prototype, "previewButton", 2);
  __decorateClass([e$4('[part~="trigger"]')], SlColorPicker.prototype, "trigger", 2);
  __decorateClass([r()], SlColorPicker.prototype, "hasFocus", 2);
  __decorateClass([r()], SlColorPicker.prototype, "isDraggingGridHandle", 2);
  __decorateClass([r()], SlColorPicker.prototype, "isEmpty", 2);
  __decorateClass([r()], SlColorPicker.prototype, "inputValue", 2);
  __decorateClass([r()], SlColorPicker.prototype, "hue", 2);
  __decorateClass([r()], SlColorPicker.prototype, "saturation", 2);
  __decorateClass([r()], SlColorPicker.prototype, "brightness", 2);
  __decorateClass([r()], SlColorPicker.prototype, "alpha", 2);
  __decorateClass([n$2()], SlColorPicker.prototype, "value", 2);
  __decorateClass([defaultValue()], SlColorPicker.prototype, "defaultValue", 2);
  __decorateClass([n$2()], SlColorPicker.prototype, "label", 2);
  __decorateClass([n$2()], SlColorPicker.prototype, "format", 2);
  __decorateClass([n$2({
    type: Boolean,
    reflect: true
  })], SlColorPicker.prototype, "inline", 2);
  __decorateClass([n$2({
    reflect: true
  })], SlColorPicker.prototype, "size", 2);
  __decorateClass([n$2({
    attribute: "no-format-toggle",
    type: Boolean
  })], SlColorPicker.prototype, "noFormatToggle", 2);
  __decorateClass([n$2()], SlColorPicker.prototype, "name", 2);
  __decorateClass([n$2({
    type: Boolean,
    reflect: true
  })], SlColorPicker.prototype, "disabled", 2);
  __decorateClass([n$2({
    type: Boolean
  })], SlColorPicker.prototype, "hoist", 2);
  __decorateClass([n$2({
    type: Boolean
  })], SlColorPicker.prototype, "opacity", 2);
  __decorateClass([n$2({
    type: Boolean
  })], SlColorPicker.prototype, "uppercase", 2);
  __decorateClass([n$2()], SlColorPicker.prototype, "swatches", 2);
  __decorateClass([n$2({
    reflect: true
  })], SlColorPicker.prototype, "form", 2);
  __decorateClass([n$2({
    type: Boolean,
    reflect: true
  })], SlColorPicker.prototype, "required", 2);
  __decorateClass([watch("format", {
    waitUntilFirstUpdate: true
  })], SlColorPicker.prototype, "handleFormatChange", 1);
  __decorateClass([watch("opacity", {
    waitUntilFirstUpdate: true
  })], SlColorPicker.prototype, "handleOpacityChange", 1);
  __decorateClass([watch("value")], SlColorPicker.prototype, "handleValueChange", 1);
  SlColorPicker.define("sl-color-picker");
})();
